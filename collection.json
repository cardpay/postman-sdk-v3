{
  "collection": {
    "info": {
      "_postman_id": "9dacc77f-6ab0-4094-82b5-d6b2db8b4045",
      "name": "Unlimit REST API (3.0)",
      "description": "## Installation\n\n1. Install Postman 8.5+\n2. Download and import [collection file](https://raw.githubusercontent.com/cardpay/postman-sdk-v3/master/collection.json)\n3. Download and import [environment file](https://raw.githubusercontent.com/cardpay/postman-sdk-v3/master/sandbox.json)\n    \n\n## API usage\n\nExecute any section from Postman collection  \nFor more information about API v3 please visit [documentation web-site](https://integration.unlimit.com).\n\n## Notes\n\n- constants ('UNLIMIT_API_URL', 'PAYMENTPAGE_TERMINAL_CODE' and so on) are [Postman environment variables](https://learning.postman.com/docs/postman/variables-and-environments/variables/), defined for 'sandbox' environment.\n- following variables are defined for collection scope _(click 'Edit' button on 'unlimit-api' collection and see 'Pre-request Script' section)_:\n    - request_name — name of the test that is being executed, using for 'merchant_order.description' field value, in request's 'Body' section\n    - expiration — customer's card expiration date, using for 'card_account.card.expiration' field value, in gateway request 'Body' section. Format: mm/yyyy\n    - tokens — variable with 'obtain' function which is calling in order to get API authorization tokens\n- other variables ('', '', etc) are defined in 'Pre-request Script' and 'Tests' sections for particular request.",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2025-02-14T05:47:57.000Z",
      "createdAt": "2020-02-20T08:17:14.000Z",
      "lastUpdatedBy": "10462328",
      "uid": "10462328-9dacc77f-6ab0-4094-82b5-d6b2db8b4045"
    },
    "item": [
      {
        "name": "Authorization",
        "item": [
          {
            "name": "Get authorization tokens",
            "item": [
              {
                "name": "Get authorization token",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cda8100-43d1-41d1-b96d-9e4c21f27d33",
                      "exec": [
                        "pm.test(\"Successful response\", function () {",
                        "    pm.response.to.have.status(200);",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('access_token');",
                        "    pm.expect(response).to.have.property('refresh_token');",
                        "    pm.expect(response).to.have.property('expires_in');",
                        "    pm.expect(response).to.have.property('refresh_expires_in');",
                        "",
                        "    pm.variables.set('access_token', response.access_token);",
                        "    pm.variables.set('refresh_token', response.refresh_token);",
                        "});",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "216904b4-7bcb-4ccb-bc6c-b38c29e33d71",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/x-www-form-urlencoded"
                    }
                  ],
                  "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                      {
                        "key": "grant_type",
                        "value": "password",
                        "type": "text"
                      },
                      {
                        "key": "terminal_code",
                        "value": "{{PAYMENTPAGE_TERMINAL_CODE}}",
                        "type": "text"
                      },
                      {
                        "key": "password",
                        "value": "{{PAYMENTPAGE_PASSWORD}}",
                        "type": "text"
                      }
                    ]
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/auth/token",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "auth",
                      "token"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-216904b4-7bcb-4ccb-bc6c-b38c29e33d71"
              }
            ],
            "id": "f86c2b90-083b-4486-9174-b8094b1d50b1",
            "description": "## Get authorization tokens for every transaction request\n\n- In order to perform any API call the access token must be obtained.\n- To do this Merchant needs to send POST request to the API token endpoint.\n- As a result Merchant will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values.\n- After receiving access token (one from the pair) merchant should use in one create, update or get transaction information request\n- Merchant can receiving new pair of tokens (access and refresh tokens) for every transaction request and don't use refresh token for tokens pair refreshing\n    \n\n## Get authorization tokens for more than one request\n\n- After receiving access token merchant can save access and refresh tokens in his site\n- Merchant can use this pair of tokens for more than one transaction request\n- After lifetime of access token is ended, merchant can use refresh token for refreshing (getting new pair) tokens (see more in Refresh token case below)\n- If a lifetime of refresh token is ended merchant should send new request to the API token endpoint to get new pair of tokens\n- As a result Merchant will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "f324607e-3afb-4075-8447-ca4021350953"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "58fed0ea-0275-47eb-a1fe-e84cbc779258"
                }
              }
            ],
            "uid": "10462328-f86c2b90-083b-4486-9174-b8094b1d50b1"
          },
          {
            "name": "Refresh token",
            "item": [
              {
                "name": "Refresh authorization token",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2625fb80-ac36-4624-9ce0-6bfaa757648b",
                      "exec": [
                        "pm.test(\"Successful response\", function () {",
                        "    pm.response.to.have.status(200);",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('access_token');",
                        "    pm.expect(response).to.have.property('refresh_token');",
                        "    pm.expect(response).to.have.property('expires_in');",
                        "    pm.expect(response).to.have.property('refresh_expires_in');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "117285cb-0575-469b-9b63-e76be50b4afa",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/x-www-form-urlencoded"
                    }
                  ],
                  "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                      {
                        "key": "grant_type",
                        "value": "refresh_token",
                        "type": "text"
                      },
                      {
                        "key": "refresh_token",
                        "value": "{{refresh_token}}",
                        "type": "text"
                      }
                    ]
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/auth/token",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "auth",
                      "token"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-117285cb-0575-469b-9b63-e76be50b4afa"
              }
            ],
            "id": "a43703a7-a9ef-4d94-962f-89c6435b1b4d",
            "description": "- Merchant can send a POST request to the **/api/auth/token** endpoint and specify refresh token as a request param.\n- A result of this request will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values\n- If a lifetime of refresh token is ended merchant should send new request to the API token endpoint to get new pair of tokens (see 'Get authorization token' use case)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "8a2b1fea-5c16-4acb-b51d-25c231eb6d1a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "6ef2ab5d-eda3-45b6-8c3f-fba88ecac078"
                }
              }
            ],
            "uid": "10462328-a43703a7-a9ef-4d94-962f-89c6435b1b4d"
          },
          {
            "name": "Get authorization tokens for more than one request",
            "item": [
              {
                "name": "Create pre-authorized payment (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f16b6361-598a-49d0-bccd-d6ca5bee84b9",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        "pm.variables.set('request_time', new Date());",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fe0407a-8496-49ad-b697-306cf1a92c78",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_id_to_complete', response.payment_data.id);",
                        "",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "",
                        "    postman.setNextRequest('Get payment by payment id (reusable tokens)');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "a47a7f97-4bec-4821-a050-901b170ffb22",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-a47a7f97-4bec-4821-a050-901b170ffb22"
              },
              {
                "name": "Get payment by payment id (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcb91f53-a0ae-4c45-8000-d8c53e62a8a1",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd5a0777-fe7d-4795-b467-739b95bfac3d",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.expect(response.payment_data.id).to.equal(pm.collectionVariables.get('payment_id_to_complete'));",
                        "    ",
                        "    postman.setNextRequest('Complete pre-authorized payment (reusable tokens)');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "f833ddfb-dd26-4aea-be26-3700502c0073",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-f833ddfb-dd26-4aea-be26-3700502c0073"
              },
              {
                "name": "Complete pre-authorized payment (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55f0d1dd-0f0f-4435-83f4-2a4411849b66",
                      "exec": [
                        "pm.expect(pm.variables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "pm.variables.set(\"request_time\", new Date());",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c40004c7-d1a4-421b-876c-3e7279dbbe55",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok",
                        "    pm.response.to.have.jsonBody()",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('COMPLETED');",
                        "    ",
                        "    postman.setNextRequest('Get payment by payment id again (reusable tokens)');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "8f18694d-712a-4a42-88af-5e2048bb29f3",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-8f18694d-712a-4a42-88af-5e2048bb29f3"
              },
              {
                "name": "Get payment by payment id again (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9d4c1cb-856a-4723-90c4-bf0890152599",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e425d46c-4193-46ff-b455-1603e51f934a",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.expect(response.payment_data.id).to.equal(pm.variables.get('payment_id_to_complete'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "6d0348b4-03ab-4b59-b43a-659ba72c51fc",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-6d0348b4-03ab-4b59-b43a-659ba72c51fc"
              }
            ],
            "id": "cd504d36-1a4c-4617-a8f7-0b2e3a042795",
            "description": "- After receiving access token merchant can save access and refresh tokens on his side\n- Merchant can use this pair of tokens for more than one transaction request\n- After lifetime of access token is ended, merchant can use refresh token for refreshing (getting new pair) tokens (see more in Refresh token case below)\n- If a lifetime of refresh token is ended merchant should send new request to the API token endpoint to get new pair of tokens\n- As a result Merchant will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values\n- See 'Pre-request Scripts' section for 'reusable_tokens' function",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe8529f3-49a2-4af2-9ae7-c95df310dc04",
                  "type": "text/javascript",
                  "exec": [
                    "pm.collectionVariables.set('reusable_tokens', '(' + function () {",
                    "    return {",
                    "        obtain: function (terminal_code, password) {",
                    "            var moment = require('moment');",
                    "            var TOKEN_MIN_VALIDITY = 100;",
                    "            var unlimit_api_url = pm.environment.get('UNLIMIT_API_URL');",
                    "",
                    "            function unsetVar(name) {",
                    "                pm.collectionVariables.unset(`${name}_${terminal_code}`);",
                    "            }",
                    "",
                    "            function setVar(name, value) {",
                    "                pm.collectionVariables.set(`${name}_${terminal_code}`, value);",
                    "            }",
                    "",
                    "            function getVar(name, defValue) {",
                    "                return pm.collectionVariables.get(`${name}_${terminal_code}`) || defValue;",
                    "            }",
                    "",
                    "            var now = moment().unix();",
                    "            var expires_in = getVar('expires_in', 0);",
                    "            var refresh_expires_in = getVar('refresh_expires_in', 0);",
                    "",
                    "            if (expires_in - now >= TOKEN_MIN_VALIDITY && getVar('access_token')) {",
                    "                setVar('access_token', getVar('access_token'));",
                    "",
                    "            } else {",
                    "                var refresh_token = getVar('refresh_token');",
                    "                var request_body = `grant_type=refresh_token&refresh_token=${refresh_token}`;",
                    "",
                    "                if (refresh_expires_in - now < TOKEN_MIN_VALIDITY || !refresh_token) {",
                    "                    request_body = `grant_type=password&terminal_code=${terminal_code}&password=${password}`;",
                    "                }",
                    "",
                    "                unsetVar('access_token');",
                    "                unsetVar('refresh_token');",
                    "                unsetVar('expires_in');",
                    "                unsetVar('refresh_expires_in');",
                    "",
                    "                pm.sendRequest({",
                    "                    url: `${unlimit_api_url}/api/auth/token`,",
                    "                    method: 'POST',",
                    "                    header: 'Content-Type:application/x-www-form-urlencoded',",
                    "                    body: {",
                    "                        mode: 'raw',",
                    "                        raw: request_body",
                    "                    }",
                    "",
                    "                }, (err, res) => {",
                    "                    if (err || res.code !== 200) {",
                    "                        throw new Error('Authentication Error');",
                    "                    }",
                    "",
                    "                    var response = res.json();",
                    "                    setVar('access_token', response.access_token);",
                    "                    setVar('refresh_token', response.refresh_token);",
                    "                    setVar('expires_in', response.expires_in + moment().unix());",
                    "                    setVar('refresh_expires_in', response.refresh_expires_in + moment().unix());",
                    "                });",
                    "            }",
                    "        }",
                    "    }",
                    "} + ')();');"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b69c1c6-4ce0-4ce6-b348-2cc4dea21527",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "uid": "10462328-cd504d36-1a4c-4617-a8f7-0b2e3a042795"
          },
          {
            "name": "Authorization through signature",
            "item": [
              {
                "name": "Create payment through signature",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f16b6361-598a-49d0-bccd-d6ca5bee84b9",
                      "exec": [
                        "pm.collectionVariables.set('guid', pm.variables.replaceIn('{{$guid}}'));",
                        "pm.collectionVariables.set('time', new Date().toISOString());",
                        "",
                        "let uuid = require('uuid');",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);",
                        "",
                        "let api_client_id = pm.variables.get('SIGNATURE_API_CLIENT_ID');",
                        "let api_key = pm.variables.get('SIGNATURE_API_KEY');",
                        "let path = '/' + pm.request.url.path.slice(0).join('/');",
                        "let body = pm.collectionVariables.replaceIn(pm.variables.replaceIn(pm.request.body));",
                        "let xsign = '' + require(\"crypto-js\").SHA256((api_client_id + path + body + '' + api_key));",
                        "pm.collectionVariables.set('signature_x_sign', xsign);",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fe0407a-8496-49ad-b697-306cf1a92c78",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        " ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "db440bed-20cb-4c67-a029-813d1c1dbc5d",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "noauth"
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Authorization",
                      "value": "Signature {{GATEWAY_TERMINAL_CODE}},{{$guid}},{{SIGNATURE_API_CLIENT_ID}},{{signature_x_sign}}"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{guid}}\",\n        \"time\": \"{{time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"User-friendly empowering standardization\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{CUSTOMER_PHONE}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{HOLDER}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-db440bed-20cb-4c67-a029-813d1c1dbc5d"
              }
            ],
            "id": "625a9992-f187-45f2-8e29-2a210241876b",
            "description": "In order to perform any API call, merchant can use authorization through signature. API client ID and API key allows to get access to all the merchants’ wallets available in the merchant group.  \nIn order to use this type of authorization, the merchant should contact Unlimit manager.",
            "uid": "10462328-625a9992-f187-45f2-8e29-2a210241876b"
          }
        ],
        "id": "3da51624-aea8-4449-bf9b-1980aabe59e2",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "5f9f66f1-361c-4202-a729-71816a4f939a"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "e9c84fed-52da-4dee-8b7d-697a16385e64"
            }
          }
        ],
        "uid": "10462328-3da51624-aea8-4449-bf9b-1980aabe59e2"
      },
      {
        "name": "Payments (cards)",
        "item": [
          {
            "name": "Create payment (payment page)",
            "item": [
              {
                "name": "Create payment (payment page)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bed6479d-a890-4ff6-8387-767713de4d17",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f324adde-9c89-4573-9bc6-32973b9b41b8",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "e19a4c47-64c1-471d-b79f-d57f255a1540",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-e19a4c47-64c1-471d-b79f-d57f255a1540"
              }
            ],
            "id": "58e60f19-bb1b-4579-ae3c-c4514ec510e5",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment, [see more](https://integration.unlimit.com/#createPayment).\n- Payment is created in the system and redirect URL is returned to Merchant in JSON format\n- Card data is filled in by customer on hosted payment page (asynchronous process - out of scope of Postman collection)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "b81bd6ee-49ba-492e-a636-afffcaa6d74a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "d56f1fcf-6a76-48ef-beaa-c4919729e773"
                }
              }
            ],
            "uid": "10462328-58e60f19-bb1b-4579-ae3c-c4514ec510e5"
          },
          {
            "name": "Create payment without 3-D Secure",
            "item": [
              {
                "name": "Create payment (without 3-D Secure, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "7a1952aa-fc9f-456d-bc16-39dd9c4573ad",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-7a1952aa-fc9f-456d-bc16-39dd9c4573ad"
              }
            ],
            "id": "a976dca0-3945-4638-ae7c-a3a1ea37afe5",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment, [see more](https://integration.unlimit.com/#createPayment).\n- Payment is created in the system and redirect URL is returned to Merchant in JSON format",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "36b91583-75e5-42c1-8591-f8e8ecb4a6f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "47fedb83-0b4f-4210-8cda-7b108ac5d55d"
                }
              }
            ],
            "uid": "10462328-a976dca0-3945-4638-ae7c-a3a1ea37afe5"
          },
          {
            "name": "Create payment with 3-D Secure 2",
            "item": [
              {
                "name": "Create payment (3-D Secure 2)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73505a4b-d55f-42d2-8dcf-d1f606d563b2",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "276a4dd0-d77c-498e-b8a3-08393a096c80",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok",
                        "    pm.response.to.have.jsonBody()",
                        "    ",
                        "    var response = pm.response.json()",
                        "    pm.expect(response).to.have.property('redirect_url')",
                        "})",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "1024360c-bdb1-4188-9b60-f06e8b42adb5",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"trans_type\": \"01\"\n    },\n    \"card_account\": {\n        \"acct_type\": \"01\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"+1 123456789\",\n        \"work_phone\": \"+1 987654321\",\n        \"home_phone\": \"+1 462526747\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-1024360c-bdb1-4188-9b60-f06e8b42adb5"
              }
            ],
            "id": "e98d537a-ecd7-4d34-b7f9-a51cc8a972fd",
            "description": "* Merchant makes POST request in JSON format (with list of special 3-D Secure 2 parameters in request) to endpoint **/api/payments** to create new payment \n* Payment is created in the system and redirect URL is returned to Merchant in JSON format\n* The results of 3-D Secure 2 verification depend on the card provided in request and can be received only after customer redirects to redirect URL and passes 3-D Secure (asynchronous process - out of scope of Postman collection)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "aa050c15-9b43-4dc5-92b6-52c273033238"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "32b0f395-1adb-40cb-9bfc-2394b363be9b"
                }
              }
            ],
            "uid": "10462328-e98d537a-ecd7-4d34-b7f9-a51cc8a972fd"
          },
          {
            "name": "Reverse payment (void)",
            "item": [
              {
                "name": "Create pre-authorized payment to reverse",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af18803d-0977-448d-ae73-3ab034b3388a",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee5b229e-3d38-4dcb-b5e1-736bdd9c7091",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    ",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_id_to_reverse', response.payment_data.id);",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    postman.setNextRequest('Reverse pre-authorized payment');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "a1a2adb1-7381-445b-b943-7e3ca6db5cb9",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-a1a2adb1-7381-445b-b943-7e3ca6db5cb9"
              },
              {
                "name": "Reverse pre-authorized payment",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff50a88d-1788-461a-940c-46d889a5a13c",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_reverse')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5aa9a46e-63a3-4479-a890-57fa3b872ca4",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    ",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('VOIDED');",
                        "})"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "17188031-7a37-4846-ad93-aff478811db4",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"REVERSE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_reverse}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_reverse}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-17188031-7a37-4846-ad93-aff478811db4"
              }
            ],
            "id": "4e586676-c021-4526-86fc-6565d5f078da",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment, [see more](https://integration.unlimit.com/#createPayment).\n- Merchant receives callback with transaction result information (with payment id)\n- Merchant makes PATCH request in JSON format with payment id and payment_data.status_to='REVERSE' to **/api/payments/{payment_id}** to reverse (void) payment, [see more](https://integration.unlimit.com/#updatePayment).",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "24b5d0c7-ddea-4ecb-88e4-a9e86df326d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "8850e862-fe7f-482d-bcad-efe437449ac0"
                }
              }
            ],
            "uid": "10462328-4e586676-c021-4526-86fc-6565d5f078da"
          },
          {
            "name": "Create pre-authorised payment",
            "item": [
              {
                "name": "Create pre-authorized payment",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "986d2ea7-3ca9-45d5-9f81-da8505ff383a",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.variables.set('merchant_order_id', merchant_order_id);",
                        "pm.variables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa27e67c-2ab1-4561-b73b-9e3009c8bb10",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_id_to_complete', response.payment_data.id);",
                        "",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "",
                        "    postman.setNextRequest('Complete pre-authorized payment');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "668ee06f-5c4e-4d61-bdf2-c3baadf66ddd",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-668ee06f-5c4e-4d61-bdf2-c3baadf66ddd"
              },
              {
                "name": "Complete pre-authorized payment",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19a4cc3a-2213-444f-9c96-d5927dcbfda1",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fed742e8-e696-446f-a316-f8c7c82be93c",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok",
                        "    pm.response.to.have.jsonBody()",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('COMPLETED');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "1dd02330-6a25-4599-97ca-fb9fb1cc38e2",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-1dd02330-6a25-4599-97ca-fb9fb1cc38e2"
              }
            ],
            "id": "ff4a1e82-b559-4b43-ab98-9e663c8e00f9",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment with parameter preauth='true', [see more](https://integration.unlimit.com/#createPayment)\n- Preauth authorization payment is created in the system and redirect URL is returned to Merchant in JSON format (payment page URL)\n- Merchant redirects Customer to the payment page with provided URL\n- Merchant can complete or reverse (void) preauthorized payment using PATCH request in JSON format with payment id and payment_data.status_to='REVERSE' or \"COMPLETE\" to **/api/payments/{payment_id}**\n- Merchant receives response with update payment result information (status='VOIDED' or 'COMPLETED')\n- If merchant doesn't send complete or reverse request ([see more](https://integration.unlimit.com/#updatePayment)) payment will be completed automatically in 7 calendar days\n- Amount in completion update request can be less or more than preauthorized amount in first request",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "a3811576-3586-4eea-bdf7-ff8dc2d04950"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "f8585be3-5148-46ab-8d90-ea7dd0c5c8c0"
                }
              }
            ],
            "uid": "10462328-ff4a1e82-b559-4b43-ab98-9e663c8e00f9"
          },
          {
            "name": "Create payment with card token",
            "item": [
              {
                "name": "Create payment with card tokenization",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b97773ed-15fa-4ce2-92fa-4b12a58e9a4f",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3574e484-9a0f-4074-8001-1c7df9f77b9f",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.collectionVariables.set('payment_id_for_card_token', response.payment_data.id);",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    postman.setNextRequest('Get payment by id for card token');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "8e819f5d-dad5-4c1a-b22f-f14f8e771e69",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"generate_token\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-8e819f5d-dad5-4c1a-b22f-f14f8e771e69"
              },
              {
                "name": "Get payment by id for card token",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8221207d-7606-45eb-ad14-1b49f40f4413",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_for_card_token')).to.not.be.undefined;",
                        "",
                        "postman.setNextRequest('Create payment with card token');"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7da8c7d3-d74e-4a29-b665-6a816f6802a5",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('card_account');",
                        "    pm.expect(response.card_account).to.have.property('token');",
                        "    pm.collectionVariables.set('card_token', response.card_account.token);",
                        "    ",
                        "    postman.setNextRequest('Create payment with card token');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "8ab3fab2-7a5b-4912-8114-cb541c5a2a43",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_for_card_token}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_for_card_token}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-8ab3fab2-7a5b-4912-8114-cb541c5a2a43"
              },
              {
                "name": "Create payment with card token",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51992566-c7f1-4d75-902d-609d31dca75e",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "pm.expect(pm.collectionVariables.get('card_token')).to.not.be.undefined;",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d45750db-bce3-4d0b-8222-34f6554545cc",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "   ",
                        "    postman.setNextRequest('Get payment by merchant order id');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "b204f565-9974-41a6-acae-6f72885701df",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"card_account\": {\n        \"token\": \"{{card_token}}\",\n        \"card\": {\n        \t\"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-b204f565-9974-41a6-acae-6f72885701df"
              }
            ],
            "id": "abf9f898-580d-4dec-864e-199381d79c2b",
            "description": "- Merchant makes POST request in JSON format (with payment_data.generate_token parameter in request) to endpoint **/api/payments** to create new payment with card tokenization\n- Payment is created in the system and redirect URL is returned to Merchant in JSON format (payment page URL)\n- Merchant redirects Customer to the payment page (Unlimit or Merchant site) with provided URL\n- After successful transaction merchant can use card token (from callback) in the next transactions",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "id": "e3e5429d-1eb3-4ded-acbd-f1f98e25593f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "38dbb10a-59d8-4530-ad80-97ef2b5e6681"
                }
              }
            ],
            "uid": "10462328-abf9f898-580d-4dec-864e-199381d79c2b"
          },
          {
            "name": "Get payments list",
            "item": [
              {
                "name": "Get payment by merchant order id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7f69ffa-a7f7-4de0-a13d-ba320a26453a",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67f2ccd1-29c7-4327-8c54-554074681bba",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('data');",
                        "    ",
                        "    pm.collectionVariables.set('last_payment_id', response.data[0].payment_data.id);",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "69426992-646b-428a-9538-cb94f4d597d4",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "merchant_order_id",
                        "value": "{{last_merchant_order_id}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-69426992-646b-428a-9538-cb94f4d597d4"
              },
              {
                "name": "Get payments information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "696fb910-5b14-410b-8e62-3733c9bc710a",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0e0f99b-05a0-4ec0-9119-ac66358ddecb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('data');",
                        "    pm.expect(response).to.have.property('has_more');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "d24f2268-6faf-4176-b3b1-88fad384e47b",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "max_count",
                        "value": "5"
                      },
                      {
                        "key": "currency",
                        "value": "{{TERMINAL_CURRENCY}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-d24f2268-6faf-4176-b3b1-88fad384e47b"
              }
            ],
            "id": "97b81426-3dd0-44e3-a38a-425426ee603e",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payments) to get information about payments list, [see more](https://integration.unlimit.com/#getPayments)\n- Merchant receives GET response about transactions (payments list)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "0fec225b-59f1-4996-8300-550f77699aa7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "3b16e2fe-40ea-4874-902d-b78e88fff4c2"
                }
              }
            ],
            "uid": "10462328-97b81426-3dd0-44e3-a38a-425426ee603e"
          },
          {
            "name": "Get payment by payment id",
            "item": [
              {
                "name": "Get payment by payment id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1edfea5-d0f5-4e78-9109-7aeda314c814",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_payment_id')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06268d37-0364-482d-8af3-7ee735d8ef62",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.expect(response.payment_data.id).to.equal(pm.collectionVariables.get('last_payment_id'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "bc296873-a616-492b-9d24-0775740b6892",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{last_payment_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{last_payment_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-bc296873-a616-492b-9d24-0775740b6892"
              }
            ],
            "id": "84435173-e77d-4d78-b6d6-69e51c06a1d8",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payments/{payment_id}) for getting information about payment by payment id, [see more](https://integration.unlimit.com/#getPayment)\n- Merchant receives GET response about transaction (payment) result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "d701a6db-9610-4c0a-9186-4d821e1d3b91"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "43db0711-9c92-4f51-8fb1-eb1fa5e5a0c8"
                }
              }
            ],
            "uid": "10462328-84435173-e77d-4d78-b6d6-69e51c06a1d8"
          },
          {
            "name": "Create installment payment (one-phase)",
            "item": [
              {
                "name": "Create issuer financed installment payment (one-phase)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58c7c3e5-0b6f-4706-bff2-d28a2ec4ca1a",
                      "exec": [
                        "pm.test(\"Successful request\", function () {\r",
                        "    pm.response.to.be.ok;\r",
                        "    pm.response.to.have.jsonBody();\r",
                        "    \r",
                        "    var response = pm.response.json();\r",
                        "    pm.expect(response).to.have.property('redirect_url');\r",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0cddd46-3e6c-4f1f-90e1-8162f04a24b0",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                        "\r",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "fb1d3720-0c28-44da-9fdb-ad6db9825e29",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"request\": {\r\n        \"id\": \"{{$guid}}\",\r\n        \"time\": \"{{request_time}}\"\r\n    },\r\n    \"merchant_order\": {\r\n        \"id\": \"{{$randomUUID}}\",\r\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\r\n    },\r\n    \"payment_method\": \"BANKCARD\",\r\n    \"payment_data\": {\r\n        \"amount\": \"12.34\",\r\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\r\n        \"installment_type\": \"IF\",\r\n        \"installments\": \"6\" \r\n    },\r\n    \"card_account\": {\r\n        \"card\": {\r\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\r\n            \"holder\": \"{{$randomFullName}}\",\r\n            \"expiration\": \"{{expiration}}\",\r\n            \"security_code\": \"100\"\r\n        }\r\n    },\r\n    \"customer\": {\r\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\r\n        \"id\": \"DfVg56Gvx\"\r\n    }\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-fb1d3720-0c28-44da-9fdb-ad6db9825e29"
              },
              {
                "name": "Create merchant financed installment payment (one-phase)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef421c77-bd01-4b8f-97ed-8ec7927325a2",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                        "\r",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc799e45-f58a-4c05-9b14-2a98b9bad17e",
                      "exec": [
                        "pm.test(\"Successful request\", function () {\r",
                        "    pm.response.to.be.ok;\r",
                        "    pm.response.to.have.jsonBody();\r",
                        "    \r",
                        "    var response = pm.response.json();\r",
                        "    pm.expect(response).to.have.property('redirect_url');\r",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "ea3daed1-cd46-46d3-a279-62b647ceed68",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"request\": {\r\n        \"id\": \"{{$guid}}\",\r\n        \"time\": \"{{request_time}}\"\r\n    },\r\n    \"merchant_order\": {\r\n        \"id\": \"{{$randomUUID}}\",\r\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\r\n    },\r\n    \"payment_method\": \"BANKCARD\",\r\n    \"payment_data\": {\r\n        \"amount\": \"12.34\",\r\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\r\n        \"installment_type\": \"MF_HOLD\",\r\n        \"installments\": \"6\" \r\n    },\r\n    \"card_account\": {\r\n        \"card\": {\r\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\r\n            \"holder\": \"{{$randomFullName}}\",\r\n            \"expiration\": \"{{expiration}}\",\r\n            \"security_code\": \"100\"\r\n        }\r\n    },\r\n    \"customer\": {\r\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\r\n        \"id\": \"DfVg56Gvx\"\r\n    }\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-ea3daed1-cd46-46d3-a279-62b647ceed68"
              }
            ],
            "id": "4011a210-b4a8-4369-87ca-8a96ff8df628",
            "description": "Merchant makes POST request in JSON format to endpoint **/api/payments** to create new Installment payment (one-phase), [see more](https://integration.unlimit.com/#createPayment).\n\n**How to create Installment payment:**\n\n- Make POST-request\n- Click on 3DS redirect URL from response message\n- Emulate successful 3DS validation\n    \n\nAfter successful 3DS validation payment will be completed",
            "uid": "10462328-4011a210-b4a8-4369-87ca-8a96ff8df628"
          },
          {
            "name": "Create installment payment (two-phase)",
            "item": [
              {
                "name": "Create merchant financed installment payment (two-phase)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f157e50-632d-4de7-b1ad-72be6d5c1868",
                      "exec": [
                        "var uuid = require('uuid');\r",
                        "\r",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');\r",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');\r",
                        "\r",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                        "tokens.obtain(terminal_code, password);\r",
                        "\r",
                        "var merchant_order_id = uuid.v4();\r",
                        "pm.variables.set('merchant_order_id', merchant_order_id);\r",
                        "pm.variables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5006bed-8b78-4ed6-aefe-e9310a372073",
                      "exec": [
                        "pm.test(\"Successful request\", function () {\r",
                        "    pm.response.to.be.ok;\r",
                        "    pm.response.to.have.jsonBody();\r",
                        "\r",
                        "    var response = pm.response.json();\r",
                        "    pm.expect(response).to.have.property('redirect_url');\r",
                        "    \r",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;\r",
                        "    pm.collectionVariables.set('payment_id_to_update', response.payment_data.id);\r",
                        "    \r",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {\r",
                        "        pm.expect(response_after_redirect.code).to.equal(200);\r",
                        "    });\r",
                        "    \r",
                        "    postman.setNextRequest('Update merchant financed installment payment (two-phase)');\r",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "40d6c66b-181b-4516-b065-3c94262253d1",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"request\": {\r\n        \"id\": \"{{$guid}}\",\r\n        \"time\": \"{{request_time}}\"\r\n    },\r\n    \"merchant_order\": {\r\n        \"id\": \"{{$randomUUID}}\",\r\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\r\n    },\r\n    \"payment_method\": \"BANKCARD\",\r\n    \"payment_data\": {\r\n        \"amount\": \"12.34\",\r\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\r\n        \"preauth\": true,\r\n        \"installment_type\": \"MF_HOLD\",\r\n        \"installments\": \"6\" \r\n    },\r\n    \"card_account\": {\r\n        \"card\": {\r\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\r\n            \"holder\": \"{{$randomFullName}}\",\r\n            \"expiration\": \"{{expiration}}\",\r\n            \"security_code\": \"100\"\r\n        }\r\n    },\r\n    \"customer\": {\r\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\r\n        \"id\": \"DfVg56Gvx\"\r\n    }\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-40d6c66b-181b-4516-b065-3c94262253d1"
              },
              {
                "name": "Update merchant financed installment payment (two-phase)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e4fc82a-77c4-4ab0-b1a8-4fd9107eb7d8",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_update')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faf06132-0f44-46d9-9a14-d653fccdb276",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    ",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('COMPLETED');",
                        "})"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "3cd82d25-6188-4545-85f3-d97d92e79ade",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_update}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_update}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-3cd82d25-6188-4545-85f3-d97d92e79ade"
              }
            ],
            "id": "5d4d4507-58d2-4ccc-a0bf-babb183b38e5",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new Installment payment (two-phase), [see more](https://integration.unlimit.com/#createPayment).\n    \n\n**How to create two-phase Installment payment:**\n\n- Make POST-request\n- Click on 3DS redirect URL from response message\n- Emulate successful 3DS validation\n- Make PATСH-request to update (complete) Installment payment\n    \n\n**Important:** in POST-request non-3DS card is used. These settings are relevant only for the test collection (due to Sandbox features) - real Installment payments can be created only for cards with 3DS enabled",
            "uid": "10462328-5d4d4507-58d2-4ccc-a0bf-babb183b38e5"
          },
          {
            "name": "Create payment in server-to-server mode",
            "item": [
              {
                "name": "Create payment with passing 3-D Secure independently",
                "item": [
                  {
                    "name": "Create payment with 3-D secure results",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d36774-35bf-4366-8380-1d9191161ba5",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI');",
                            "var password = pm.environment.get('S2S_PASSWORD_EXMPI');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);",
                            "",
                            "",
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7108ef8-3109-46b3-9eda-2ff4419dcc8c",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "354172de-22b2-42bb-88b0-59f73f583ff4",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    },\n    \"three_d_secure\": {\n        \"card_enrollment\": \"Y\",\n        \"cavv\": \"AAABABhVGHmHFVORcFUYEGddqYo=\",\n        \"status\": \"Y\",\n        \"three_d_secure_flow\": \"3DS2C\",\n        \"xid\": \"c7c3c5d3-77a9-4106-b677-8e91b2a052bd\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-354172de-22b2-42bb-88b0-59f73f583ff4"
                  },
                  {
                    "name": "Create payment without 3-D secure results",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daeb1068-d13f-4d6c-b7ca-b97df3875882",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI_NO3DS');",
                            "var password = pm.environment.get('S2S_PASSWORD_EXMPI_NO3DS');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);",
                            "",
                            "",
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72e6cb7-e2e5-4435-97b0-411f34a842a5",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "   ",
                            "    pm.expect(response).to.have.property('payment_data');",
                            "    pm.expect(response.payment_data).to.have.property('id');",
                            "    ",
                            "    pm.execution.setNextRequest('Create payment with 3-D secure (frictionless)');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "9b4c2695-3e50-487f-a3c1-a69b1d27548b",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-9b4c2695-3e50-487f-a3c1-a69b1d27548b"
                  }
                ],
                "id": "1adfbc65-bcbb-40db-903d-afec55e7d69f",
                "description": "In case where merchant passes 3-D Secure independently, result parameters of 3-D Secure should be collected by the merchant and sent in \"Create payment\" request with additional structure three_d_secure",
                "uid": "10462328-1adfbc65-bcbb-40db-903d-afec55e7d69f"
              },
              {
                "name": "Create payment with 3-D Secure (frictionless flow)",
                "item": [
                  {
                    "name": "Create payment with 3-D secure (frictionless)",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb41ef1-729c-4586-93c0-f3f8b4c8a015",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                            "var password = pm.environment.get('S2S_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6634c58c-32e0-4e13-8b74-626f310499de",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('payment_data');",
                            "    pm.expect(response.payment_data).to.have.property('id');",
                            "  ",
                            "    postman.setNextRequest('Create payment with 3-D secure (challenge)');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "d3cd1bdc-02c5-45c1-b3de-326da17822b9",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_FRICTIONLESS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    },\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-d3cd1bdc-02c5-45c1-b3de-326da17822b9"
                  }
                ],
                "id": "6fb2e786-cd37-4df0-b986-143f4df011cc",
                "description": "If card is 3-D Secure and authentication pass through Frictionless flow then merchant gets synchronous payment response in JSON format. In  \ncase of error JSON with error result will be returned.\n\n\"return_urls.return_url\" must be replaced with Merchant's webhook url",
                "uid": "10462328-6fb2e786-cd37-4df0-b986-143f4df011cc"
              },
              {
                "name": "Create payment with 3-D Secure (challenge flow)",
                "item": [
                  {
                    "name": "Create payment with 3-D secure (challenge)",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa87f03-1d4f-4b6b-98b5-8645ec343290",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                            "var password = pm.environment.get('S2S_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f103fef2-595e-4145-b652-c9add7d1f502",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('CReq');",
                            "    pm.expect(response).to.have.property('id');",
                            "    pm.collectionVariables.set('creq', response.CReq);",
                            "    pm.collectionVariables.set('payment_id_to_complete_3ds', response.id);",
                            "    postman.setNextRequest('Send CReq to ACS');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "d4e4d9df-04c7-4a8f-a7f9-16b0d0536672",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    },\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-d4e4d9df-04c7-4a8f-a7f9-16b0d0536672"
                  },
                  {
                    "name": "Send CReq to ACS",
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f3d9c6-11dc-41da-9e36-9e8afcdacd34",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    })",
                            "    postman.setNextRequest('Complete payment with CRes');"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "933fa4cd-6bfe-4cae-94d4-c2f8d526fb8c",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "method": "POST",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/sandbox-emulator/3ds2/browserCReqS2S?creq={{creq}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "sandbox-emulator",
                          "3ds2",
                          "browserCReqS2S"
                        ],
                        "query": [
                          {
                            "key": "creq",
                            "value": "{{creq}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-933fa4cd-6bfe-4cae-94d4-c2f8d526fb8c"
                  },
                  {
                    "name": "Complete payment with CRes",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c319631-48ce-42d5-a6cf-eb1cee2f0ed1",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                            "var password = pm.environment.get('S2S_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cd3c7c-2cef-446e-877d-65af8ceebdfc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();   ",
                            "    pm.expect(response).to.have.property('payment_data');",
                            "    pm.expect(response.payment_data).to.have.property('id'); ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "dbde63bd-3be6-40c1-8aa0-a3f250628525",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"CONFIRM_3DS\",\n    \"CRes\": \"eyJtZXNzYWdlVHlwZSI6IkNSZXEiLCJtZXNzYWdlVmVyc2lvbiI6IjIuMS4wIiwidGhyZWVEU1NlcnZlclRyYW5zSUQiOiJiM2UzZDY4Mi0zNWNkLTRjYjQtOTVmOS01Yjg2ZmVlYzg5YjciLCJhY3NUcmFuc0lEIjoiWTFMU1NhVVVoQzROWUVKMXBhM2h2aFRWeTZ1YlE4MXU1MDBQIiwiY2hhbGxlbmdlV2luZG93U2l6ZSI6IjA1In0=\"\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete_3ds}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments",
                          "{{payment_id_to_complete_3ds}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-dbde63bd-3be6-40c1-8aa0-a3f250628525"
                  }
                ],
                "id": "c3b9a60f-494f-4520-8e81-17f404b27f79",
                "description": "If card is 3-D Secure and authentication pass Challenge flow then merchant gets redirect_url, CReq and Id parameters in JSON  \nformat. In case of error JSON with error result will be returned.\n\n\"return_urls.return_url\" must be replaced with Merchant's webhook url",
                "uid": "10462328-c3b9a60f-494f-4520-8e81-17f404b27f79"
              }
            ],
            "id": "801d1423-ff47-4d57-938e-f0193ee00729",
            "description": "In Server-to-Server Mode the Customer interacts only with the Merchant's website and all interactions between Merchant and Unlimint are server-to-server. In this case the Merchant has to collect cardholder data on his website that must be PCI DSS certified for that and then send it as a POST request to the Unlimint Endpoint. In response to Merchant's request, Unlimint server sends URL the Customer should be redirected to if 3-D Secure is required or Result JSON response if 3-D Secure is not required.",
            "uid": "10462328-801d1423-ff47-4d57-938e-f0193ee00729"
          },
          {
            "name": "Create payments (by tokens)",
            "item": [
              {
                "name": "Create payment (ApplePay, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "7976d009-f8a1-46c7-a8e1-9ae0d6b98a04",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"APPLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-7976d009-f8a1-46c7-a8e1-9ae0d6b98a04"
              },
              {
                "name": "Create payment (ApplePay, s2s)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI_NO3DS');",
                        "var password = pm.environment.get('S2S_PASSWORD_EXMPI_NO3DS');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "2fdb1c4a-3561-428a-bd2a-d86948d411d7",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"APPLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-2fdb1c4a-3561-428a-bd2a-d86948d411d7"
              },
              {
                "name": "Create payment (GooglePay, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "7e5a15f2-dcdc-4fb9-8035-d82fda133f88",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"GOOGLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-7e5a15f2-dcdc-4fb9-8035-d82fda133f88"
              },
              {
                "name": "Create payment (GooglePay, s2s)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI_NO3DS');",
                        "var password = pm.environment.get('S2S_PASSWORD_EXMPI_NO3DS');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "82224134-8568-44f8-8561-717fe5f7da61",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"GOOGLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-82224134-8568-44f8-8561-717fe5f7da61"
              },
              {
                "name": "Create payment (GooglePay, pan only, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "a2afc693-5e98-4fa3-ad32-0b5d22a4e5db",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"GOOGLEPAY\",\n            \"pan\": \"{{DPAN_AUTH}}\",\n            \"expiration\": \"{{expiration}}\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-a2afc693-5e98-4fa3-ad32-0b5d22a4e5db"
              },
              {
                "name": "Create payment (Network token, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "c4e15909-a55b-43b2-aafc-9e6dc553b836",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"NETWORK\",\n            \"pan\": \"{{DPAN_AUTH}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iJKIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-c4e15909-a55b-43b2-aafc-9e6dc553b836"
              }
            ],
            "id": "caccb6cc-4902-41d9-97e7-4f0f8535b5f8",
            "description": "- This section presents examples of requests with decrypted data from Google Pay, Apple Pay, and Network Tokenization\n    \n- Supported modes: Gateway and server-to-server\n    \n- 3-D Secure can be called for requests with network token and for GooglePay PAN-only case",
            "uid": "10462328-caccb6cc-4902-41d9-97e7-4f0f8535b5f8"
          }
        ],
        "id": "cb952acc-0a49-4299-b770-b07f602f5d26",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "3cef093f-6da5-4789-ad9b-7b7e7e4ce333"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "b1f50e25-b697-4f18-bcfd-9de82eef721b"
            }
          }
        ],
        "uid": "10462328-cb952acc-0a49-4299-b770-b07f602f5d26"
      },
      {
        "name": "Payments (APMs)",
        "item": [
          {
            "name": "Worldwide",
            "item": [
              {
                "name": "PayPal",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PayPal payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b9852543-11ec-4ef8-b276-c943da1930d9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5e5f5553-d1d8-47a6-a321-aa33358ddfc6"
                            }
                          }
                        ],
                        "id": "ebf4eb19-1eaf-425f-a0f5-bf20dfc499ae",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAYPAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ebf4eb19-1eaf-425f-a0f5-bf20dfc499ae"
                      }
                    ],
                    "id": "ecd73b23-997d-4cd9-bf22-a343ce35db79",
                    "uid": "10462328-ecd73b23-997d-4cd9-bf22-a343ce35db79"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PayPal payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "268836e8-29fd-47f8-8390-3cea479cee71"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b1c02c2c-5abd-403a-a79a-3ea1f4d27348"
                            }
                          }
                        ],
                        "id": "151c919d-169f-46e2-90a2-cc855fb91f77",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAYPAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-151c919d-169f-46e2-90a2-cc855fb91f77"
                      }
                    ],
                    "id": "ac8165fd-e854-4201-a98f-3cb4b738b11f",
                    "uid": "10462328-ac8165fd-e854-4201-a98f-3cb4b738b11f"
                  }
                ],
                "id": "c2dd979c-a784-4f4a-a9ac-c75e54f0a974",
                "uid": "10462328-c2dd979c-a784-4f4a-a9ac-c75e54f0a974"
              },
              {
                "name": "ALIPAYPLUS",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create ALIPAYPLUS payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "cf33d0b9-e556-4192-aed5-f26cfe22c381"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "757586ce-78f4-492f-9aba-fcd2e52990a7"
                            }
                          }
                        ],
                        "id": "7f84deae-6a46-4b76-9874-1437b3832df1",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALIPAYPLUS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-7f84deae-6a46-4b76-9874-1437b3832df1"
                      }
                    ],
                    "id": "78f1df00-35c5-4c46-bcde-136480e869b1",
                    "uid": "10462328-78f1df00-35c5-4c46-bcde-136480e869b1"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create ALIPAYPLUS payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4a43660e-2525-43e0-b07e-04ba36e1e612"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c8a7fad1-aef0-4cd9-ac68-aa2c3c32277a"
                            }
                          }
                        ],
                        "id": "30e7441c-097a-4763-a900-f4d9d1b263b9",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALIPAYPLUS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-30e7441c-097a-4763-a900-f4d9d1b263b9"
                      }
                    ],
                    "id": "11db8018-4cd1-494e-9351-3ea97db04082",
                    "uid": "10462328-11db8018-4cd1-494e-9351-3ea97db04082"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create ALIPAYPLUS payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9681f4c4-cf53-4237-b5e7-b423aeac03f2"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "aeedfc61-71af-4da1-b6c5-33f2bdfb0980"
                            }
                          }
                        ],
                        "id": "a494820c-eadb-4386-9387-325f1feef0ef",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALIPAYPLUS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a494820c-eadb-4386-9387-325f1feef0ef"
                      }
                    ],
                    "id": "073581b8-8275-4483-8694-f63e0666e74b",
                    "uid": "10462328-073581b8-8275-4483-8694-f63e0666e74b"
                  }
                ],
                "id": "f7be43e5-be31-448c-b721-692f9546b038",
                "uid": "10462328-f7be43e5-be31-448c-b721-692f9546b038"
              }
            ],
            "id": "96002549-b51f-42c7-a09a-0379487c4162",
            "uid": "10462328-96002549-b51f-42c7-a09a-0379487c4162"
          },
          {
            "name": "Europe",
            "item": [
              {
                "name": "iDEAL",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create IDEAL payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8ae7c1d6-e832-4949-9896-ff4f8323523d"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "660dd2f2-7729-48d5-9275-645251e4bc59"
                            }
                          }
                        ],
                        "id": "2f09ef38-ad95-46e3-a398-84fedfc9d9ba",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"IDEAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2f09ef38-ad95-46e3-a398-84fedfc9d9ba"
                      }
                    ],
                    "id": "069602c5-689a-49b2-93e4-bacd5944a97d",
                    "uid": "10462328-069602c5-689a-49b2-93e4-bacd5944a97d"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create IDEAL payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "570624c5-2970-47d9-86ce-0865ec27274a"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5648ce33-b16f-46ee-8adc-6078a5e1c423"
                            }
                          }
                        ],
                        "id": "94dda321-06e9-45f6-8b34-752663874a93",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"IDEAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-94dda321-06e9-45f6-8b34-752663874a93"
                      }
                    ],
                    "id": "959a7804-6e8b-4802-9665-a2ecc1acd908",
                    "uid": "10462328-959a7804-6e8b-4802-9665-a2ecc1acd908"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create IDEAL payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "8573ed43-88a8-42e2-b4fa-f9febfd609cb",
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "7615e039-9b2e-4f68-b608-705e540dc606",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "35137f32-d31d-47a5-8701-d40aabbaf7c9",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"IDEAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-35137f32-d31d-47a5-8701-d40aabbaf7c9"
                      }
                    ],
                    "id": "1067983a-baf0-4590-b35e-49b03bb5fc4e",
                    "uid": "10462328-1067983a-baf0-4590-b35e-49b03bb5fc4e"
                  }
                ],
                "id": "ddb6225b-30aa-4b45-8282-b1479e6ba403",
                "uid": "10462328-ddb6225b-30aa-4b45-8282-b1479e6ba403"
              },
              {
                "name": "SEPA Instant",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create SEPATRANSFER payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f162b0a9-4340-49ac-a709-46d745546ecf"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6a891078-37eb-4263-874e-b54344f2b069"
                            }
                          }
                        ],
                        "id": "e62b52f4-d717-4fd4-8514-763fae3554d5",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SEPATRANSFER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-e62b52f4-d717-4fd4-8514-763fae3554d5"
                      }
                    ],
                    "id": "9fa196ea-57f5-4e4c-a45e-bfbd384256d9",
                    "uid": "10462328-9fa196ea-57f5-4e4c-a45e-bfbd384256d9"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create SEPATRANSFER payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8fc0dcc9-eb5c-4182-b6b8-c7cc7d141b3e"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5145fec0-77eb-450b-bc22-0f203f37a4b5"
                            }
                          }
                        ],
                        "id": "5d6a0272-7a6a-4a8b-bbc0-0f29d904ef27",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SEPATRANSFER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-5d6a0272-7a6a-4a8b-bbc0-0f29d904ef27"
                      }
                    ],
                    "id": "c05f9ed9-1718-4b37-9d25-a74a04126113",
                    "uid": "10462328-c05f9ed9-1718-4b37-9d25-a74a04126113"
                  }
                ],
                "id": "1f9e3256-564b-46bf-b5a7-7a527814a25e",
                "uid": "10462328-1f9e3256-564b-46bf-b5a7-7a527814a25e"
              },
              {
                "name": "WeChat",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create WECHAT payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "b8a30af1-6473-48e0-9e31-54e015ab9e34",
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "d24761e3-d31a-449d-93db-8b8275167754",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "2ac84ce4-113a-4d12-a3ab-c1c9adce52fe",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"WECHAT\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2ac84ce4-113a-4d12-a3ab-c1c9adce52fe"
                      }
                    ],
                    "id": "e94bc502-264d-43e7-81ca-3143d2e131a9",
                    "uid": "10462328-e94bc502-264d-43e7-81ca-3143d2e131a9"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create WECHAT payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "99a1d208-60fd-4510-9ca9-9c6954b6d8bf",
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "2ee8ab3b-d84e-48fb-ba61-4609d5f409b8",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "982d4759-ca23-41d3-82b9-f632fbbd6943",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"WECHAT\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-982d4759-ca23-41d3-82b9-f632fbbd6943"
                      }
                    ],
                    "id": "e77fee23-65bd-4e0c-9c0d-794933ad4f95",
                    "uid": "10462328-e77fee23-65bd-4e0c-9c0d-794933ad4f95"
                  }
                ],
                "id": "3a2cdaf3-aafa-4db6-ab0e-200bc4591dc2",
                "uid": "10462328-3a2cdaf3-aafa-4db6-ab0e-200bc4591dc2"
              },
              {
                "name": "Multibanco",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create MULTIBANCO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f2d29789-91b3-42e4-9d0a-570c3ff329a5"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "98e8aa7f-dab0-429d-8d0f-67c7828dd5b7"
                            }
                          }
                        ],
                        "id": "c1975ab0-6875-489f-b633-e0049727f16d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MULTIBANCO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c1975ab0-6875-489f-b633-e0049727f16d"
                      }
                    ],
                    "id": "bd0503a5-fb00-42d6-94aa-e7ce1467c6fe",
                    "uid": "10462328-bd0503a5-fb00-42d6-94aa-e7ce1467c6fe"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create MULTIBANCO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d84d30bf-36fb-4040-8e50-bd978304d859"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ccf20cdc-bbc6-47c7-b1cf-a2d00b1e414c"
                            }
                          }
                        ],
                        "id": "ff873845-6102-496d-891d-15e678fc02a0",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MULTIBANCO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ff873845-6102-496d-891d-15e678fc02a0"
                      }
                    ],
                    "id": "a3fc06fd-6bba-428e-886c-a58e972e1e56",
                    "uid": "10462328-a3fc06fd-6bba-428e-886c-a58e972e1e56"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create MULTIBANCO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "bd1868d4-80f6-4b8c-90f5-5c81e9c71e08",
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "4f316840-8891-47cf-aa57-653a4fb543d3",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "5880e358-9483-47cf-b594-8d01c342dccb",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MULTIBANCO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-5880e358-9483-47cf-b594-8d01c342dccb"
                      }
                    ],
                    "id": "ae43e252-4bac-4595-87ee-80622d1096c1",
                    "uid": "10462328-ae43e252-4bac-4595-87ee-80622d1096c1"
                  }
                ],
                "id": "007a35b4-4e88-431b-a4d5-32d3677e5940",
                "uid": "10462328-007a35b4-4e88-431b-a4d5-32d3677e5940"
              },
              {
                "name": "MBWAY",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create MBWAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8ebf7676-914c-46b2-9528-0c5be60c7c08"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d0a29a1d-c271-4120-be26-aa4fdc6c7cbb"
                            }
                          }
                        ],
                        "id": "8957acdb-6997-4c5a-ab82-e7485b8745ce",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MBWAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"351123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8957acdb-6997-4c5a-ab82-e7485b8745ce"
                      }
                    ],
                    "id": "90132853-b863-409f-9510-5a88c4b015c3",
                    "uid": "10462328-90132853-b863-409f-9510-5a88c4b015c3"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create MBWAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "bf42e5b1-1f3a-4469-8e02-6ef46aabd75f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "50dbac90-2735-491b-ac2c-630a4d875db3"
                            }
                          }
                        ],
                        "id": "d1f5269e-07c5-424b-8353-a9dfc3c52e35",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MBWAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"351123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d1f5269e-07c5-424b-8353-a9dfc3c52e35"
                      }
                    ],
                    "id": "47cb1078-7df1-4526-bded-070afaa79b76",
                    "uid": "10462328-47cb1078-7df1-4526-bded-070afaa79b76"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create MBWAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "da52e06c-11f2-447e-9215-9ca06c155436",
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "94bae025-084b-475b-b35e-8d662762b5af",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "78e1dd3b-4d6d-40af-ae5b-43bd0396ba94",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MBWAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"351123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-78e1dd3b-4d6d-40af-ae5b-43bd0396ba94"
                      }
                    ],
                    "id": "b9e05adb-d40a-4045-ac92-3e49f5219413",
                    "uid": "10462328-b9e05adb-d40a-4045-ac92-3e49f5219413"
                  }
                ],
                "id": "f15d2b2d-f042-4d77-b576-316720842554",
                "uid": "10462328-f15d2b2d-f042-4d77-b576-316720842554"
              },
              {
                "name": "OPENBANKING",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create OPENBANKING payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c83375bf-0f1e-4695-a594-214b3c516ff1"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "53eb786e-3bb9-4f73-a642-71dbad713f59"
                            }
                          }
                        ],
                        "id": "c9a5169b-aad1-4367-90a4-5cded986c2fe",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OPENBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n       \"bank_code\":  \"ksk_euskirchen_oauth_client_de\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c9a5169b-aad1-4367-90a4-5cded986c2fe"
                      }
                    ],
                    "id": "6485dcd2-5dc3-4f1c-b17c-cd475d85883d",
                    "uid": "10462328-6485dcd2-5dc3-4f1c-b17c-cd475d85883d"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create OPENBANKING payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c5657158-6e39-4e25-a539-2a5f59338e92"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "149a585e-43bd-4c23-a533-fbc4319b206f"
                            }
                          }
                        ],
                        "id": "8892e1b8-e762-4822-a853-b5c4b6d07588",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OPENBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8892e1b8-e762-4822-a853-b5c4b6d07588"
                      }
                    ],
                    "id": "ad70a077-7a31-44e5-971e-51b37812a705",
                    "uid": "10462328-ad70a077-7a31-44e5-971e-51b37812a705"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create OPENBANKING payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e10599d1-6cf2-47ce-acac-82b0a0892216"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3a116623-3f25-4a38-80c4-edbce0c7484c"
                            }
                          }
                        ],
                        "id": "dfca9d88-2c8f-4248-acfe-c20df53e8cde",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OPENBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n       \"bank_code\":  \"spk_schweinfurt_hassberge_oauth_client_de\",\n       \"id\":\"CY000000000000000000000000771\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-dfca9d88-2c8f-4248-acfe-c20df53e8cde"
                      }
                    ],
                    "id": "dac27910-ed5b-40d6-9558-491c1490425c",
                    "uid": "10462328-dac27910-ed5b-40d6-9558-491c1490425c"
                  }
                ],
                "id": "7309f3ea-2ff6-470a-a7de-4be538f42794",
                "uid": "10462328-7309f3ea-2ff6-470a-a7de-4be538f42794"
              }
            ],
            "id": "57b9c9c4-4e8f-40b7-ad4d-38556b0367ec",
            "uid": "10462328-57b9c9c4-4e8f-40b7-ad4d-38556b0367ec"
          },
          {
            "name": "Latin America",
            "item": [
              {
                "name": "Convenience Store",
                "item": [
                  {
                    "name": "Colombia",
                    "item": [
                      {
                        "name": "Acyvalores",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create Acyvalores payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "0f376681-370a-4b54-a438-4c3ca986e975"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "2ebc34b2-5178-439e-93ef-cab1da5c5638"
                                    }
                                  }
                                ],
                                "id": "6ccd15cf-f0a9-4d51-9c61-215a508345db",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"acyvalores\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-6ccd15cf-f0a9-4d51-9c61-215a508345db"
                              }
                            ],
                            "id": "355781a8-4723-4819-9888-298826f9ad5a",
                            "uid": "10462328-355781a8-4723-4819-9888-298826f9ad5a"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create Acyvalores payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "eee64ea6-8a5e-447b-920f-26c2ca558543"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "97b1884c-7dea-4bfa-8413-92a7ec60d7f2"
                                    }
                                  }
                                ],
                                "id": "69e437ec-3dcd-41f6-bec5-16ec65cfeb35",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"acyvalores\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-69e437ec-3dcd-41f6-bec5-16ec65cfeb35"
                              }
                            ],
                            "id": "3661f068-7ce9-4b77-80e1-5b4b85175caa",
                            "uid": "10462328-3661f068-7ce9-4b77-80e1-5b4b85175caa"
                          }
                        ],
                        "id": "52499e97-f87d-44f8-b058-22c43108aa67",
                        "uid": "10462328-52499e97-f87d-44f8-b058-22c43108aa67"
                      },
                      {
                        "name": "Daviplata",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create daviplata payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "db2a52d3-7b1e-4da2-ba49-d2809e0c7da4"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "56160123-14dd-46d1-9571-3f28b41ee0e5"
                                    }
                                  }
                                ],
                                "id": "dd70d46e-3add-4695-8f3e-024ccb3c5204",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"daviplata\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-dd70d46e-3add-4695-8f3e-024ccb3c5204"
                              }
                            ],
                            "id": "257521d4-0d90-43da-b8f2-46680f59c64c",
                            "uid": "10462328-257521d4-0d90-43da-b8f2-46680f59c64c"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create daviplata payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "6795291f-f560-4315-a83c-192a0bdcd04e"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "5e994f9f-0f9b-4b1c-badd-1e9aeb40093b"
                                    }
                                  }
                                ],
                                "id": "97d23a3a-6462-4e9d-a93e-ea7855ce19d8",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"daviplata\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-97d23a3a-6462-4e9d-a93e-ea7855ce19d8"
                              }
                            ],
                            "id": "c5e23b4d-0b77-4fce-bb47-92ada66183c1",
                            "uid": "10462328-c5e23b4d-0b77-4fce-bb47-92ada66183c1"
                          }
                        ],
                        "id": "f6a7158c-aaad-4690-9269-f1694a15ff0b",
                        "uid": "10462328-f6a7158c-aaad-4690-9269-f1694a15ff0b"
                      },
                      {
                        "name": "Fullcarga",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create fullcarga payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "ecb207e4-e3cf-4cda-8751-04b41e6c5840"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "3fe743f1-b8d1-4ce0-aab6-b77e8721eaa0"
                                    }
                                  }
                                ],
                                "id": "4c65eb1b-1949-4a93-a6de-91b968cd8ba2",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"fullcarga\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-4c65eb1b-1949-4a93-a6de-91b968cd8ba2"
                              }
                            ],
                            "id": "7ddd9d0f-8bc6-4102-9a97-76233cf2485c",
                            "uid": "10462328-7ddd9d0f-8bc6-4102-9a97-76233cf2485c"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create fullcarga payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "8f3af0a6-f9fe-4b39-a539-94941e488dc8"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "bb70cd5e-4895-46e0-9026-7d363d05aada"
                                    }
                                  }
                                ],
                                "id": "9e3ac221-30d1-43fb-8a17-88a5ecf8ad4d",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"fullcarga\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-9e3ac221-30d1-43fb-8a17-88a5ecf8ad4d"
                              }
                            ],
                            "id": "814764b9-7de8-4699-93ed-a2be69c4302f",
                            "uid": "10462328-814764b9-7de8-4699-93ed-a2be69c4302f"
                          }
                        ],
                        "id": "c5d40021-fe91-4505-a6eb-ab1f382f7677",
                        "uid": "10462328-c5d40021-fe91-4505-a6eb-ab1f382f7677"
                      },
                      {
                        "name": "Refacil",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create refacil payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "d2f6fdd5-e5d4-4351-bb97-9e0607ac3fae"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "72d3485e-8ef1-449d-9526-8c4af37ad4a0"
                                    }
                                  }
                                ],
                                "id": "72c84170-393c-4cb1-a54b-63739897904c",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"fullcarga\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-72c84170-393c-4cb1-a54b-63739897904c"
                              }
                            ],
                            "id": "0ddc2cec-46e3-41ff-b6f0-ef4d8f639828",
                            "uid": "10462328-0ddc2cec-46e3-41ff-b6f0-ef4d8f639828"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create refacil  payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "a57e8cf8-0e69-4772-9339-25ffa717f1ad"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "a4698c33-2cce-48ec-a201-f6243ed79f48"
                                    }
                                  }
                                ],
                                "id": "17a16d00-0504-43a9-9a49-9181875dab03",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"refacil\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-17a16d00-0504-43a9-9a49-9181875dab03"
                              }
                            ],
                            "id": "1baf0b8d-df36-49ed-a3a3-3d623430e52c",
                            "uid": "10462328-1baf0b8d-df36-49ed-a3a3-3d623430e52c"
                          }
                        ],
                        "id": "5440b8c2-f28c-47b5-91e9-f7a5ef85c11e",
                        "uid": "10462328-5440b8c2-f28c-47b5-91e9-f7a5ef85c11e"
                      }
                    ],
                    "id": "2a0b51b6-34ba-45a8-835b-4d9394a544ab",
                    "uid": "10462328-2a0b51b6-34ba-45a8-835b-4d9394a544ab"
                  },
                  {
                    "name": "Costa Rica",
                    "item": [
                      {
                        "name": "Paysera",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create payser payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "29d71bb4-5dfe-4bc4-95bd-81d48afe4349"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "e8564c9d-4deb-443c-b99b-edb5731dcf9e"
                                    }
                                  }
                                ],
                                "id": "67bcde95-ba6e-4915-b9dd-9cdc02004454",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payser\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-67bcde95-ba6e-4915-b9dd-9cdc02004454"
                              }
                            ],
                            "id": "73682455-e9dd-443d-894a-09ed5951f7e4",
                            "uid": "10462328-73682455-e9dd-443d-894a-09ed5951f7e4"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create payser payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "a3a27e02-39eb-4f68-a397-ae22719a9d4b"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "3b91cb35-f0d3-49cf-98db-73929d19103c"
                                    }
                                  }
                                ],
                                "id": "26c33a64-ca72-4368-887c-74bab9860216",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payser\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-26c33a64-ca72-4368-887c-74bab9860216"
                              }
                            ],
                            "id": "00058674-9e32-41b3-a47f-cea6c3db762d",
                            "uid": "10462328-00058674-9e32-41b3-a47f-cea6c3db762d"
                          }
                        ],
                        "id": "47da9662-741b-4d9c-be1c-fa8850ccf650",
                        "uid": "10462328-47da9662-741b-4d9c-be1c-fa8850ccf650"
                      },
                      {
                        "name": "Puntoshey",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create PUNTOSHEY payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "id": "a9431438-2b42-4f6b-a2e5-478181033c0c",
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {}
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "id": "b3065cd4-1c45-4f6a-a5b5-f81a8c23d2f1",
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {}
                                    }
                                  }
                                ],
                                "id": "cf03f9e1-c033-4a92-89dc-e01bf6b4a79e",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PUNTOSHEY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-cf03f9e1-c033-4a92-89dc-e01bf6b4a79e"
                              }
                            ],
                            "id": "3b48f96a-d2f6-49db-87f9-558a692d5ef5",
                            "uid": "10462328-3b48f96a-d2f6-49db-87f9-558a692d5ef5"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create PUNTOSHEY payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "id": "b42b9b7e-0b73-4440-8a05-4ebe70cd36fe",
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {}
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "id": "c5faedfa-cfdf-4a0c-8808-87325fb0a97c",
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {}
                                    }
                                  }
                                ],
                                "id": "19360cdd-b077-4ff1-8236-344004fdec44",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PUNTOSHEY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-19360cdd-b077-4ff1-8236-344004fdec44"
                              }
                            ],
                            "id": "d3886213-650f-4ba0-b4fd-189e5fc6f770",
                            "uid": "10462328-d3886213-650f-4ba0-b4fd-189e5fc6f770"
                          }
                        ],
                        "id": "b4375a13-a35e-4f26-87a4-8288b88d1cde",
                        "uid": "10462328-b4375a13-a35e-4f26-87a4-8288b88d1cde"
                      }
                    ],
                    "id": "42e29168-2b60-45cc-b5f8-cd671247ca1c",
                    "uid": "10462328-42e29168-2b60-45cc-b5f8-cd671247ca1c"
                  },
                  {
                    "name": "Ecuador",
                    "item": [
                      {
                        "name": "Farmacias 911",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create farm911 payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "4b11f7f2-37ef-4703-b341-8c6ee94da600"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "a143c6d1-6fd8-4c13-b38c-de586d8059be"
                                    }
                                  }
                                ],
                                "id": "251035a1-4ad3-4770-bcaa-9f6161d67e1b",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farm911\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-251035a1-4ad3-4770-bcaa-9f6161d67e1b"
                              }
                            ],
                            "id": "7d017ad9-886a-4dd9-aa72-d9f239a44e74",
                            "uid": "10462328-7d017ad9-886a-4dd9-aa72-d9f239a44e74"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create farm911 payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "80b743f8-bf09-47f4-8f7b-aa26b6dad531"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "bdada0d5-791a-4166-8b14-06d3fe15c2f4"
                                    }
                                  }
                                ],
                                "id": "39139bf8-e0a8-4d7a-ab22-64f3a6c902ef",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farm911\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-39139bf8-e0a8-4d7a-ab22-64f3a6c902ef"
                              }
                            ],
                            "id": "fcfb4dc4-3108-4c81-9f40-2c294be4807d",
                            "uid": "10462328-fcfb4dc4-3108-4c81-9f40-2c294be4807d"
                          }
                        ],
                        "id": "5b9ac48a-538e-4100-8e37-3862743d3eab",
                        "uid": "10462328-5b9ac48a-538e-4100-8e37-3862743d3eab"
                      },
                      {
                        "name": "Farmacias Economicas",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create farmeconomicas payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "30fcf3b4-c15a-4f0b-9bc5-54a051021c20"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "181a2c79-7e1b-443a-bc04-5580d733deb3"
                                    }
                                  }
                                ],
                                "id": "0a2d8b4e-606f-4169-863f-7e8c842dd434",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmeconomicas\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-0a2d8b4e-606f-4169-863f-7e8c842dd434"
                              }
                            ],
                            "id": "ccabbcc3-3805-4766-85cf-5a6cc045a441",
                            "uid": "10462328-ccabbcc3-3805-4766-85cf-5a6cc045a441"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create farmeconomicaspayment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "b0c7b012-e3f2-4e50-8654-48f5a4c0e630"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "f70a3bb5-55ff-47ea-a69c-d8db9ae31f92"
                                    }
                                  }
                                ],
                                "id": "ff156ad3-a1a5-4e32-a333-7cc837f7cc43",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmeconomicas\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-ff156ad3-a1a5-4e32-a333-7cc837f7cc43"
                              }
                            ],
                            "id": "18858109-618b-4ecd-bf38-b735e2fe2627",
                            "uid": "10462328-18858109-618b-4ecd-bf38-b735e2fe2627"
                          }
                        ],
                        "id": "85a882e9-d6fd-49d4-b841-6bcb6425ccbe",
                        "uid": "10462328-85a882e9-d6fd-49d4-b841-6bcb6425ccbe"
                      },
                      {
                        "name": "Farmacias Medicity",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create farmmedicity payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "16797f5a-4a94-4b92-b7b3-3a7328c244cd"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "a54df909-3f9f-4523-84b2-e81d2ce7a7ea"
                                    }
                                  }
                                ],
                                "id": "4cf309c5-2db4-480a-ab3e-60c562fd53bc",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmmedicity\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-4cf309c5-2db4-480a-ab3e-60c562fd53bc"
                              }
                            ],
                            "id": "9d9628b8-9e83-4382-9cad-379717bde9b1",
                            "uid": "10462328-9d9628b8-9e83-4382-9cad-379717bde9b1"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create farmmedicity (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "f31c7dc8-79d2-45bb-8f53-5b6bb3e03302"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "0a8c9279-a6ac-45ee-86d4-d404e1c4f2a4"
                                    }
                                  }
                                ],
                                "id": "f9dd753b-534d-452a-ac08-eeb48669d5c1",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmmedicity\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-f9dd753b-534d-452a-ac08-eeb48669d5c1"
                              }
                            ],
                            "id": "95119a55-3758-4065-a244-c1166efe59ef",
                            "uid": "10462328-95119a55-3758-4065-a244-c1166efe59ef"
                          }
                        ],
                        "id": "3e463b17-f5fd-41fe-b4d4-48b2702c2bab",
                        "uid": "10462328-3e463b17-f5fd-41fe-b4d4-48b2702c2bab"
                      },
                      {
                        "name": "Rianxeira",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create rianxeira payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "6a33fffa-b279-449b-814e-1f010de95ab4"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "3d9d0839-313c-4edd-8462-4579226702f2"
                                    }
                                  }
                                ],
                                "id": "e372c2f1-baeb-4b2b-bf68-871d62e37c5b",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"rianxeira\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-e372c2f1-baeb-4b2b-bf68-871d62e37c5b"
                              }
                            ],
                            "id": "aadab8b6-b5bb-4083-a9b8-96c9ef39d955",
                            "uid": "10462328-aadab8b6-b5bb-4083-a9b8-96c9ef39d955"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create rianxeira (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "7da99441-e78e-44a0-8248-6862337aa8b8"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "13f0b5ae-3edd-4f2f-8cbe-f24044fac10a"
                                    }
                                  }
                                ],
                                "id": "64b97e20-26be-4599-b9e9-7f02ea62fa40",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"rianxeira\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-64b97e20-26be-4599-b9e9-7f02ea62fa40"
                              }
                            ],
                            "id": "f83c4484-d1e7-423e-9def-26baf7cc22f3",
                            "uid": "10462328-f83c4484-d1e7-423e-9def-26baf7cc22f3"
                          }
                        ],
                        "id": "350b9526-21b8-43d5-937d-456614858af9",
                        "uid": "10462328-350b9526-21b8-43d5-937d-456614858af9"
                      },
                      {
                        "name": "Western Union",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create westernunion payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "f3d463cf-cb4c-4828-a3d6-4c60c738bae9"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "90922ed9-ad8c-4f89-925b-1da52b09303f"
                                    }
                                  }
                                ],
                                "id": "a8cdc41f-9771-446d-b443-543ec94ca299",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"westernunion\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-a8cdc41f-9771-446d-b443-543ec94ca299"
                              }
                            ],
                            "id": "fcd6349c-1deb-4603-a864-d452c092b936",
                            "uid": "10462328-fcd6349c-1deb-4603-a864-d452c092b936"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create westernunion (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "997a84f1-cbcb-43da-830a-766bd0b7a25c"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "c7956047-9f01-4d8b-964a-5a633fa4046d"
                                    }
                                  }
                                ],
                                "id": "eb7fa755-1f8c-4380-903c-3d64b44f2595",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"westernunion\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-eb7fa755-1f8c-4380-903c-3d64b44f2595"
                              }
                            ],
                            "id": "4259c615-412d-43b4-85d0-564151fbbfea",
                            "uid": "10462328-4259c615-412d-43b4-85d0-564151fbbfea"
                          }
                        ],
                        "id": "9d6aaf9d-d1fb-4063-8f09-d6c857a98ed1",
                        "uid": "10462328-9d6aaf9d-d1fb-4063-8f09-d6c857a98ed1"
                      }
                    ],
                    "id": "75141e8d-0447-4b71-a6a0-1ad769532655",
                    "uid": "10462328-75141e8d-0447-4b71-a6a0-1ad769532655"
                  },
                  {
                    "name": "Guatemala",
                    "item": [
                      {
                        "name": "Bam",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create bam payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "26d7cd7e-d6f5-4565-af5a-fc7eb8b27525"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "15a457f2-b06e-411c-b03f-cf7241fb7302"
                                    }
                                  }
                                ],
                                "id": "6aa4185a-e57f-4f60-a72c-17c6880761e2",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"bam\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"GTQ\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-6aa4185a-e57f-4f60-a72c-17c6880761e2"
                              }
                            ],
                            "id": "aafaf28d-1a10-44d1-a57d-33491ca185e7",
                            "uid": "10462328-aafaf28d-1a10-44d1-a57d-33491ca185e7"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create bam (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "b89addaa-3991-4a27-9ece-6785854f6a67"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "1f8ba59a-bce1-4140-9f6c-405f828976a2"
                                    }
                                  }
                                ],
                                "id": "e46a6e05-e4b6-4b33-93f7-4acfbc7d1841",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"bam\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"GTQ\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-e46a6e05-e4b6-4b33-93f7-4acfbc7d1841"
                              }
                            ],
                            "id": "bb5dd68d-081c-466f-a20d-3c6fb43b7eb8",
                            "uid": "10462328-bb5dd68d-081c-466f-a20d-3c6fb43b7eb8"
                          }
                        ],
                        "id": "5ef719d8-6186-4966-9879-c7a67f621e1c",
                        "uid": "10462328-5ef719d8-6186-4966-9879-c7a67f621e1c"
                      },
                      {
                        "name": "Banco Continental",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "ee185a0f-dc49-4267-ba6a-79b1e19e0aa8",
                            "uid": "10462328-ee185a0f-dc49-4267-ba6a-79b1e19e0aa8"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "e76010b1-7c46-4480-b997-ba61e7af8f05",
                            "uid": "10462328-e76010b1-7c46-4480-b997-ba61e7af8f05"
                          }
                        ],
                        "id": "1eb935af-2895-4ff8-b85d-565c59c2e752",
                        "uid": "10462328-1eb935af-2895-4ff8-b85d-565c59c2e752"
                      }
                    ],
                    "id": "cf684b90-4a65-4f58-93a5-69a3d3a0c8c7",
                    "uid": "10462328-cf684b90-4a65-4f58-93a5-69a3d3a0c8c7"
                  },
                  {
                    "name": "Mexico",
                    "item": [
                      {
                        "name": "Bancomer",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create BANCOMER payment (Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "7c374a77-1f30-4737-b556-5b00e0933ba0"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "4a0cb877-0651-402a-a6d9-4c50e114abf7"
                                    }
                                  }
                                ],
                                "id": "cc29fcaf-647d-4fde-9845-57004aee499d",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCOMER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-cc29fcaf-647d-4fde-9845-57004aee499d"
                              }
                            ],
                            "id": "f0e8274f-a850-43cd-8564-3ca0d4da071e",
                            "uid": "10462328-f0e8274f-a850-43cd-8564-3ca0d4da071e"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create BANCOMER payment (payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "ed66cac9-db65-4aef-9247-b4d7e7591bd2"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "97747e54-a218-4fd0-b400-80ced74eeaa7"
                                    }
                                  }
                                ],
                                "id": "0b67e56b-458d-445d-945e-3c0888a9f354",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCOMER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-0b67e56b-458d-445d-945e-3c0888a9f354"
                              }
                            ],
                            "id": "f74e63cc-f747-4298-8af8-81aeba5fb7e1",
                            "uid": "10462328-f74e63cc-f747-4298-8af8-81aeba5fb7e1"
                          }
                        ],
                        "id": "f4cf21bd-9a4e-4072-bf01-4445af0d5eea",
                        "uid": "10462328-f4cf21bd-9a4e-4072-bf01-4445af0d5eea"
                      },
                      {
                        "name": "Banorte",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "64412eb3-ee98-45e1-b1ac-a05a574f6276",
                            "uid": "10462328-64412eb3-ee98-45e1-b1ac-a05a574f6276"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "1880f5a6-2635-45ee-9fd5-9a3f55373a6a",
                            "uid": "10462328-1880f5a6-2635-45ee-9fd5-9a3f55373a6a"
                          }
                        ],
                        "id": "a6b83dbf-ef36-4c8f-a638-019637098c21",
                        "uid": "10462328-a6b83dbf-ef36-4c8f-a638-019637098c21"
                      },
                      {
                        "name": "Bodega Aurrera",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "1759e86e-a6ba-48c8-b19a-268e973eec1d",
                            "uid": "10462328-1759e86e-a6ba-48c8-b19a-268e973eec1d"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "d9396860-7126-472c-8239-05d58e3a7eac",
                            "uid": "10462328-d9396860-7126-472c-8239-05d58e3a7eac"
                          }
                        ],
                        "id": "68cd685e-30ad-453c-98e5-24406f802943",
                        "uid": "10462328-68cd685e-30ad-453c-98e5-24406f802943"
                      },
                      {
                        "name": "Calimax",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "e4fc821f-f53a-4fca-8ae8-636de9311d23",
                            "uid": "10462328-e4fc821f-f53a-4fca-8ae8-636de9311d23"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "81d620a2-ba44-4cef-b1f7-28af5e1a86bd",
                            "uid": "10462328-81d620a2-ba44-4cef-b1f7-28af5e1a86bd"
                          }
                        ],
                        "id": "4aee2167-0483-4123-9548-3b74aee92385",
                        "uid": "10462328-4aee2167-0483-4123-9548-3b74aee92385"
                      },
                      {
                        "name": "Delahorro",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create delahorro payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "ca6e60c6-12e7-4e30-89f2-cdc18a937634"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "c709b122-b881-40cf-82d7-dad286b1b30a"
                                    }
                                  }
                                ],
                                "id": "df659b60-9d47-4597-a6bf-f4b6f752300e",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"delahorro\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-df659b60-9d47-4597-a6bf-f4b6f752300e"
                              }
                            ],
                            "id": "67b5ad22-df71-437f-9c8e-e392edc59ee4",
                            "uid": "10462328-67b5ad22-df71-437f-9c8e-e392edc59ee4"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create Delahorro payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "0473f619-0a09-4faf-8c4d-de13734bc9a6"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "4eadd540-d3a0-4c17-b5dd-355e9fbda087"
                                    }
                                  }
                                ],
                                "id": "933644e4-0ef6-4500-9190-bcdee6b57e1d",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"delahorro\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-933644e4-0ef6-4500-9190-bcdee6b57e1d"
                              }
                            ],
                            "id": "eefec5fe-7bdd-4552-b51c-8129b85d41b1",
                            "uid": "10462328-eefec5fe-7bdd-4552-b51c-8129b85d41b1"
                          }
                        ],
                        "id": "db824f6a-7dbe-47c4-978a-073acd39eff9",
                        "uid": "10462328-db824f6a-7dbe-47c4-978a-073acd39eff9"
                      },
                      {
                        "name": "7 Eleven",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create 7ELEVEN payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "974e2218-fa1d-4e00-85d4-37ea699dbedd"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "d2f43bc7-881d-440c-be44-78bc88e52b05"
                                    }
                                  }
                                ],
                                "id": "2a30ca05-7f93-4faa-b692-d1e2109e2d3b",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"7ELEVEN\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-2a30ca05-7f93-4faa-b692-d1e2109e2d3b"
                              }
                            ],
                            "id": "82ca8655-cd4f-473a-8de1-f0a3d3769e38",
                            "uid": "10462328-82ca8655-cd4f-473a-8de1-f0a3d3769e38"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create 7ELEVEN payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "68afab3e-69dc-4ab3-9ca9-c251bd20c3d2"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "bd9bf19d-bc5c-4fb4-a4a9-5c9811c92ade"
                                    }
                                  }
                                ],
                                "id": "cbbcbffb-0ebe-4727-9abb-b3a19a9f0c92",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"7ELEVEN\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-cbbcbffb-0ebe-4727-9abb-b3a19a9f0c92"
                              }
                            ],
                            "id": "6ee80d4c-4485-451c-9c5f-e6a48e2c8752",
                            "uid": "10462328-6ee80d4c-4485-451c-9c5f-e6a48e2c8752"
                          }
                        ],
                        "id": "daf0122e-6ce7-4cd1-bd0e-83ab54bff6a4",
                        "uid": "10462328-daf0122e-6ce7-4cd1-bd0e-83ab54bff6a4"
                      }
                    ],
                    "id": "3702790d-2f91-4ac9-a86d-21d5b96543ee",
                    "uid": "10462328-3702790d-2f91-4ac9-a86d-21d5b96543ee"
                  },
                  {
                    "name": "Panama",
                    "item": [],
                    "id": "b55627f8-7665-435c-9f9c-582c925e5b33",
                    "uid": "10462328-b55627f8-7665-435c-9f9c-582c925e5b33"
                  },
                  {
                    "name": "Peru",
                    "item": [],
                    "id": "1797cd3d-6a9e-4d71-8a0b-3a773da1b5d5",
                    "uid": "10462328-1797cd3d-6a9e-4d71-8a0b-3a773da1b5d5"
                  }
                ],
                "id": "6403bfba-9642-419b-9762-b7f1375a6ed2",
                "uid": "10462328-6403bfba-9642-419b-9762-b7f1375a6ed2"
              },
              {
                "name": "Boleto",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create BOLETO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "dee2a39c-8193-49b1-8350-7d5ecd1d3524"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4fbcc829-3f72-4aeb-8c49-d735021ed4c5"
                            }
                          }
                        ],
                        "id": "9d3e25d2-3e88-4400-8cb1-bce6fe90240e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\",\n        \"shipping_address\": {\n            \"zip\": \"12345678\"\n        }\n    },\n    \"payment_method\": \"BOLETO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-9d3e25d2-3e88-4400-8cb1-bce6fe90240e"
                      }
                    ],
                    "id": "d95d4a29-4117-4274-be0d-37fff29ce181",
                    "uid": "10462328-d95d4a29-4117-4274-be0d-37fff29ce181"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create BOLETO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8e57c99e-f586-4aca-974e-4cdb2d82cce1"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2aff6092-7276-4f10-a100-fdd52484eb00"
                            }
                          }
                        ],
                        "id": "66e8f0b3-0d4e-4da2-b6b9-b0ccdc708ddb",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\",\n        \"shipping_address\": {\n            \"zip\": \"12345678\"\n        }\n    },\n    \"payment_method\": \"BOLETO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-66e8f0b3-0d4e-4da2-b6b9-b0ccdc708ddb"
                      }
                    ],
                    "id": "1e9cc8ec-7695-442c-915d-9aff29204193",
                    "uid": "10462328-1e9cc8ec-7695-442c-915d-9aff29204193"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create BOLETO payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "6c4713bd-32ae-4881-9a1f-2af1babd52ca",
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "dd8d1791-b991-4b70-ad3f-8a29bf93a73d",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "726d25c2-7e49-44be-bfe6-824a319448f4",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\",\n        \"shipping_address\": {\n            \"zip\": \"12345678\"\n        }\n    },\n    \"payment_method\": \"BOLETO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-726d25c2-7e49-44be-bfe6-824a319448f4"
                      }
                    ],
                    "id": "cdf517a3-e30e-43c1-98d4-219b1279bcf2",
                    "uid": "10462328-cdf517a3-e30e-43c1-98d4-219b1279bcf2"
                  }
                ],
                "id": "2c3a0b94-5ad2-4264-be9d-018d6db0ff82",
                "uid": "10462328-2c3a0b94-5ad2-4264-be9d-018d6db0ff82"
              },
              {
                "name": "Efecty",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create EFECTY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "901f73a1-7f9e-4164-81c8-13bfca19848f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4dfd3528-6a47-46e7-bd38-8ffe7012f7a5"
                            }
                          }
                        ],
                        "id": "f4184e2a-7959-4b7a-ad47-40948436dba9",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",    \n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"EFECTY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"1234567\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-f4184e2a-7959-4b7a-ad47-40948436dba9"
                      }
                    ],
                    "id": "1621829e-3476-4f25-9aaa-495c810ca757",
                    "uid": "10462328-1621829e-3476-4f25-9aaa-495c810ca757"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create EFECTY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "86557f4b-580c-4f45-b99a-c40f653d44ad"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "95d8828a-a073-420a-9ee4-de9c28a4480c"
                            }
                          }
                        ],
                        "id": "a9322dc7-d29c-4945-9824-4f7fb8caf284",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",    \n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"EFECTY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"1234567\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a9322dc7-d29c-4945-9824-4f7fb8caf284"
                      }
                    ],
                    "id": "369a3f5d-e766-48b7-a0bf-e9c817b8b8e1",
                    "uid": "10462328-369a3f5d-e766-48b7-a0bf-e9c817b8b8e1"
                  }
                ],
                "id": "2fccb269-1220-49b4-8e77-f84fdc4c63e1",
                "uid": "10462328-2fccb269-1220-49b4-8e77-f84fdc4c63e1"
              },
              {
                "name": "OXXO",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create OXXO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7b604402-1a7f-445e-bafe-c7ef1e8ab3ca"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "     pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d6ffd73a-36f4-494f-97cf-30dbed132835"
                            }
                          }
                        ],
                        "id": "b2b03e45-8c5d-4069-8e0f-1ab4277df848",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OXXO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b2b03e45-8c5d-4069-8e0f-1ab4277df848"
                      }
                    ],
                    "id": "5d0c537f-564b-4b9d-aee4-fdfd0f56c74b",
                    "uid": "10462328-5d0c537f-564b-4b9d-aee4-fdfd0f56c74b"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create OXXO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4b4add2a-8a38-4314-9f7f-e5ec943558e5"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "cbfe975c-348f-479d-9f4e-a1faf94568a1"
                            }
                          }
                        ],
                        "id": "a4317adf-968d-4699-bbb8-48cd1eb9b5d2",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OXXO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a4317adf-968d-4699-bbb8-48cd1eb9b5d2"
                      }
                    ],
                    "id": "506024ab-b88d-4bfe-a714-d00486f0f84e",
                    "uid": "10462328-506024ab-b88d-4bfe-a714-d00486f0f84e"
                  }
                ],
                "id": "d13a9e8a-3d5a-46c0-a0e4-37cfd860af27",
                "uid": "10462328-d13a9e8a-3d5a-46c0-a0e4-37cfd860af27"
              },
              {
                "name": "SPEI",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create SPEI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e5b94642-cb0d-45d9-960e-8c04c1eacdbb"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1e0bbca5-d52d-4e9e-9490-1d5185d86bb9"
                            }
                          }
                        ],
                        "id": "dd83fb1f-614f-44d4-8555-a91ef96e5e0e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-dd83fb1f-614f-44d4-8555-a91ef96e5e0e"
                      }
                    ],
                    "id": "685d82d3-2b8e-418c-bcb8-8322881706e3",
                    "uid": "10462328-685d82d3-2b8e-418c-bcb8-8322881706e3"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create SPEI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c1acdcd1-fb96-4430-afad-8037b881bec2"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e746ef59-f761-40ca-8d7d-1c3d17bd6fcc"
                            }
                          }
                        ],
                        "id": "2328ff1a-880d-4347-b350-b0bb35a82f9c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2328ff1a-880d-4347-b350-b0bb35a82f9c"
                      }
                    ],
                    "id": "3bb5d679-632f-4e86-8e32-bd54dbf6487e",
                    "uid": "10462328-3bb5d679-632f-4e86-8e32-bd54dbf6487e"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create SPEI payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "1c7a09c2-51b6-43f0-8b06-cc42c340cf41",
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "a0364255-e4be-4e82-bd37-32459a30c6ef",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "c3c4f420-6ba6-45dd-9ecc-2d618daf2a0d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c3c4f420-6ba6-45dd-9ecc-2d618daf2a0d"
                      }
                    ],
                    "id": "003c4bc3-5270-47be-8b06-dc30797fec82",
                    "uid": "10462328-003c4bc3-5270-47be-8b06-dc30797fec82"
                  }
                ],
                "id": "3c2be9ca-709e-48eb-8d84-225e01d036d3",
                "uid": "10462328-3c2be9ca-709e-48eb-8d84-225e01d036d3"
              },
              {
                "name": "Davivienda",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create davivienda payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6a84b63e-b0ab-430a-b0a1-72689aaf7e4f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "00ccfb5b-8696-4f4f-945e-a0c98c4b0086"
                            }
                          }
                        ],
                        "id": "13358aad-f6d6-458c-b6d5-9c64eba7c0c4",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"davivienda\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"123456789\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-13358aad-f6d6-458c-b6d5-9c64eba7c0c4"
                      }
                    ],
                    "id": "3dc86a03-6a74-415a-babe-2c424997a428",
                    "uid": "10462328-3dc86a03-6a74-415a-babe-2c424997a428"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create davivienda payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4057c142-6b15-464d-bd63-163f8feb57d6"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ee7bf9c5-5ec0-4e74-b99a-a99224359dae"
                            }
                          }
                        ],
                        "id": "5f10e0ca-9459-460a-898d-7c3327a976e6",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"davivienda\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"123456789\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-5f10e0ca-9459-460a-898d-7c3327a976e6"
                      }
                    ],
                    "id": "523aed27-6098-45c3-95ee-c8dcbf47a8aa",
                    "uid": "10462328-523aed27-6098-45c3-95ee-c8dcbf47a8aa"
                  }
                ],
                "id": "69c648fa-5946-4ac0-8991-7ec3fddc16a1",
                "uid": "10462328-69c648fa-5946-4ac0-8991-7ec3fddc16a1"
              },
              {
                "name": "DiMo",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Dimo payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "63125f03-d2ff-499d-9139-151eeca1f3d9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1e40c897-e6b8-4f90-9a46-46ff669f6ce0"
                            }
                          }
                        ],
                        "id": "52693810-bc10-491a-b279-30dbe3c2ecab",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-52693810-bc10-491a-b279-30dbe3c2ecab"
                      }
                    ],
                    "id": "16895b5a-f2b6-4289-8946-7d4250c26671",
                    "uid": "10462328-16895b5a-f2b6-4289-8946-7d4250c26671"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Dimo payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9216c5e7-435c-458d-b2ad-ae9f6d4dace1"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "36c5c90e-a4d9-4873-a457-a02bab13fd0b"
                            }
                          }
                        ],
                        "id": "cf613106-7512-4f8c-8632-4d16488fe16f",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-cf613106-7512-4f8c-8632-4d16488fe16f"
                      }
                    ],
                    "id": "bb1d2c42-9c50-4ce0-9df8-472e2615a042",
                    "uid": "10462328-bb1d2c42-9c50-4ce0-9df8-472e2615a042"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Dimo payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "d2336450-6754-4520-96c6-5f21d50e8d28",
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "b4c9e26b-e837-4d1b-8b9a-63c70ab42648",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "cc2315b5-5d56-484b-ab08-2fe1e2d1f2ee",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-cc2315b5-5d56-484b-ab08-2fe1e2d1f2ee"
                      }
                    ],
                    "id": "55917907-e976-4db8-8b99-d9da9157c407",
                    "uid": "10462328-55917907-e976-4db8-8b99-d9da9157c407"
                  }
                ],
                "id": "d0ce66e3-f019-4820-80bf-d8293de07952",
                "uid": "10462328-d0ce66e3-f019-4820-80bf-d8293de07952"
              },
              {
                "name": "Pago Efectivo",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PAGOEFECTIVO payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "abe024fc-bb2f-497c-aec3-222d5c4d18c4",
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "18cfde9d-7cd3-45b7-a907-07564d0ce6e4",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "7015aaa1-0fb7-42e8-a347-2e1be2792cda",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAGOEFECTIVO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"document_type\": \"DNI\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"phone\":\"123456789\",\n        \"identity\": \"12345678\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-7015aaa1-0fb7-42e8-a347-2e1be2792cda"
                      }
                    ],
                    "id": "85725ee5-d984-4283-9cbf-9ddf36c6322a",
                    "uid": "10462328-85725ee5-d984-4283-9cbf-9ddf36c6322a"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PAGOEFECTIVO payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f6d7d6e8-b2cb-4299-9783-3a332bd3582a"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "69bc64af-08f0-434d-9d67-346e96c649b4"
                            }
                          }
                        ],
                        "id": "4e680665-637a-46e0-bdc6-8959f520110c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAGOEFECTIVO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-4e680665-637a-46e0-bdc6-8959f520110c"
                      }
                    ],
                    "id": "3f44e908-56cc-4398-bd2b-97b38a2892cd",
                    "uid": "10462328-3f44e908-56cc-4398-bd2b-97b38a2892cd"
                  }
                ],
                "id": "9a1628a0-dc0a-474b-a533-7df7b53237bf",
                "uid": "10462328-9a1628a0-dc0a-474b-a533-7df7b53237bf"
              },
              {
                "name": "PIX",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PIX payment(gateway)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6fb6e139-7474-44cb-aea8-ec51af4ab674"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a8715a87-6ebd-4e08-b5a1-124d98ec92de"
                            }
                          }
                        ],
                        "id": "674352af-d6e3-4d7b-8b41-5f51bbf3b74e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"PIX\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-674352af-d6e3-4d7b-8b41-5f51bbf3b74e"
                      }
                    ],
                    "id": "af112006-bbc7-4715-9a7e-4fba3406dac0",
                    "uid": "10462328-af112006-bbc7-4715-9a7e-4fba3406dac0"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PIX payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "db1f9bf9-54fe-49cc-92fe-22e47e4528ae"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "47887e60-f3a1-4628-8fb0-22d3280b0f36"
                            }
                          }
                        ],
                        "id": "39a91d73-2d51-4c10-b497-b8af6368cebb",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"PIX\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-39a91d73-2d51-4c10-b497-b8af6368cebb"
                      }
                    ],
                    "id": "d56633d4-2381-4041-92ed-52c3b6b0d89c",
                    "uid": "10462328-d56633d4-2381-4041-92ed-52c3b6b0d89c"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create PIX payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "4899e75a-eb88-400e-9fbb-b9a6fca4d275",
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "b149c178-a25d-4f59-8a15-2312c935557f",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "8cf3d913-082a-4556-962c-04c2433eafcf",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"PIX\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8cf3d913-082a-4556-962c-04c2433eafcf"
                      }
                    ],
                    "id": "bee99715-07aa-43d9-b301-3ba7349eb608",
                    "uid": "10462328-bee99715-07aa-43d9-b301-3ba7349eb608"
                  }
                ],
                "id": "6f289f21-0c98-4e86-812e-c832d8b10136",
                "uid": "10462328-6f289f21-0c98-4e86-812e-c832d8b10136"
              },
              {
                "name": "QR code PicPay",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PICPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "194e1af0-6524-4c75-9f29-d173ad1a7521"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "812c5793-9b65-4bf2-8b3e-4f34fe76bc3e"
                            }
                          }
                        ],
                        "id": "8d5e7d27-3294-4b21-bccb-cbf14ea5b6ca",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PICPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n       \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8d5e7d27-3294-4b21-bccb-cbf14ea5b6ca"
                      }
                    ],
                    "id": "540e9cbb-1e95-4f1b-9f1c-896fed3ecc35",
                    "uid": "10462328-540e9cbb-1e95-4f1b-9f1c-896fed3ecc35"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PICPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "df5c30af-d800-48f4-9244-55abbc3523ac"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "aea46c52-ee9d-4879-b9b3-d317e8a5bdf6"
                            }
                          }
                        ],
                        "id": "1c768b4d-1ab4-40c6-8d0c-53d0a109f45f",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PICPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n       \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-1c768b4d-1ab4-40c6-8d0c-53d0a109f45f"
                      }
                    ],
                    "id": "cfa6382c-e5b0-4bf4-b01c-1bb2db2e9bcc",
                    "uid": "10462328-cfa6382c-e5b0-4bf4-b01c-1bb2db2e9bcc"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create PICPAY payment(ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "d66994c8-c311-4fb4-9580-731a8778d063",
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "44850a10-4766-43d6-8998-6d87c7be0891",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "c129447f-9a8c-409e-8716-30559213e9b9",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PICPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n       \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c129447f-9a8c-409e-8716-30559213e9b9"
                      }
                    ],
                    "id": "f222169d-ae48-4ecf-b084-ffaa8c0c68ac",
                    "uid": "10462328-f222169d-ae48-4ecf-b084-ffaa8c0c68ac"
                  }
                ],
                "id": "7b9c7734-dcaa-450a-a20e-6d44249377b4",
                "uid": "10462328-7b9c7734-dcaa-450a-a20e-6d44249377b4"
              },
              {
                "name": "Codi",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create CODI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a73da8bd-4cae-4fcc-a6f7-fd569c5dcd86"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d023eb51-044f-407e-8a83-66be2a437ca4"
                            }
                          }
                        ],
                        "id": "55c07e83-8363-45d5-b544-6d9390ab50b0",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CODI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-55c07e83-8363-45d5-b544-6d9390ab50b0"
                      }
                    ],
                    "id": "82f19654-ac9b-4e42-99eb-f0668ca4cc5b",
                    "uid": "10462328-82f19654-ac9b-4e42-99eb-f0668ca4cc5b"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create CODI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "de0f98b2-d336-45f7-b8f6-9d9a81d1e3fb"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9512ea32-6024-449b-a8e3-470a690b4d35"
                            }
                          }
                        ],
                        "id": "05cc20b7-acc9-4499-9e18-354f06b93051",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CODI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-05cc20b7-acc9-4499-9e18-354f06b93051"
                      }
                    ],
                    "id": "413d261d-825b-49f6-a7b6-8e58a124441c",
                    "uid": "10462328-413d261d-825b-49f6-a7b6-8e58a124441c"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create CODI payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "416ebd30-562d-4489-9c2f-5154379e03de",
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "b48e8bc4-3cb0-4647-ba09-8ff6353f9a14",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "36f5cbf0-bd03-4a92-9cc3-30bd8b7baa98",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CODI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-36f5cbf0-bd03-4a92-9cc3-30bd8b7baa98"
                      }
                    ],
                    "id": "a3c9b3a3-cd10-44dd-bab0-5fbfa159b4f7",
                    "uid": "10462328-a3c9b3a3-cd10-44dd-bab0-5fbfa159b4f7"
                  }
                ],
                "id": "340271ab-6045-425b-aa6e-8b8c14b8fbd4",
                "uid": "10462328-340271ab-6045-425b-aa6e-8b8c14b8fbd4"
              },
              {
                "name": "PSE",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PSE payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fdb698ee-00f4-4de9-9adc-493e276efbb4"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "439d203a-c77a-4a7b-812a-b671a5d3647f"
                            }
                          }
                        ],
                        "id": "2b8df921-9c4a-4348-b851-d2430dc71e05",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PSE\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"bank_code\": \"1032\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"3051234567\",\n        \"document_type\": \"TID\",\n        \"identity\": \"401.162.304-01\",\n        \"living_address\": {\n            \"address\": \"1600 Pennsylvania Ave NW\"\n        }\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2b8df921-9c4a-4348-b851-d2430dc71e05"
                      }
                    ],
                    "id": "d6197f78-8d43-4966-9171-ba6c0dbf0816",
                    "uid": "10462328-d6197f78-8d43-4966-9171-ba6c0dbf0816"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PSE payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "24a73054-e37c-4a30-8066-ac50f3a11b77"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "70dc4e81-e967-47ce-9356-ec85c5524f51"
                            }
                          }
                        ],
                        "id": "46c15161-4473-4304-ae4d-acd09df313e8",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PSE\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"bank_code\": \"1032\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"3051234567\",\n        \"document_type\": \"TID\",\n        \"identity\": \"401.162.304-01\",\n        \"living_address\": {\n            \"address\": \"1600 Pennsylvania Ave NW\"\n        }\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-46c15161-4473-4304-ae4d-acd09df313e8"
                      }
                    ],
                    "id": "df0a7e14-515e-4711-9cd4-74532f8a03dd",
                    "uid": "10462328-df0a7e14-515e-4711-9cd4-74532f8a03dd"
                  }
                ],
                "id": "c63c505f-38e0-445d-822e-d24fa7fdc6e8",
                "uid": "10462328-c63c505f-38e0-445d-822e-d24fa7fdc6e8"
              },
              {
                "name": "Mercado Pago",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [],
                    "id": "f9fc9e59-be93-47cb-b53e-b13cfdacd67e",
                    "uid": "10462328-f9fc9e59-be93-47cb-b53e-b13cfdacd67e"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [],
                    "id": "27679d1d-f57e-4442-b94e-f0b609982542",
                    "uid": "10462328-27679d1d-f57e-4442-b94e-f0b609982542"
                  }
                ],
                "id": "47ad651b-831f-4c01-8959-c83040472ce9",
                "uid": "10462328-47ad651b-831f-4c01-8959-c83040472ce9"
              },
              {
                "name": "NuPay",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create NUPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "00b70f07-411b-4882-86a5-24b801c913f7"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "cde5240b-f939-49ac-a74c-a660bdb9c2a6"
                            }
                          }
                        ],
                        "id": "50f1f4ed-5609-4623-8900-ed0aa6615a39",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"count\": 1,\n                \"description\": \"test\",\n                \"name\": \"apple\",\n                \"price\": 1\n            }\n        ]\n    },\n    \"payment_method\": \"NUPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"67753423657\",\n        \"phone\": \"5501234567890\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-50f1f4ed-5609-4623-8900-ed0aa6615a39"
                      }
                    ],
                    "id": "f7dc8074-3102-4acf-998c-a8366d66ff3d",
                    "uid": "10462328-f7dc8074-3102-4acf-998c-a8366d66ff3d"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create NUPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a0754cbe-7f63-445f-8070-7e381b432679"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3f224e4a-d5b1-463d-a178-f26fb32a52ee"
                            }
                          }
                        ],
                        "id": "b7fd361b-1f01-4384-8b04-c7e15817b791",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"count\": 1,\n                \"description\": \"test\",\n                \"name\": \"apple\",\n                \"price\": 1\n            }\n        ]\n    },\n    \"payment_method\": \"NUPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"67753423657\",\n        \"phone\": \"5501234567890\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b7fd361b-1f01-4384-8b04-c7e15817b791"
                      }
                    ],
                    "id": "e6f3b059-1609-46b6-a1d4-9726c4e94272",
                    "uid": "10462328-e6f3b059-1609-46b6-a1d4-9726c4e94272"
                  }
                ],
                "id": "b5576c9f-759f-448a-9b49-6acd0a05e7d3",
                "uid": "10462328-b5576c9f-759f-448a-9b49-6acd0a05e7d3"
              }
            ],
            "id": "bdceb792-8285-4199-8dbf-9f1adff9c19b",
            "uid": "10462328-bdceb792-8285-4199-8dbf-9f1adff9c19b"
          },
          {
            "name": "Africa",
            "item": [
              {
                "name": "Direct Banking Nigeria",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create DIRECTBANKINGNGA payment (gateway)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4d7a7496-a8ae-4e9d-ad3c-f0fb183a7584"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "745562b4-ee71-402c-97ae-08631ce0726e"
                            }
                          }
                        ],
                        "id": "5c8d95d5-08e1-410e-8314-5660da349ad1",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGNGA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"bank_code\": \"057\",\n        \"id\": \"1111111111\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"1234567891\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"birth_date\": \"2010-10-10\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-5c8d95d5-08e1-410e-8314-5660da349ad1"
                      }
                    ],
                    "id": "1bf540e7-ab25-4a82-a898-6d87a2baa88f",
                    "uid": "10462328-1bf540e7-ab25-4a82-a898-6d87a2baa88f"
                  },
                  {
                    "name": "Payment Page mode",
                    "item": [
                      {
                        "name": "Create DIRECTBANKINGNGA payment (payment page mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3c26b7b6-0dbc-46e7-8290-b947d36a1543"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "25e5e1e1-e750-43f5-8637-7c0c7c3e13e8"
                            }
                          }
                        ],
                        "id": "d0414055-a444-4d7e-b057-4b43e0197837",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGNGA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1780004070\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"1234567891\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d0414055-a444-4d7e-b057-4b43e0197837"
                      }
                    ],
                    "id": "f3f33bb6-7657-4994-ad22-a836394b682b",
                    "uid": "10462328-f3f33bb6-7657-4994-ad22-a836394b682b"
                  }
                ],
                "id": "3d743cee-148b-4719-8640-8fccb7c3aa11",
                "uid": "10462328-3d743cee-148b-4719-8640-8fccb7c3aa11"
              },
              {
                "name": "M-Pesa",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create MPESA payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5371c19d-a9b2-4ddc-aa5b-735997a4c386"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8129139f-caf1-4ae8-b86d-5cd49901f2c8"
                            }
                          }
                        ],
                        "id": "607fa015-646b-46e2-a71d-7338f4e5895a",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-607fa015-646b-46e2-a71d-7338f4e5895a"
                      }
                    ],
                    "id": "aab36c54-da33-4455-84c7-eef5e79ebfd3",
                    "uid": "10462328-aab36c54-da33-4455-84c7-eef5e79ebfd3"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create MPESA payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "62c6a6fe-11aa-44b4-9e15-4706eab06eb2"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2f1c0f32-369a-4667-9343-ba79de964d42"
                            }
                          }
                        ],
                        "id": "9579315d-5c53-4fe3-badb-80d2168aa840",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-9579315d-5c53-4fe3-badb-80d2168aa840"
                      }
                    ],
                    "id": "f132a02f-ea0f-402c-8801-0c8ba4e28f36",
                    "uid": "10462328-f132a02f-ea0f-402c-8801-0c8ba4e28f36"
                  }
                ],
                "id": "985a23f6-215c-4bfa-b959-0ac3041e97b8",
                "uid": "10462328-985a23f6-215c-4bfa-b959-0ac3041e97b8"
              },
              {
                "name": "Airtel",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create AIRTEL payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "03912e25-978c-46a0-80d5-a14715d55577"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3faaaaff-6403-43dc-be35-8dee5e6bf06e"
                            }
                          }
                        ],
                        "id": "b26dae25-db89-40c9-9b42-feffef49dfe8",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman\"\n    },\n    \"payment_method\": \"AIRTEL\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b26dae25-db89-40c9-9b42-feffef49dfe8"
                      }
                    ],
                    "id": "13ca54b6-9c81-41ad-b7dc-f869e4de3b03",
                    "uid": "10462328-13ca54b6-9c81-41ad-b7dc-f869e4de3b03"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create AIRTEL payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "09fa906d-bc74-4ccd-bea6-be5bdf204c13"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "712279ca-12ad-4e82-b1e5-ec688e4e522e"
                            }
                          }
                        ],
                        "id": "0665f4f6-f151-4c87-b276-c2835da92453",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman\"\n    },\n    \"payment_method\": \"AIRTEL\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-0665f4f6-f151-4c87-b276-c2835da92453"
                      }
                    ],
                    "id": "b31aa9b5-ebe3-48ab-a5b6-c4b11ed37dd5",
                    "uid": "10462328-b31aa9b5-ebe3-48ab-a5b6-c4b11ed37dd5"
                  }
                ],
                "id": "e1a30f34-b31f-41f9-a0ec-aec81709263e",
                "uid": "10462328-e1a30f34-b31f-41f9-a0ec-aec81709263e"
              },
              {
                "name": "Airtel Tanzania",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create AIRTELTZS payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "82dc2311-1d6e-48e4-a21a-71a34448a802",
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "012c31b5-fe35-401b-ad04-a22ef7142063",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "e8901e0a-bace-41d0-aa6c-cdc172ddad85",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman_Collection_Order\"\n    },\n    \"payment_method\": \"AIRTELTZS\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-e8901e0a-bace-41d0-aa6c-cdc172ddad85"
                      }
                    ],
                    "id": "7f2bf638-7c30-4958-948e-fcb71fef7693",
                    "uid": "10462328-7f2bf638-7c30-4958-948e-fcb71fef7693"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create AIRTELTZS payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "51b49a9c-efc6-46bf-894e-480816857db1",
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "8e35aea7-213a-49f8-903e-fa224a6695b6",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "4792ca5b-b76d-46c1-9d4f-5f8c4ce07251",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman_Collection_Order\"\n    },\n    \"payment_method\": \"AIRTELTZS\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-4792ca5b-b76d-46c1-9d4f-5f8c4ce07251"
                      }
                    ],
                    "id": "2d305517-b9ff-4686-8f8f-3c1f4e93648f",
                    "uid": "10462328-2d305517-b9ff-4686-8f8f-3c1f4e93648f"
                  }
                ],
                "id": "3bff4bd7-1988-4b3a-a40e-ce07efed1a21",
                "uid": "10462328-3bff4bd7-1988-4b3a-a40e-ce07efed1a21"
              },
              {
                "name": "Payattitude",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Payattitude payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "19c6840f-f197-470f-bc22-52cbc247997b"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "304b65d7-6e63-4c8d-b49b-fae64f528dec"
                            }
                          }
                        ],
                        "id": "b095b7e6-625e-46be-8077-ebfaa78b8de2",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payattitude\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"2341234567890\"\n    },\n    \"customer\": {\n            \"full_name\": \"{{$randomFullName}}\",\n            \"email\": \"{{CUSTOMER_EMAIL}}\"\n        }\n    }",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b095b7e6-625e-46be-8077-ebfaa78b8de2"
                      }
                    ],
                    "id": "0f75061f-9bd6-42be-af21-eaed4e74a4c5",
                    "uid": "10462328-0f75061f-9bd6-42be-af21-eaed4e74a4c5"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Payattitude payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7e50ce66-849e-42e6-b272-2a0cddf6335d"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "aa6f2405-fa1d-4bc4-bf44-8b0ef4cff325"
                            }
                          }
                        ],
                        "id": "7c83735c-6f50-4329-afa6-b65fa4c10dcc",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payattitude\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"2341234567890\"\n    },\n    \"customer\": {\n            \"full_name\": \"{{$randomFullName}}\",\n            \"email\": \"{{CUSTOMER_EMAIL}}\"\n        }\n    }",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-7c83735c-6f50-4329-afa6-b65fa4c10dcc"
                      }
                    ],
                    "id": "25ea791c-6b75-4244-b90c-dc0631499e89",
                    "uid": "10462328-25ea791c-6b75-4244-b90c-dc0631499e89"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Payattitude payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "c392e2ba-ee91-46e5-bce8-26369b6f8e94",
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f0a9cc61-e39e-47d4-a857-09692b485d5d",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "657b2b5c-a441-4adf-a534-af72aef010dd",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payattitude\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"2341234567890\"\n    },\n    \"customer\": {\n            \"full_name\": \"{{$randomFullName}}\",\n            \"email\": \"{{CUSTOMER_EMAIL}}\"\n        }\n    }",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-657b2b5c-a441-4adf-a534-af72aef010dd"
                      }
                    ],
                    "id": "0d482f67-5296-4fc6-abd3-d0d64b77ec21",
                    "uid": "10462328-0d482f67-5296-4fc6-abd3-d0d64b77ec21"
                  }
                ],
                "id": "07546380-939f-41d0-bdee-d7c2834ef65b",
                "uid": "10462328-07546380-939f-41d0-bdee-d7c2834ef65b"
              },
              {
                "name": "Pesalink",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create pesalink payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d260f97b-8ed4-42f5-9037-e53990a60311"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8fe006a4-75db-42f3-84f3-710d3bed17e6"
                            }
                          }
                        ],
                        "id": "10772334-8aac-4c1a-b97e-6445ecc46804",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"pesalink\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-10772334-8aac-4c1a-b97e-6445ecc46804"
                      }
                    ],
                    "id": "e55bc5d5-884f-44ed-8548-7e610effd699",
                    "uid": "10462328-e55bc5d5-884f-44ed-8548-7e610effd699"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create pesalink payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b23acfa0-a410-4b0b-b35e-c0cdcc79356a"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7bcfa92f-f22a-4496-aeb5-42d88ec261d4"
                            }
                          }
                        ],
                        "id": "40457485-9d81-4539-9957-149960b0b1a6",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"pesalink\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-40457485-9d81-4539-9957-149960b0b1a6"
                      }
                    ],
                    "id": "4a8dae02-64dd-43af-89c7-64098d706d89",
                    "uid": "10462328-4a8dae02-64dd-43af-89c7-64098d706d89"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create pesalink payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "24485396-7608-4dbb-ad2e-23ed8b794fe7",
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "9e9a8074-4ea4-412b-b20d-2b32e05fc2b0",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "52a92bc2-785a-4023-9401-bfb6ca8160c3",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"pesalink\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-52a92bc2-785a-4023-9401-bfb6ca8160c3"
                      }
                    ],
                    "id": "41cec8c5-590e-42c7-b9ef-a5c0bf9d5d8e",
                    "uid": "10462328-41cec8c5-590e-42c7-b9ef-a5c0bf9d5d8e"
                  }
                ],
                "id": "c9c95fb7-9360-4b3c-bea2-e6614f8d9712",
                "uid": "10462328-c9c95fb7-9360-4b3c-bea2-e6614f8d9712"
              },
              {
                "name": "FCMB Virtual Account",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create FCMBVA payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "87dfd249-8ec3-423a-8e54-057aa0d9db8a"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "39b8b588-8fc7-4271-8f44-3dc27deda52b"
                            }
                          }
                        ],
                        "id": "64ad5f10-4b43-4be1-af1a-3bd0796d9125",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"FCMBVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-64ad5f10-4b43-4be1-af1a-3bd0796d9125"
                      }
                    ],
                    "id": "8b0daba8-cf25-4bc3-9f9e-ae60ec74649b",
                    "uid": "10462328-8b0daba8-cf25-4bc3-9f9e-ae60ec74649b"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create FCMBVA payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "55077c91-26ef-4e74-b098-bf0017653cf9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "42e8ed9f-8888-460b-ae36-b98220f46a75"
                            }
                          }
                        ],
                        "id": "0935fdd2-9b07-45f2-a879-d30f661ae9ab",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"FCMBVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-0935fdd2-9b07-45f2-a879-d30f661ae9ab"
                      }
                    ],
                    "id": "d8024a37-fe7e-4a33-9b5b-eb80491a39bd",
                    "uid": "10462328-d8024a37-fe7e-4a33-9b5b-eb80491a39bd"
                  }
                ],
                "id": "fa6b4c43-1b1c-4d1b-9912-80a8981be09c",
                "uid": "10462328-fa6b4c43-1b1c-4d1b-9912-80a8981be09c"
              },
              {
                "name": "Fidelity VA",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create fidelityva payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f32e0ba0-c296-40ec-8927-3a6e4d31f09f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "54e2d3c3-556c-4290-b534-338740836587"
                            }
                          }
                        ],
                        "id": "8243d200-1ecb-4928-8d75-3969ae50aa3b",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"fidelityva\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n     \"ewallet_account\":\n    {\n        \"id\": \"2341234567890\"\n}\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8243d200-1ecb-4928-8d75-3969ae50aa3b"
                      }
                    ],
                    "id": "126a0209-92f0-4337-9d7a-9b523954de83",
                    "uid": "10462328-126a0209-92f0-4337-9d7a-9b523954de83"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create fidelityva payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "215cafa8-b7a2-4a88-9c76-56b147b2e759"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1891ea15-b56d-4068-b633-bc890b5c6ef2"
                            }
                          }
                        ],
                        "id": "4f6dc6ed-89f0-415f-8a50-77a0ffc5d8a1",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"fidelityva\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n     \"ewallet_account\":\n    {\n        \"id\": \"2341234567890\"\n}\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-4f6dc6ed-89f0-415f-8a50-77a0ffc5d8a1"
                      }
                    ],
                    "id": "60a58335-f577-4421-932a-767ff31d0169",
                    "uid": "10462328-60a58335-f577-4421-932a-767ff31d0169"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create fidelityva payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "0d8fe78d-0388-46ed-808a-15073e07c8fb"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7b92a37a-908c-408a-8423-734c457b52c7"
                            }
                          }
                        ],
                        "id": "3895a97f-1db8-4a8c-8d1d-894d26e5bd1d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"fidelityva\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n     \"ewallet_account\":\n    {\n        \"id\": \"2341234567890\"\n}\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-3895a97f-1db8-4a8c-8d1d-894d26e5bd1d"
                      }
                    ],
                    "id": "e8e0166a-8a01-4aa9-8c3d-c1b46af075d3",
                    "uid": "10462328-e8e0166a-8a01-4aa9-8c3d-c1b46af075d3"
                  }
                ],
                "id": "2bc7a741-cd48-48ac-b511-5b0eae1f6039",
                "uid": "10462328-2bc7a741-cd48-48ac-b511-5b0eae1f6039"
              }
            ],
            "id": "734abb68-be0b-40bd-914a-e9a03220e32a",
            "uid": "10462328-734abb68-be0b-40bd-914a-e9a03220e32a"
          },
          {
            "name": "Asia",
            "item": [
              {
                "name": "Indonesia",
                "item": [
                  {
                    "name": "Alfa VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create ALFAVA payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "454f0449-66d7-40f5-aa83-e05ef7370086"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "27c169d0-c3e2-4c66-a1f6-bb866b24482d"
                                }
                              }
                            ],
                            "id": "4893a4d0-2472-4635-9918-7fcd3d4a7672",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALFAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-4893a4d0-2472-4635-9918-7fcd3d4a7672"
                          }
                        ],
                        "id": "b5bcaf27-dbad-4e07-a7b8-a506847b0fc9",
                        "uid": "10462328-b5bcaf27-dbad-4e07-a7b8-a506847b0fc9"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create ALFAVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ec51e20a-4f67-4f66-a998-ab4e2661061a"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "28707ccc-1a13-4823-91f3-1a5465cd45c0"
                                }
                              }
                            ],
                            "id": "6061a2cc-c1b4-4fe6-8268-6580ba1a392b",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALFAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-6061a2cc-c1b4-4fe6-8268-6580ba1a392b"
                          }
                        ],
                        "id": "c8b9fc59-326d-4656-ae54-56b3ab577743",
                        "uid": "10462328-c8b9fc59-326d-4656-ae54-56b3ab577743"
                      }
                    ],
                    "id": "fcacad2b-4abc-4b7a-82ba-419313855201",
                    "uid": "10462328-fcacad2b-4abc-4b7a-82ba-419313855201"
                  },
                  {
                    "name": "CIMB VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create CIMBVA payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6d8e992e-6a27-4b8d-84b2-c396d2cd1d34"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ffce148e-8a68-46d6-9c6d-74c878999e0e"
                                }
                              }
                            ],
                            "id": "d046ded1-bd04-4b7f-b442-257603ec2497",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CIMBVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-d046ded1-bd04-4b7f-b442-257603ec2497"
                          }
                        ],
                        "id": "15d82b89-093c-4f91-9282-99d2b7ecbf8d",
                        "uid": "10462328-15d82b89-093c-4f91-9282-99d2b7ecbf8d"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create CIMBVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "651673a9-a190-4554-8cbe-d5e456aa47d8"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "57f2842d-b3ba-41ff-a006-cc1da3d3364a"
                                }
                              }
                            ],
                            "id": "afb6be07-c22c-462d-b40f-c3858a96e5a5",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CIMBVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-afb6be07-c22c-462d-b40f-c3858a96e5a5"
                          }
                        ],
                        "id": "4726be10-2415-413f-98ab-cb17c165032a",
                        "uid": "10462328-4726be10-2415-413f-98ab-cb17c165032a"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create CIMBVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "1c8c301e-ad38-4fc9-abe3-d4caacf7da98",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "6c3ae361-c57e-422f-9d4d-947d63fe84bb",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "d7e2c1fc-74e1-4905-ba1f-3ffa85c3aba3",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CIMBVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-d7e2c1fc-74e1-4905-ba1f-3ffa85c3aba3"
                          }
                        ],
                        "id": "4a77b9c0-8b9f-452a-bffb-903414a4e0a4",
                        "uid": "10462328-4a77b9c0-8b9f-452a-bffb-903414a4e0a4"
                      }
                    ],
                    "id": "77c83ee3-c146-453c-bc7a-8ccac44b019e",
                    "uid": "10462328-77c83ee3-c146-453c-bc7a-8ccac44b019e"
                  },
                  {
                    "name": "Danamon VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "e53949cd-dd30-40df-8080-7f7fd57efbe2",
                        "uid": "10462328-e53949cd-dd30-40df-8080-7f7fd57efbe2"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "6cdd4fbc-754b-4ec7-b0dd-ffd047bef9dd",
                        "uid": "10462328-6cdd4fbc-754b-4ec7-b0dd-ffd047bef9dd"
                      }
                    ],
                    "id": "9c443aa5-a0bd-4903-ba97-435a5cbb9900",
                    "uid": "10462328-9c443aa5-a0bd-4903-ba97-435a5cbb9900"
                  },
                  {
                    "name": "Permata VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create PERMATAVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6b390860-feef-432f-81c0-5f3ff73ed7ff"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "3ef56795-20d6-4ccf-86c6-75221e9a1976"
                                }
                              }
                            ],
                            "id": "8876c0d4-5be1-4ad5-b87a-57ff1057b11b",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PERMATAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-8876c0d4-5be1-4ad5-b87a-57ff1057b11b"
                          }
                        ],
                        "id": "b075cb56-51d7-4ad9-9308-ea6a3fe3ff3f",
                        "uid": "10462328-b075cb56-51d7-4ad9-9308-ea6a3fe3ff3f"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create PERMATAVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7419a707-15ee-490d-9916-075af1487893"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "9732ade1-4fc0-4351-9e5f-356c298feb4f"
                                }
                              }
                            ],
                            "id": "0807e9fa-3667-4ffe-b141-5fc9c039cc71",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PERMATAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-0807e9fa-3667-4ffe-b141-5fc9c039cc71"
                          }
                        ],
                        "id": "1759fc29-4839-43c8-8df3-ee97d1a9d4c1",
                        "uid": "10462328-1759fc29-4839-43c8-8df3-ee97d1a9d4c1"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create PERMATAVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "36249ede-95e0-40a6-b369-9fecadbbd798",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "e83e6d6f-ad5b-48ea-a5f8-8e541f60a5b1",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "a01315c1-18a7-4c46-933a-d2333ae16a6e",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PERMATAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-a01315c1-18a7-4c46-933a-d2333ae16a6e"
                          }
                        ],
                        "id": "cd501d44-1461-4d60-8cdb-428e8c3a529d",
                        "uid": "10462328-cd501d44-1461-4d60-8cdb-428e8c3a529d"
                      }
                    ],
                    "id": "8996c5ae-254f-4893-ad12-d3839ea1b223",
                    "uid": "10462328-8996c5ae-254f-4893-ad12-d3839ea1b223"
                  },
                  {
                    "name": "Mandiri VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create MANDIRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "472c5fe1-c6bb-4b63-8943-3f6f6c3c9526"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e5fbaf6b-20ab-4476-b9ed-4598c48906b9"
                                }
                              }
                            ],
                            "id": "046e2d4c-a16d-4055-8daa-4f7d7e8040e9",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MANDIRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-046e2d4c-a16d-4055-8daa-4f7d7e8040e9"
                          }
                        ],
                        "id": "13fda15f-90f6-49cb-aeba-5043c1debfb4",
                        "uid": "10462328-13fda15f-90f6-49cb-aeba-5043c1debfb4"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create MANDIRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "493a3ded-123e-425f-994d-7fdb206076d6"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "52a8bbca-e2dc-4e7b-9255-42f9aa681aae"
                                }
                              }
                            ],
                            "id": "e8e94578-0cb2-4686-a5ba-cd4e9366e725",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MANDIRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-e8e94578-0cb2-4686-a5ba-cd4e9366e725"
                          }
                        ],
                        "id": "15008481-12da-47be-aeae-a9c782d3e0fa",
                        "uid": "10462328-15008481-12da-47be-aeae-a9c782d3e0fa"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create MANDIRIVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "6b0cf374-410e-489c-8053-bccb5f975863",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "956ca115-e052-4777-9c6d-b436fa5aaa30",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "629626f9-59cf-4680-ba63-31537e2bf646",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MANDIRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-629626f9-59cf-4680-ba63-31537e2bf646"
                          }
                        ],
                        "id": "e16d4214-3bb9-4633-97b7-a3b7b7873d59",
                        "uid": "10462328-e16d4214-3bb9-4633-97b7-a3b7b7873d59"
                      }
                    ],
                    "id": "5ec580a4-3cdc-43a4-bdcf-f811a06f83c7",
                    "uid": "10462328-5ec580a4-3cdc-43a4-bdcf-f811a06f83c7"
                  },
                  {
                    "name": "Permata Internet Banking",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "f8698247-dcd0-4e65-b6ea-1554fbc87d80",
                        "uid": "10462328-f8698247-dcd0-4e65-b6ea-1554fbc87d80"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "235fcf44-047a-4ef3-aef1-f622097d8e91",
                        "uid": "10462328-235fcf44-047a-4ef3-aef1-f622097d8e91"
                      }
                    ],
                    "id": "dba9ff4f-cd9e-41cf-b24d-b3caa1f1bc92",
                    "uid": "10462328-dba9ff4f-cd9e-41cf-b24d-b3caa1f1bc92"
                  },
                  {
                    "name": "DOKU Wallet",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DOKUWALLET payment(gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6e1dfc1b-6fbf-4933-b9ad-5e6bd564bef0"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "90845245-d05a-4b65-abb1-655f0ba0dfe7"
                                }
                              }
                            ],
                            "id": "f32f9389-f8df-407b-b0cd-ed58c0f94ced",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"DOKUWALLET\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-f32f9389-f8df-407b-b0cd-ed58c0f94ced"
                          }
                        ],
                        "id": "3c6fed2c-4876-41b0-bcb2-96c63d86b2c0",
                        "uid": "10462328-3c6fed2c-4876-41b0-bcb2-96c63d86b2c0"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create DOKUWALLET payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "bf493e8a-5f9d-491e-b536-7bef963a7d97"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f4d9cd91-01af-4f2c-b7b9-cba4bd0ce62c"
                                }
                              }
                            ],
                            "id": "95f51ead-c0bc-4b7b-b6f4-c1da4683ebb7",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"DOKUWALLET\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-95f51ead-c0bc-4b7b-b6f4-c1da4683ebb7"
                          }
                        ],
                        "id": "9a83909f-76f9-40c9-b2fe-7be8a36e723e",
                        "uid": "10462328-9a83909f-76f9-40c9-b2fe-7be8a36e723e"
                      }
                    ],
                    "id": "5171f4c5-b6db-4573-b5f2-5917aa10d009",
                    "uid": "10462328-5171f4c5-b6db-4573-b5f2-5917aa10d009"
                  },
                  {
                    "name": "BNI VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BNIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "540be55b-2aad-4403-8a3c-fa95445c1056"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "42a0837c-5ce8-4d63-8759-a7befc0a7ee7"
                                }
                              }
                            ],
                            "id": "3b9392ea-95a3-4c07-966b-5b286533331a",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BNIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-3b9392ea-95a3-4c07-966b-5b286533331a"
                          }
                        ],
                        "id": "1a6cdf45-a2f5-436b-97f0-8268a3941d07",
                        "uid": "10462328-1a6cdf45-a2f5-436b-97f0-8268a3941d07"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BNIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ffc16e06-52e7-4853-baaa-8fdf006ca0df"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c2b3d48d-c11c-43ef-a55b-820ad7684e3c"
                                }
                              }
                            ],
                            "id": "2a093a91-d8e6-4813-8a9b-ff3a3fc3171d",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BNIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-2a093a91-d8e6-4813-8a9b-ff3a3fc3171d"
                          }
                        ],
                        "id": "b738ec9f-0ec1-41a3-958d-216761c3df6d",
                        "uid": "10462328-b738ec9f-0ec1-41a3-958d-216761c3df6d"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BNIVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "c3a9ac4c-d6da-4515-b5f1-92cecd82e2e8",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "24cd0025-1f71-4310-8fce-e50fc2e93e24",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "ea823306-4486-4c3c-8834-1fbc54667020",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BNIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ea823306-4486-4c3c-8834-1fbc54667020"
                          }
                        ],
                        "id": "8fab8f9b-9482-4c0b-8d15-2f194a463f1e",
                        "uid": "10462328-8fab8f9b-9482-4c0b-8d15-2f194a463f1e"
                      }
                    ],
                    "id": "fb41678b-8c9c-4079-9c53-bb54bb7ea9a3",
                    "uid": "10462328-fb41678b-8c9c-4079-9c53-bb54bb7ea9a3"
                  },
                  {
                    "name": "BRI VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b9346738-68df-472b-a03f-e2fea00f5520"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4e6f519f-a509-4882-be17-19ad041418e7"
                                }
                              }
                            ],
                            "id": "94a12f35-33b9-41ef-a59c-6a177d761301",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-94a12f35-33b9-41ef-a59c-6a177d761301"
                          }
                        ],
                        "id": "253ae80a-3ee7-4f0f-a056-474f7f9d78bb",
                        "uid": "10462328-253ae80a-3ee7-4f0f-a056-474f7f9d78bb"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0a9283f5-eedc-4e4c-9d2e-38084eb33c44"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a9d23761-4212-4fb8-9e40-d06804f47ce3"
                                }
                              }
                            ],
                            "id": "415e5cba-9689-4a45-b44d-0b62a0b36043",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-415e5cba-9689-4a45-b44d-0b62a0b36043"
                          }
                        ],
                        "id": "94817c46-25d6-4bc0-848e-5336138f6554",
                        "uid": "10462328-94817c46-25d6-4bc0-848e-5336138f6554"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BRIVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "157681c4-01ec-4be2-b7f6-60701ff13f6f",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "618bde32-2872-4a54-984f-d1488cb2de6f",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "f9b22310-66e6-48f0-9a3b-a50fff5f0aa7",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-f9b22310-66e6-48f0-9a3b-a50fff5f0aa7"
                          }
                        ],
                        "id": "9c25d12e-2f2c-4cab-a6c6-192b46f3818c",
                        "uid": "10462328-9c25d12e-2f2c-4cab-a6c6-192b46f3818c"
                      }
                    ],
                    "id": "8d40f930-bfe0-4d75-9f86-e824771715b6",
                    "uid": "10462328-8d40f930-bfe0-4d75-9f86-e824771715b6"
                  },
                  {
                    "name": "DANA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DANA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "de9d6260-6e31-4f41-8c66-7bd3e3644655"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6d1ce753-a976-4335-a4ba-17087ba2a680"
                                }
                              }
                            ],
                            "id": "492fd837-2240-4791-916f-1105ffb19a32",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DANA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-492fd837-2240-4791-916f-1105ffb19a32"
                          }
                        ],
                        "id": "1ec61337-a0a8-493d-910f-8dd300e8c116",
                        "uid": "10462328-1ec61337-a0a8-493d-910f-8dd300e8c116"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create DANA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "607a6234-ee5c-4ac4-803e-08e4e4a8bc7f"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2a9af074-77ca-4a52-ac5c-72e62c14da10"
                                }
                              }
                            ],
                            "id": "2d79754f-7f18-4484-b53d-6cf97539c666",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DANA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-2d79754f-7f18-4484-b53d-6cf97539c666"
                          }
                        ],
                        "id": "19dbd48f-0af4-41dd-8838-2bacd8cb4ac0",
                        "uid": "10462328-19dbd48f-0af4-41dd-8838-2bacd8cb4ac0"
                      }
                    ],
                    "id": "39d05e69-25a3-4f96-bb4b-221f43a9a318",
                    "uid": "10462328-39d05e69-25a3-4f96-bb4b-221f43a9a318"
                  },
                  {
                    "name": "OVO",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVO payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "c0049911-6443-4c61-acd2-7c69c9f3df25",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "2f341dfa-6785-49f2-a7d6-73cdf64d1979",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "52527e36-b348-45c7-8157-4218e003fc0c",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVO\",\n    \"payment_data\": {\n        \"amount\": \"101\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-52527e36-b348-45c7-8157-4218e003fc0c"
                          }
                        ],
                        "id": "e6616b60-e763-4fe9-b22b-fccedf3001fd",
                        "uid": "10462328-e6616b60-e763-4fe9-b22b-fccedf3001fd"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create OVO payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "09ffac26-b358-49cb-aafe-978156a3b861",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "a5beab6a-45e0-4401-8b13-fa63b0394703",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "3f3fb07f-43ec-4317-b172-9cc239f9cc7d",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVO\",\n    \"payment_data\": {\n        \"amount\": \"101\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-3f3fb07f-43ec-4317-b172-9cc239f9cc7d"
                          }
                        ],
                        "id": "b06f923f-4a77-4cf6-b192-f6da2223f95a",
                        "uid": "10462328-b06f923f-4a77-4cf6-b192-f6da2223f95a"
                      }
                    ],
                    "id": "f548dbd4-8688-4fc8-aa4b-74d9510756ae",
                    "uid": "10462328-f548dbd4-8688-4fc8-aa4b-74d9510756ae"
                  },
                  {
                    "name": "LINKAJA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create LINKAJA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2ba8cfa2-cf79-4288-8e77-a9562a4034c2"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6f91a6e2-2450-40ff-9f3b-c728524454a2"
                                }
                              }
                            ],
                            "id": "106f9c0d-4efd-47ee-84b7-ab23c3093b8d",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"LINKAJA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-106f9c0d-4efd-47ee-84b7-ab23c3093b8d"
                          }
                        ],
                        "id": "c77d2409-ae7b-46c3-97fa-9603ac4936f6",
                        "uid": "10462328-c77d2409-ae7b-46c3-97fa-9603ac4936f6"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create LINKAJA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6bc764ce-662b-4fba-b92f-e1cb0593ab97"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "cddae796-bf82-4dd6-af3a-9559e80629eb"
                                }
                              }
                            ],
                            "id": "3f4a6be8-39c5-400e-b048-6d5075a1bb9b",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"LINKAJA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-3f4a6be8-39c5-400e-b048-6d5075a1bb9b"
                          }
                        ],
                        "id": "3282d9d5-f6fa-413f-9694-62acde160691",
                        "uid": "10462328-3282d9d5-f6fa-413f-9694-62acde160691"
                      }
                    ],
                    "id": "2d9fef09-edb8-4933-80ed-564606f0934a",
                    "uid": "10462328-2d9fef09-edb8-4933-80ed-564606f0934a"
                  },
                  {
                    "name": "SHOPEEPAY",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create SHOPEEPAY payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "1165705c-0080-4d1b-b875-bc50727f388c"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0027c8dc-4f1e-4d98-b236-54fbd7924316"
                                }
                              }
                            ],
                            "id": "e43ef0b7-5500-4085-be38-5c9eecead1e0",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-e43ef0b7-5500-4085-be38-5c9eecead1e0"
                          }
                        ],
                        "id": "490a9115-29c9-420b-ab07-2a95052da6bc",
                        "uid": "10462328-490a9115-29c9-420b-ab07-2a95052da6bc"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create SHOPEEPAY payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "79919c46-21a8-4c26-837a-43acd7530498"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d1522317-40a8-45f5-91ff-5afe0f845559"
                                }
                              }
                            ],
                            "id": "b65821af-7d33-4aea-ae08-30ca130260e0",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-b65821af-7d33-4aea-ae08-30ca130260e0"
                          }
                        ],
                        "id": "f47c0bf1-bb4f-418d-b895-e72dbdb092ce",
                        "uid": "10462328-f47c0bf1-bb4f-418d-b895-e72dbdb092ce"
                      }
                    ],
                    "id": "d2f527da-73f8-4d7c-b061-5d96bca8c720",
                    "uid": "10462328-d2f527da-73f8-4d7c-b061-5d96bca8c720"
                  },
                  {
                    "name": "QRIS",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create QRIS payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d21d541f-71a5-46d3-8661-f133dd0804f9"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b4e7514b-0c0a-4b14-a579-92e78af8afda"
                                }
                              }
                            ],
                            "id": "5d6ba996-75f3-47c5-9fd2-c737691023b2",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"QRIS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-5d6ba996-75f3-47c5-9fd2-c737691023b2"
                          }
                        ],
                        "id": "9d033953-c07c-40b8-a1bb-2c7c08905e90",
                        "uid": "10462328-9d033953-c07c-40b8-a1bb-2c7c08905e90"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create QRIS payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "3ff3974d-bc5d-4f82-a0ae-43742fbd9fb9"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7ebe46f6-6847-4732-8f7a-d81bcf2a0cbd"
                                }
                              }
                            ],
                            "id": "585ce308-089c-4cca-8d4f-494d79afe378",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"QRIS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-585ce308-089c-4cca-8d4f-494d79afe378"
                          }
                        ],
                        "id": "d4197de2-63ad-49d8-b16e-6608d93684cf",
                        "uid": "10462328-d4197de2-63ad-49d8-b16e-6608d93684cf"
                      }
                    ],
                    "id": "24e2ba63-ed47-4858-befc-55c3329ca194",
                    "uid": "10462328-24e2ba63-ed47-4858-befc-55c3329ca194"
                  },
                  {
                    "name": "PANINVA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create PANINVA payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7b05c540-3744-482a-b235-f28291bdd3b8"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6272c5a1-694b-41d5-b59e-385fe5398288"
                                }
                              }
                            ],
                            "id": "4c8c18ad-eb40-4a05-971f-89be3121a1ec",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PANINVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-4c8c18ad-eb40-4a05-971f-89be3121a1ec"
                          }
                        ],
                        "id": "16d37121-6c8a-4750-8689-273733976b1f",
                        "uid": "10462328-16d37121-6c8a-4750-8689-273733976b1f"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create PANINVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "905dbffa-76b2-4ad2-b0e7-0e3df9b7a250"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e7f08838-ed9e-4f8f-8c25-c7658ed3b194"
                                }
                              }
                            ],
                            "id": "a438aa8e-2fb4-46e9-a403-001dbd93d327",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PANINVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-a438aa8e-2fb4-46e9-a403-001dbd93d327"
                          }
                        ],
                        "id": "f8f94a91-0d83-4408-9c90-edd5431a0676",
                        "uid": "10462328-f8f94a91-0d83-4408-9c90-edd5431a0676"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create PANINVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "627c9267-e2ef-4deb-8cb6-c9733799c64c",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "7a1437ba-f42e-4b3b-8148-70ab0a284dbc",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "ace1911d-4f36-4f33-a435-2d09956464f5",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PANINVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ace1911d-4f36-4f33-a435-2d09956464f5"
                          }
                        ],
                        "id": "02c18c14-b74e-4990-a049-4d31f560c755",
                        "uid": "10462328-02c18c14-b74e-4990-a049-4d31f560c755"
                      }
                    ],
                    "id": "bcb48970-0f51-4dff-86b0-982165d8a260",
                    "uid": "10462328-bcb48970-0f51-4dff-86b0-982165d8a260"
                  },
                  {
                    "name": "DANAWALLET",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create danawallet payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "3c1e78c6-8d5f-4b29-9f93-88db8b90254f"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c73721df-fcf1-4df6-9ebd-71892ed2574f"
                                }
                              }
                            ],
                            "id": "8a1b1d4e-915f-40aa-8427-9ce7cd83bbbe",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"danawallet\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-8a1b1d4e-915f-40aa-8427-9ce7cd83bbbe"
                          }
                        ],
                        "id": "3a8f9594-bc1c-453d-b1f5-428c42f1db0d",
                        "uid": "10462328-3a8f9594-bc1c-453d-b1f5-428c42f1db0d"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create danawallet payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4e7f3fd7-ee7a-45ba-bd03-765bc0a6f4fe"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "efdefe56-d38c-4b7c-8000-0b7961bf99c9"
                                }
                              }
                            ],
                            "id": "5de121c0-7316-4bc4-a293-cbde80e33310",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"danawallet\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-5de121c0-7316-4bc4-a293-cbde80e33310"
                          }
                        ],
                        "id": "5cca7747-c44e-42b2-9b46-60e4f6895bfd",
                        "uid": "10462328-5cca7747-c44e-42b2-9b46-60e4f6895bfd"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create danawallet payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "bd3914ea-50d5-4282-8351-79845469f728",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "b4e2a0b9-64a2-4d1c-9e4d-248e0228d337",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "fca67f99-f91b-4120-9451-700830169f1d",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"danawallet\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-fca67f99-f91b-4120-9451-700830169f1d"
                          }
                        ],
                        "id": "2f88509b-517f-41de-9611-bd135af6e2d5",
                        "uid": "10462328-2f88509b-517f-41de-9611-bd135af6e2d5"
                      }
                    ],
                    "id": "2a1f1d17-5dcb-4286-b96f-d9c0aa620f68",
                    "uid": "10462328-2a1f1d17-5dcb-4286-b96f-d9c0aa620f68"
                  },
                  {
                    "name": "BTPN",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BTPNVA payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0dae1197-78fd-47d6-ad22-2c4318bb1fb4"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f113a26a-36b3-4f5b-a0db-58dc130682ef"
                                }
                              }
                            ],
                            "id": "700715f5-6f28-4f39-b9f0-c19c26697e99",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BTPNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-700715f5-6f28-4f39-b9f0-c19c26697e99"
                          }
                        ],
                        "id": "292b4c63-69d0-44bc-89a7-a09db1ee7e3f",
                        "uid": "10462328-292b4c63-69d0-44bc-89a7-a09db1ee7e3f"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BTPNVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "65887aaa-5179-4849-a1d0-907b12eac2d9"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "dd468957-9176-4a62-8a81-dbcb43e12dc1"
                                }
                              }
                            ],
                            "id": "b57151f5-991d-41c4-a981-9f3b6627d3e0",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BTPNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-b57151f5-991d-41c4-a981-9f3b6627d3e0"
                          }
                        ],
                        "id": "1b15f677-9a8a-4550-ba44-368756adf2a8",
                        "uid": "10462328-1b15f677-9a8a-4550-ba44-368756adf2a8"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BTPNVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "9005c13b-57bf-45bf-891b-51eb62534a50",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "05526854-cdb9-46a8-b3cc-7712ff56b2b9",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "b2314d81-1227-4866-b4c5-6911d31e2f02",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BTPNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-b2314d81-1227-4866-b4c5-6911d31e2f02"
                          }
                        ],
                        "id": "9afc9cc7-39db-4c40-892a-d54d61c31f2c",
                        "uid": "10462328-9afc9cc7-39db-4c40-892a-d54d61c31f2c"
                      }
                    ],
                    "id": "21303171-9d7e-496b-9efb-a7680ed6ce6d",
                    "uid": "10462328-21303171-9d7e-496b-9efb-a7680ed6ce6d"
                  },
                  {
                    "name": "BCA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BCAVA payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b77ca207-3fa9-4611-acbb-92447645d157"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b2b20341-cfde-45c5-9f17-a0c978919e70"
                                }
                              }
                            ],
                            "id": "1b1526e8-a5f4-426f-b4e1-0b53f8c58b21",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BCAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-1b1526e8-a5f4-426f-b4e1-0b53f8c58b21"
                          }
                        ],
                        "id": "85ad9ddd-6cfc-43fd-bb94-5d0219c117b5",
                        "uid": "10462328-85ad9ddd-6cfc-43fd-bb94-5d0219c117b5"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BCAVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f12d025c-c522-4eee-81be-2cf87dae83ba"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "15e2c4e9-040f-48ab-bc4a-0c9b133b7b07"
                                }
                              }
                            ],
                            "id": "f3fb5dc5-83ee-4cdc-9551-e2164b5db1b7",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BCAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-f3fb5dc5-83ee-4cdc-9551-e2164b5db1b7"
                          }
                        ],
                        "id": "ba8d7159-85ca-4579-af13-6a5dd6cdcf2d",
                        "uid": "10462328-ba8d7159-85ca-4579-af13-6a5dd6cdcf2d"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BCAVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "876e9014-5faf-4560-bd91-8f626035d4f4",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "c06342c1-6c2a-4c71-8ddb-65e86a0eda15",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "801bb8f6-838b-476d-8f6a-9736970ab156",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BCAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-801bb8f6-838b-476d-8f6a-9736970ab156"
                          }
                        ],
                        "id": "103382e8-75e0-44a1-b509-30ff18f660f2",
                        "uid": "10462328-103382e8-75e0-44a1-b509-30ff18f660f2"
                      }
                    ],
                    "id": "9960fac0-608e-4578-8d81-887c576f4dd1",
                    "uid": "10462328-9960fac0-608e-4578-8d81-887c576f4dd1"
                  }
                ],
                "id": "d3d116fc-3960-4fee-b934-780e777c3677",
                "uid": "10462328-d3d116fc-3960-4fee-b934-780e777c3677"
              },
              {
                "name": "Vietnam",
                "item": [
                  {
                    "name": "Direct Banking Vietnam",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "35e96992-7e8b-421c-9c54-269d7a8025d4",
                        "uid": "10462328-35e96992-7e8b-421c-9c54-269d7a8025d4"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "019f0298-0414-43c9-8ce6-73306e7a93e3",
                        "uid": "10462328-019f0298-0414-43c9-8ce6-73306e7a93e3"
                      }
                    ],
                    "id": "31b467ce-af37-4db0-8781-1002059c3461",
                    "uid": "10462328-31b467ce-af37-4db0-8781-1002059c3461"
                  },
                  {
                    "name": "PayME Wallet",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "c586eef3-58f2-4282-a285-4b2c2c1f440e",
                        "uid": "10462328-c586eef3-58f2-4282-a285-4b2c2c1f440e"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "4792ad11-7e89-49a3-8fbd-8261e759c9eb",
                        "uid": "10462328-4792ad11-7e89-49a3-8fbd-8261e759c9eb"
                      }
                    ],
                    "id": "f1a35ada-08fd-43d9-a5ba-98b3732d595f",
                    "uid": "10462328-f1a35ada-08fd-43d9-a5ba-98b3732d595f"
                  },
                  {
                    "name": "Payment by wire transfer by QR code",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "d99c7a56-828f-4ec6-b53d-f6e12290a55b",
                        "uid": "10462328-d99c7a56-828f-4ec6-b53d-f6e12290a55b"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "97160a43-ccd8-40cc-91d4-e4ff3591fe94",
                        "uid": "10462328-97160a43-ccd8-40cc-91d4-e4ff3591fe94"
                      }
                    ],
                    "id": "b5a2e614-68d2-47cd-9782-2a9b324a0d61",
                    "uid": "10462328-b5a2e614-68d2-47cd-9782-2a9b324a0d61"
                  },
                  {
                    "name": "Bank QRCode",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "a0dd9a85-123f-4bc6-9342-192e88edeb4d",
                        "uid": "10462328-a0dd9a85-123f-4bc6-9342-192e88edeb4d"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "9dd3e332-aa29-46d8-b870-9e2bad967f7d",
                        "uid": "10462328-9dd3e332-aa29-46d8-b870-9e2bad967f7d"
                      }
                    ],
                    "id": "573cdec6-4c25-4ddc-ae6f-215386216517",
                    "uid": "10462328-573cdec6-4c25-4ddc-ae6f-215386216517"
                  }
                ],
                "id": "1d9191f2-5cc5-48e5-b54b-3973e9c71212",
                "uid": "10462328-1d9191f2-5cc5-48e5-b54b-3973e9c71212"
              },
              {
                "name": "Malaysia",
                "item": [
                  {
                    "name": "Boost",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "4bb34c50-55ad-424d-a4ce-abd9c2734b87",
                        "uid": "10462328-4bb34c50-55ad-424d-a4ce-abd9c2734b87"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "43dd6b8e-2d44-4adc-93b0-bbd296217d75",
                        "uid": "10462328-43dd6b8e-2d44-4adc-93b0-bbd296217d75"
                      }
                    ],
                    "id": "61c4ccb0-8f35-4245-b2f8-183a36597112",
                    "uid": "10462328-61c4ccb0-8f35-4245-b2f8-183a36597112"
                  },
                  {
                    "name": "GrabPay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "60767999-df5c-4a7f-8ed4-bd465958ec25",
                        "uid": "10462328-60767999-df5c-4a7f-8ed4-bd465958ec25"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "e3a846de-8a77-4a27-a7f2-e749865a69f9",
                        "uid": "10462328-e3a846de-8a77-4a27-a7f2-e749865a69f9"
                      }
                    ],
                    "id": "72cb0af6-d4b6-4957-ac02-0d6f81db843b",
                    "uid": "10462328-72cb0af6-d4b6-4957-ac02-0d6f81db843b"
                  }
                ],
                "id": "eb53d996-f1f8-458b-9cba-47a2e47bef4f",
                "uid": "10462328-eb53d996-f1f8-458b-9cba-47a2e47bef4f"
              },
              {
                "name": "Republic of the Philippines",
                "item": [
                  {
                    "name": "Over The Counter Banking",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERBANKING payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e912776b-fda7-48dc-a5ec-03b5f4083552"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ae324dee-b93e-4749-858e-4269e0e65c34"
                                }
                              }
                            ],
                            "id": "81c6a448-0a92-4cc5-a4cb-edc0a732a5a2",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BNRX\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-81c6a448-0a92-4cc5-a4cb-edc0a732a5a2"
                          }
                        ],
                        "id": "eb2f18ba-5ed1-430b-8cd6-9c1b92792ca2",
                        "uid": "10462328-eb2f18ba-5ed1-430b-8cd6-9c1b92792ca2"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERBANKING payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "bf78ea34-d222-4329-9288-b46e50c9cbda"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b53aa292-bc0c-42dc-a8d5-cdfd94f07a70"
                                }
                              }
                            ],
                            "id": "8d01b0e5-2ea1-4c65-9fe9-68c1bebf2f8f",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BNRX\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-8d01b0e5-2ea1-4c65-9fe9-68c1bebf2f8f"
                          }
                        ],
                        "id": "da5a688b-ce59-4a13-b172-6d8f63853f80",
                        "uid": "10462328-da5a688b-ce59-4a13-b172-6d8f63853f80"
                      }
                    ],
                    "id": "69bf7a4e-9651-494b-b773-e07aeaf28487",
                    "uid": "10462328-69bf7a4e-9651-494b-b773-e07aeaf28487"
                  },
                  {
                    "name": "Over The Counter Non Banking",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERNONBANKING payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "de7de9b0-58c6-4647-b4e4-c52c53a10f7d"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "20a07103-d50e-401b-9101-87ff5bd3af9a"
                                }
                              }
                            ],
                            "id": "1f44d2f8-989c-4691-9a14-6e386fd84202",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERNONBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"CEBL\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-1f44d2f8-989c-4691-9a14-6e386fd84202"
                          }
                        ],
                        "id": "17403980-bb0d-4f94-840b-1b21c3af5525",
                        "uid": "10462328-17403980-bb0d-4f94-840b-1b21c3af5525"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERNONBANKING payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a372599e-d32e-4f39-a9a6-46795d822f9d"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d49adcbf-b5df-4478-8c3b-2cf857dfd797"
                                }
                              }
                            ],
                            "id": "4779290f-0534-4255-9357-9f7d23e8bd03",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERNONBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"CEBL\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-4779290f-0534-4255-9357-9f7d23e8bd03"
                          }
                        ],
                        "id": "3724798b-7c98-43cf-99ab-6e3dfe13bcef",
                        "uid": "10462328-3724798b-7c98-43cf-99ab-6e3dfe13bcef"
                      }
                    ],
                    "id": "e7eb3aed-f540-45f8-bf78-d52605f5a189",
                    "uid": "10462328-e7eb3aed-f540-45f8-bf78-d52605f5a189"
                  },
                  {
                    "name": "Direct Banking Philippines",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create DIRECTBANKINGPH payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c369ff6d-30fe-41c2-b100-1034d5beab4f"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "68116d6c-9f65-424a-8890-628be62ee2ea"
                                }
                              }
                            ],
                            "id": "496465f6-3cfe-4cfc-8b69-4219f80346ef",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGPH\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BOC\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-496465f6-3cfe-4cfc-8b69-4219f80346ef"
                          }
                        ],
                        "id": "49056848-2606-4c29-9881-b70275bd192c",
                        "uid": "10462328-49056848-2606-4c29-9881-b70275bd192c"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DIRECTBANKINGPH payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8b623581-03c3-4117-8600-f849e7973956"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ff105ea7-4809-427a-b9f8-7129415c24f8"
                                }
                              }
                            ],
                            "id": "113514be-7e32-42af-b159-19f6e955b0df",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGPH\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BOC\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-113514be-7e32-42af-b159-19f6e955b0df"
                          }
                        ],
                        "id": "10692bcf-99e7-420f-9845-92405e50bab5",
                        "uid": "10462328-10692bcf-99e7-420f-9845-92405e50bab5"
                      }
                    ],
                    "id": "202f7276-62d6-4735-8185-3802fdc68d15",
                    "uid": "10462328-202f7276-62d6-4735-8185-3802fdc68d15"
                  }
                ],
                "id": "9ba2e222-5d1f-4d52-a61f-d34d9dbcdc4b",
                "uid": "10462328-9ba2e222-5d1f-4d52-a61f-d34d9dbcdc4b"
              },
              {
                "name": "Thailand",
                "item": [
                  {
                    "name": "Direct Banking Thailand",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create directbankingthb payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f1e8143c-9b47-41bf-a46f-9b3957a63037"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e775dc98-39bb-4bcf-8161-0c7de6e0a58a"
                                }
                              }
                            ],
                            "id": "9c04d148-b32f-4359-ae8c-5f5c84f4bb06",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"directbankingthb\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    },\n    \"ewallet_account\":{\n        \"bank_code\":\"BBL\"\n    },\n    \"return_urls\":{\n        \"inprocess_url\": \"http://www.example.com/in-process-url\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-9c04d148-b32f-4359-ae8c-5f5c84f4bb06"
                          }
                        ],
                        "id": "bfb1cfff-c34f-4cac-aeb6-2d69492c200e",
                        "uid": "10462328-bfb1cfff-c34f-4cac-aeb6-2d69492c200e"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create directbankingthb payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "210a05a5-51be-476b-b175-807273593062"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "fedd96d5-154c-4ce3-87fd-e5d1d583ff2e"
                                }
                              }
                            ],
                            "id": "502874d5-6d37-4e59-9111-06480f223390",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"directbankingthb\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    },\n    \"ewallet_account\":{\n        \"bank_code\":\"BBL\"\n    }\n\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-502874d5-6d37-4e59-9111-06480f223390"
                          }
                        ],
                        "id": "4bb9c545-d12d-4e7d-ae78-1c2c2f3ba35d",
                        "uid": "10462328-4bb9c545-d12d-4e7d-ae78-1c2c2f3ba35d"
                      }
                    ],
                    "id": "0be3d2a4-7719-4eb6-88b3-54d3f2eb77c0",
                    "uid": "10462328-0be3d2a4-7719-4eb6-88b3-54d3f2eb77c0"
                  },
                  {
                    "name": "PromptPay QR",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create PROMPTPAYQR payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "3fba7f12-3106-4cf4-ba56-d7ba6c0af78e",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "ec2786a0-db60-4b62-905e-8520e1d50563",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "667a3051-8e09-477a-bd4c-28b55f0a6c75",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"promptpayqr\",\n    \"payment_data\": {\n        \"amount\": \"2001\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-667a3051-8e09-477a-bd4c-28b55f0a6c75"
                          }
                        ],
                        "id": "feffb151-adcd-4450-a0f3-e3866bf28a07",
                        "uid": "10462328-feffb151-adcd-4450-a0f3-e3866bf28a07"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create promptpayqr payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "2cd0b497-dcea-4fcb-b32d-335b8eaf67b5",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "c3ea9efb-11ef-4399-85d7-8cc9e5555e4d",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "9ac9c342-bf8d-4f08-946f-3dce52307d3d",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"promptpayqr\",\n    \"payment_data\": {\n        \"amount\": \"2001\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-9ac9c342-bf8d-4f08-946f-3dce52307d3d"
                          }
                        ],
                        "id": "5ef7f7aa-1c98-4fbb-b2eb-7c9be4ba5ba4",
                        "uid": "10462328-5ef7f7aa-1c98-4fbb-b2eb-7c9be4ba5ba4"
                      }
                    ],
                    "id": "e8083336-b490-493d-ade9-de1b47304775",
                    "uid": "10462328-e8083336-b490-493d-ade9-de1b47304775"
                  },
                  {
                    "name": "TrueMoney Wallet",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create TRUEMONEY payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "eb49363c-238c-4111-a16e-a36629bc5d37",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "ab31eb15-3527-4412-828e-975105875a80",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "b9b6546e-fd6f-4462-bf05-4ba668d6b03a",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"truemoney\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\":\"0123456789\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-b9b6546e-fd6f-4462-bf05-4ba668d6b03a"
                          }
                        ],
                        "id": "23b58b95-7245-42f0-aa71-7bfd95e86499",
                        "uid": "10462328-23b58b95-7245-42f0-aa71-7bfd95e86499"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create truemoney payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "3d6d1ec6-d9c0-4cca-b30c-d1fb05eadfae",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "24a941f1-456b-423c-b47a-ba1575bb195d",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "93b18362-64fe-4c9e-8b43-ab823037b6b4",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"truemoney\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\":\"0123456789\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-93b18362-64fe-4c9e-8b43-ab823037b6b4"
                          }
                        ],
                        "id": "fa76af84-7763-4bf0-89d4-0992d2ef1dad",
                        "uid": "10462328-fa76af84-7763-4bf0-89d4-0992d2ef1dad"
                      }
                    ],
                    "id": "030dbd50-3dbd-4211-b5bd-a340cf8c1325",
                    "uid": "10462328-030dbd50-3dbd-4211-b5bd-a340cf8c1325"
                  },
                  {
                    "name": "Tesco Bill Payment",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create tescobill payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a763fa10-8995-43ee-9fb7-6e70e88574cb"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "3456a1f1-f6cf-48c9-ad30-32898ce4f5cf"
                                }
                              }
                            ],
                            "id": "50ba8c01-5335-4df7-817e-88511cc4d561",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"tescobill\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-50ba8c01-5335-4df7-817e-88511cc4d561"
                          }
                        ],
                        "id": "343f7d01-bb6f-4843-a6fc-587c3a83c4f8",
                        "uid": "10462328-343f7d01-bb6f-4843-a6fc-587c3a83c4f8"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create tescobill payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8b35006a-b177-43fb-be2b-e695631cb19b"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5f39d1f9-3e43-4bef-b30c-178e0a6a22f8"
                                }
                              }
                            ],
                            "id": "a2815a5a-0801-47f7-a362-bf943e0a4f7f",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"tescobill\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-a2815a5a-0801-47f7-a362-bf943e0a4f7f"
                          }
                        ],
                        "id": "07925a1d-828a-4300-a3d3-9fc1d5dd80af",
                        "uid": "10462328-07925a1d-828a-4300-a3d3-9fc1d5dd80af"
                      }
                    ],
                    "id": "2b476dca-d645-4107-925e-f0dd95d6650c",
                    "uid": "10462328-2b476dca-d645-4107-925e-f0dd95d6650c"
                  }
                ],
                "id": "dba07185-264b-41a1-8368-b4b067c79c6e",
                "uid": "10462328-dba07185-264b-41a1-8368-b4b067c79c6e"
              },
              {
                "name": "South Korea",
                "item": [
                  {
                    "name": "Bank transfer South Korea",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "5a187539-38fa-4ef0-ae9e-8cde7dc5a523",
                        "uid": "10462328-5a187539-38fa-4ef0-ae9e-8cde7dc5a523"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "db3e363f-3fd0-468c-80c0-09a086ea8e1a",
                        "uid": "10462328-db3e363f-3fd0-468c-80c0-09a086ea8e1a"
                      }
                    ],
                    "id": "cb90b5d6-ca1d-4de0-96fa-66d928621c9d",
                    "uid": "10462328-cb90b5d6-ca1d-4de0-96fa-66d928621c9d"
                  },
                  {
                    "name": "NaverPay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create naverpay payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "110ec2bb-d431-4125-929b-29950e1bec53"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ea5481fc-d86f-493d-bb20-82f068038e6a"
                                }
                              }
                            ],
                            "id": "2d55e980-8ba4-4914-bb1d-f16b9762fef2",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n             \"items\": [\n            {\n                \"count\": 2,\n                \"name\": \"bread\",\n                \"price\": 100\n            }\n        ]\n    },\n    \"payment_method\": \"naverpay\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"KRW\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-2d55e980-8ba4-4914-bb1d-f16b9762fef2"
                          }
                        ],
                        "id": "32fb52ea-cb57-4067-8ce4-43f21ab6460a",
                        "uid": "10462328-32fb52ea-cb57-4067-8ce4-43f21ab6460a"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create naverpay payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5dc63f50-4063-4b67-95b7-f78f2ede616a"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "297364bd-e751-4e32-82e0-2b0e37a4e748"
                                }
                              }
                            ],
                            "id": "139f17b3-7484-408c-93b5-c068299653b8",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n             \"items\": [\n            {\n                \"count\": 2,\n                \"name\": \"bread\",\n                \"price\": 100\n            }\n        ]\n    },\n    \"payment_method\": \"naverpay\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"KRW\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-139f17b3-7484-408c-93b5-c068299653b8"
                          }
                        ],
                        "id": "4a0516c2-95da-427c-8f45-deee18c8df28",
                        "uid": "10462328-4a0516c2-95da-427c-8f45-deee18c8df28"
                      }
                    ],
                    "id": "3f9c29ee-ccc6-44a9-89db-c5840e682e45",
                    "uid": "10462328-3f9c29ee-ccc6-44a9-89db-c5840e682e45"
                  }
                ],
                "id": "34882948-447c-4cb2-b904-4c8942e20609",
                "uid": "10462328-34882948-447c-4cb2-b904-4c8942e20609"
              }
            ],
            "id": "2a486003-eba2-432e-9527-b8be47030cd3",
            "uid": "10462328-2a486003-eba2-432e-9527-b8be47030cd3"
          },
          {
            "name": "India",
            "item": [
              {
                "name": "Netbanking  (Internet Banking India)",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create netbankinginr payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD_IND');\r",
                                "\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4b7ab152-d7fe-4c3a-968e-496d1dfb1919"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "eac24aa2-584d-4a6d-bc90-bcb551a938f0"
                            }
                          }
                        ],
                        "id": "3fc08a85-deb8-4f5a-8231-cdda4fe72ac6",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"netbankinginr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n \"ewallet_account\":\n    {\n        \"bank_code\": \"INB1111\"\n}\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-3fc08a85-deb8-4f5a-8231-cdda4fe72ac6"
                      }
                    ],
                    "id": "a9300cba-3ec2-4c27-a42e-9061290fc842",
                    "uid": "10462328-a9300cba-3ec2-4c27-a42e-9061290fc842"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create netbankinginr payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "70f7695f-6128-4157-8be1-d0357be9e72f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7a570a3c-35a0-4ebf-b5c3-9f01c6344e6e"
                            }
                          }
                        ],
                        "id": "593de0d2-72bd-4334-bfba-4cfbc8e6275f",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"netbankinginr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-593de0d2-72bd-4334-bfba-4cfbc8e6275f"
                      }
                    ],
                    "id": "942024f3-eae2-4f79-98b1-cc977e2a68db",
                    "uid": "10462328-942024f3-eae2-4f79-98b1-cc977e2a68db"
                  }
                ],
                "id": "292b6d99-f7be-41a9-a338-0a84fb0dc21d",
                "uid": "10462328-292b6d99-f7be-41a9-a338-0a84fb0dc21d"
              },
              {
                "name": "UPI (Unified Payments Interface)",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create upi payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "af00a9cc-e143-4208-b7f2-124504bb57d4"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ec5923ac-f6b8-4699-bdd5-d1e58e8a79f3"
                            }
                          }
                        ],
                        "id": "f98e122b-ccd5-41ce-98cc-c471856cc9f0",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"UPI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-f98e122b-ccd5-41ce-98cc-c471856cc9f0"
                      }
                    ],
                    "id": "83788c3b-bb2a-4712-9798-c660506946cd",
                    "uid": "10462328-83788c3b-bb2a-4712-9798-c660506946cd"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create upi payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "750e277e-21b0-401b-9742-5acf3685d384"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e6d8926b-7584-41c5-a9b4-d00b90296d52"
                            }
                          }
                        ],
                        "id": "a0c7cc83-53ac-4220-a31c-a54d7c3e6261",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"upi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a0c7cc83-53ac-4220-a31c-a54d7c3e6261"
                      }
                    ],
                    "id": "ee5b9ef1-7947-4590-bec1-aebe02e54c12",
                    "uid": "10462328-ee5b9ef1-7947-4590-bec1-aebe02e54c12"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create upi payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP_IND');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP_IND');\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2ead5a21-7cc4-4719-ba9b-69d52caa7fc8"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "61759a6d-94b0-4ee1-9158-44525d51a548"
                            }
                          }
                        ],
                        "id": "11df5fcd-9b60-4655-928f-d1168838d1cc",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"upi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-11df5fcd-9b60-4655-928f-d1168838d1cc"
                      }
                    ],
                    "id": "36a6e029-fbb8-4fee-b162-29993af2fb23",
                    "uid": "10462328-36a6e029-fbb8-4fee-b162-29993af2fb23"
                  }
                ],
                "id": "c4d2bbf7-c40e-49a4-8c3b-aa14202c550a",
                "uid": "10462328-c4d2bbf7-c40e-49a4-8c3b-aa14202c550a"
              },
              {
                "name": "VpaUPI",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create vpaupi payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "00974e69-2ddd-4223-b136-8c884742dbb8"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f1ea369f-bd60-40fc-891d-2f6ba255d5c1"
                            }
                          }
                        ],
                        "id": "00a83c21-00e6-460c-b444-5072d22f9937",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"vpaupi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"user123@bank\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-00a83c21-00e6-460c-b444-5072d22f9937"
                      }
                    ],
                    "id": "05de4391-bc91-41bf-b68b-ab6be8c7d4aa",
                    "uid": "10462328-05de4391-bc91-41bf-b68b-ab6be8c7d4aa"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create vpaupi payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "41b4de93-96d4-47e2-a2a9-a79a04484179"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "64fadd5e-89f0-4708-aacf-2b7e453d1abf"
                            }
                          }
                        ],
                        "id": "724c5c56-4ee2-44a9-93ef-a28e8906f385",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"vpaupi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    }\n\n\n    \n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-724c5c56-4ee2-44a9-93ef-a28e8906f385"
                      }
                    ],
                    "id": "b9dcb060-4a52-458c-b7b9-9b6b2fd14f45",
                    "uid": "10462328-b9dcb060-4a52-458c-b7b9-9b6b2fd14f45"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create vpaupi payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP_IND');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP_IND');\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "86944334-129b-4bab-aa31-874646a5007b"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "bbfc8b60-0f7e-4d16-8c07-9452d1d85ef2"
                            }
                          }
                        ],
                        "id": "e123a207-fc08-460d-9e35-7d361fc0d66e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"vpaupi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"user123@bank\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-e123a207-fc08-460d-9e35-7d361fc0d66e"
                      }
                    ],
                    "id": "8fe8f74d-c7e3-4a20-9b76-37689e4a1a0e",
                    "uid": "10462328-8fe8f74d-c7e3-4a20-9b76-37689e4a1a0e"
                  }
                ],
                "id": "82723a19-6d0a-4b72-b080-e9fcd5d3f75b",
                "uid": "10462328-82723a19-6d0a-4b72-b080-e9fcd5d3f75b"
              }
            ],
            "id": "f9107b90-316b-486d-9812-2e2d30e1f001",
            "uid": "10462328-f9107b90-316b-486d-9812-2e2d30e1f001"
          }
        ],
        "id": "c6143109-b538-4019-b678-ab6a893adda5",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c81974c-8e92-4d42-b1f0-c51ff06a3a79",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ae36bc0-c83e-45c2-b719-844e66ebc715",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ]
            }
          }
        ],
        "uid": "10462328-c6143109-b538-4019-b678-ab6a893adda5"
      },
      {
        "name": "Refunds",
        "item": [
          {
            "name": "Create refund",
            "item": [
              {
                "name": "Create payment for refund",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "439967a2-eb53-4a22-96d3-803ba1188414",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    pm.collectionVariables.set('payment_id_for_refund', response.payment_data.id);",
                        "    ",
                        "    postman.setNextRequest('Create refund');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "047d6fbf-5f79-418e-87cc-9f7add8223ad",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "efa231dd-b96e-4684-a81e-cd352814bef2",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-efa231dd-b96e-4684-a81e-cd352814bef2"
              },
              {
                "name": "Create refund",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "652b3dda-68c6-4e69-9f04-69720fdf7507",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "pm.expect(pm.collectionVariables.get('payment_id_for_refund')).to.not.be.undefined;",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22fa845c-7db7-4750-ac63-2779b355ef18",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('last_refund_id', response.refund_data.id);",
                        "    ",
                        "    postman.setNextRequest('Get refund by merchant order id');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "305d38e9-bb7f-45b7-8061-d5bf6f289f87",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-305d38e9-bb7f-45b7-8061-d5bf6f289f87"
              }
            ],
            "id": "89c6c15e-16e7-4962-83d5-a9cefd77462d",
            "description": "- Merchant makes POST request in JSON format to create new refund to endpoint **/api/refunds**, [see more](https://integration.unlimit.com/#createRefund)\n- Merchant can create new refund only after successfully creation of payment or recurring payment\n- Merchant must have payment id (or recurring id) and send it in refund request\n- Merchant receives response with created transaction result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "736d32a9-ae1d-4a9a-bb64-178c72c67657"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "1b06ecd6-4613-489d-918d-f64ed7d3848c"
                }
              }
            ],
            "uid": "10462328-89c6c15e-16e7-4962-83d5-a9cefd77462d"
          },
          {
            "name": "Get refunds list",
            "item": [
              {
                "name": "Get refund by merchant order id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94036c54-21a9-43c1-9152-5b0b15c3946e",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3038d06-8b79-4299-8bbc-62b102a69088",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('data');",
                        "    ",
                        "    pm.collectionVariables.set('last_refund_id', response.data[0].refund_data.id);",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "b72b7820-d8de-497e-a112-0559105ee0a1",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "merchant_order_id",
                        "value": "{{last_merchant_order_id}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-b72b7820-d8de-497e-a112-0559105ee0a1"
              },
              {
                "name": "Get refunds information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e13d68ad-2fbb-4de8-be72-b8707ec8fcf3",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9751bd07-007e-47aa-960c-23c68340caca",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('data');",
                        "    pm.expect(response).to.have.property('has_more');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "81d19863-e77b-49ee-926d-e47c584db63e",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "max_count",
                        "value": "5"
                      },
                      {
                        "key": "currency",
                        "value": "{{TERMINAL_CURRENCY}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-81d19863-e77b-49ee-926d-e47c584db63e"
              }
            ],
            "id": "20572cd4-53c7-4ead-8291-d4bfd3ba00ff",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/refunds) to get information about refunds list, [see more](https://integration.unlimit.com/#getRefunds)\n- Merchant receives GET response about transactions (refunds list)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "f2b6c88b-ed63-4b2c-9347-1b345217a49c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "6ffa5fc5-ca83-4836-b353-d37a2303ec72"
                }
              }
            ],
            "uid": "10462328-20572cd4-53c7-4ead-8291-d4bfd3ba00ff"
          },
          {
            "name": "Get refund by refund id",
            "item": [
              {
                "name": "Get refund by refund id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fc155dc-6c6e-4c9e-a2d0-b722030e2faa",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_refund_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f6ac27b-2b6b-43a7-b674-f17eebae63c2",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('refund_data');",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    pm.expect(response.refund_data.id).to.equal(pm.collectionVariables.get('last_refund_id'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "340b526a-29c9-4514-9e07-3f01acd04188",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/{{last_refund_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      "{{last_refund_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-340b526a-29c9-4514-9e07-3f01acd04188"
              }
            ],
            "id": "dbb5f766-4f23-42c0-8481-37e968a3330f",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/refunds/{refund_id}) to get information about refund by refund id, [see more](https://integration.unlimit.com/#getRefund)\n- Merchant receives GET response about transaction result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "904fa291-9995-4633-8d24-95ba3385328d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "a26ce88e-5b00-4a2f-a1da-a6d4e1e07e15"
                }
              }
            ],
            "uid": "10462328-dbb5f766-4f23-42c0-8481-37e968a3330f"
          },
          {
            "name": "Reverse refund (void)",
            "item": [
              {
                "name": "Create payment for reversed refund",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37d86847-67be-485e-bc1f-dc12888fecb6",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "595e0f50-890e-4a8a-b470-c68b8961c2ff",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    pm.collectionVariables.set('payment_id_for_reversed_refund', response.payment_data.id);",
                        "    ",
                        "    postman.setNextRequest('Create refund to reverse');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "822046ba-e15a-4fc1-a9b9-4016b3dc54e2",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-822046ba-e15a-4fc1-a9b9-4016b3dc54e2"
              },
              {
                "name": "Create refund to reverse",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f670d238-7d95-4898-89bf-35185dfbddfe",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_for_reversed_refund')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ca25b2a-a671-4c9f-8edf-7d1281be2f7e",
                      "exec": [
                        "pm.test(\"Request success\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('refund_id_to_reverse', response.refund_data.id);",
                        "    ",
                        "    postman.setNextRequest('Reverse refund');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "dfa62066-f3c3-410d-8003-f7cd2fd2ce54",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_reversed_refund}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-dfa62066-f3c3-410d-8003-f7cd2fd2ce54"
              },
              {
                "name": "Reverse refund",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd1e9e20-fb01-4105-80e0-af68670cd473",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('refund_id_to_reverse')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "afed9bdc-0205-4563-8291-a88cd2c35017",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    pm.expect(response.refund_data).to.have.property('status');",
                        "    pm.expect(response.refund_data.status).to.equal('VOIDED');",
                        "})",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "f4bdbcdf-f88d-4cb0-94c2-6704de1848f0",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"refund_data\": {\n        \"status_to\": \"REVERSE\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/{{refund_id_to_reverse}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      "{{refund_id_to_reverse}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-f4bdbcdf-f88d-4cb0-94c2-6704de1848f0"
              }
            ],
            "id": "ef56d748-1195-4ecc-97b9-9df899bce19c",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/refunds** to create new refund, [see more](https://integration.unlimit.com/#createRefund)\n- Merchant makes PATCH request in JSON format with refund id and refund_data.status_to='REVERSE' to **/api/refunds/{refund_id}** for reverse (void) refund - refund void possibility must be enabled by Unlimit manager, [see more](https://integration.unlimit.com/#updateRefund)\n- Merchant receives response with update result information (status='VOIDED')",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "id": "d29f0a45-3795-47e4-8077-c5bf44e8fd8c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "c96a911e-2d4e-4f28-926c-6ed0c7c425fc"
                }
              }
            ],
            "uid": "10462328-ef56d748-1195-4ecc-97b9-9df899bce19c"
          }
        ],
        "id": "91329739-a060-432e-9aff-0e4dc692bacf",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "d4fdecfe-8dfb-4211-8191-7edc00289a2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "4d1473a3-7182-4fc5-97c3-86461df087dd"
            }
          }
        ],
        "uid": "10462328-91329739-a060-432e-9aff-0e4dc692bacf"
      },
      {
        "name": "Payouts (cards)",
        "item": [
          {
            "name": "Create payout",
            "item": [
              {
                "name": "Create payout",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e121e80-1189-44b3-b403-a64500548ab7",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1565a53-2dd4-4176-b464-fa049952b4e7",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                        "    ",
                        "    postman.setNextRequest('Get payout by merchant order id');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "aa03d6eb-acd4-478e-8157-f3b6a49d2c92",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payout_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"expiration\": \"{{expiration}}\"\n        },\n        \"recipient_info\": \"{{$randomUUID}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-aa03d6eb-acd4-478e-8157-f3b6a49d2c92"
              }
            ],
            "id": "0dbf3207-26cb-4c04-a514-f19b74bda6b1",
            "description": "- Merchant makes POST request in JSON format to create new payout to endpoint (/api/payouts), [see more](https://integration.unlimit.com/#createPayout)\n- Merchant receives response with transaction (payout) result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "96517514-af6c-4baf-bd9e-a3249eccee41"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "3202831b-8381-4d9f-9a66-68cd35fffdf1"
                }
              }
            ],
            "uid": "10462328-0dbf3207-26cb-4c04-a514-f19b74bda6b1"
          },
          {
            "name": "Get payouts list",
            "item": [
              {
                "name": "Get payout by merchant order id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e01b29a0-b1b4-4ae8-88c5-1a7702d7a7f8",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2139f70c-e245-4f20-a9fd-cc85934f8c81",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('data');",
                        "    pm.collectionVariables.set('last_payout_id', response.data[0].payout_data.id);",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "6ee4313b-0965-4922-8237-9d0d88223264",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "merchant_order_id",
                        "value": "{{last_merchant_order_id}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-6ee4313b-0965-4922-8237-9d0d88223264"
              },
              {
                "name": "Get payouts information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41ce5e0b-ffc7-4251-9330-805b22ed7522",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fdc8259-c14c-4b64-b942-676e6f31831d",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('data');",
                        "    pm.expect(response).to.have.property('has_more');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "30ef93f3-ed16-4776-b6fc-b57f78a9877d",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "max_count",
                        "value": "5"
                      },
                      {
                        "key": "currency",
                        "value": "{{TERMINAL_CURRENCY}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-30ef93f3-ed16-4776-b6fc-b57f78a9877d"
              }
            ],
            "id": "e1952186-3c02-45f7-8421-278af1ec9af1",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payouts) to get information about payouts, [see more](https://integration.unlimit.com/#getPayout)\n- Merchant receives GET response about transactions (payouts list)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "2fcd86ab-0616-4024-856c-ef7aaabffd5f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "8cbb76a9-5110-43d4-8c6f-3a6deb349ce6"
                }
              }
            ],
            "uid": "10462328-e1952186-3c02-45f7-8421-278af1ec9af1"
          },
          {
            "name": "Get payout by payout id",
            "item": [
              {
                "name": "Get payout by payout id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd6a5a50-a090-41f7-b565-6e9b97c3af27",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_payout_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd314900-9f2a-47a1-afa8-d62c31219fc3",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payout_data');",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    pm.expect(response.payout_data.id).to.equal(pm.collectionVariables.get('last_payout_id'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "11f5ad09-50dd-4f11-9b40-7cc073f15960",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/{{last_payout_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      "{{last_payout_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-11f5ad09-50dd-4f11-9b40-7cc073f15960"
              }
            ],
            "id": "fcb1fba4-ea04-43d6-a29f-3b1f74aaf529",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payouts/{payout_id}) to get information about payout by payout id, [see more](https://integration.unlimit.com/#getPayout)\n- Merchant receives GET response about transaction result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "9a072f30-4b7b-49dc-b631-456596c15b9b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "37ffc903-c146-4629-82e7-143101f77756"
                }
              }
            ],
            "uid": "10462328-fcb1fba4-ea04-43d6-a29f-3b1f74aaf529"
          },
          {
            "name": "Reverse payout (void)",
            "item": [
              {
                "name": "Create payout to reverse",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc46f486-eea2-4722-a36d-b8123b6b45c2",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d86d3f7c-3c99-48bd-9957-c14d898743c1",
                      "exec": [
                        "pm.test(\"Request success\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('payout_id_to_reverse', response.payout_data.id);",
                        "    ",
                        "    postman.setNextRequest('Reverse payout');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "6ceb2767-dbd1-4678-b202-ed8c9d3191e0",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payout_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        },\n        \"recipient_info\": \"{{$randomUUID}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-6ceb2767-dbd1-4678-b202-ed8c9d3191e0"
              },
              {
                "name": "Reverse payout",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1949a29-9cfd-474c-b631-1a53bd7a03f8",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payout_id_to_reverse')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d6bf636-307c-44e8-ba44-9b120263da00",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    pm.expect(response.payout_data).to.have.property('status');",
                        "    pm.expect(response.payout_data.status).to.equal('VOIDED');",
                        "       ",
                        "    postman.setNextRequest('Create one-click payment');",
                        "})",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "28595bae-7741-45e7-9aee-e0de3d15f4f4",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payout_data\": {\n        \"status_to\": \"REVERSE\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/{{payout_id_to_reverse}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      "{{payout_id_to_reverse}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-28595bae-7741-45e7-9aee-e0de3d15f4f4"
              }
            ],
            "id": "d4d3f6d4-373c-43a6-9696-27319c808e78",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payouts** to create new payout, [see more](https://integration.unlimit.com/#createPayout)\n- Merchant receives callback with transaction result information (with payout id)\n- Merchant makes PATCH request in JSON format with payout id and payout_data.status_to='REVERSE' to **/api/payouts/{payout_id}** for reverse (void) payout - payout void possibility must be enabled by Unlimit manager, [see more](https://integration.unlimit.com/#updatePayout)\n- Merchant receives response with update result information (status='VOIDED')",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "id": "d441654d-7ae0-40da-a4c0-48caa8f63ba5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "57310607-cfd1-438f-b6c2-c5e9a9e585dd"
                }
              }
            ],
            "uid": "10462328-d4d3f6d4-373c-43a6-9696-27319c808e78"
          }
        ],
        "id": "cd280bea-591d-411a-8b93-253f8cb0d581",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "4cffb8ba-eaa8-4749-bcfd-521f9b5ad406"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "f79468ca-59f8-4e92-9863-5d319ffd1795"
            }
          }
        ],
        "uid": "10462328-cd280bea-591d-411a-8b93-253f8cb0d581"
      },
      {
        "name": "Payouts (APMs)",
        "item": [
          {
            "name": "Asia",
            "item": [
              {
                "name": "South Korea",
                "item": [
                  {
                    "name": "Bank transfer South Korea",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "BANKTRANSFERKRW payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "1bec9baa-364c-4ce2-9970-dd8a776f662d"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "92a6dab1-71de-4f29-b3ac-81a5abf75c13"
                                }
                              }
                            ],
                            "id": "7d3a31f7-09a5-4127-9c8b-fced51c83a35",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"BANKTRANSFERKRW\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"KRW\"\n    },\n     \"ewallet_account\": {\n        \"bank_code\": \"67\",\n        \"id\": \"1234567890\"\n    },\n    \"customer\": {\n        \"phone\":\"827123456789\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-7d3a31f7-09a5-4127-9c8b-fced51c83a35"
                          }
                        ],
                        "id": "4f108eda-67cd-4b55-b75d-9d0530051413",
                        "uid": "10462328-4f108eda-67cd-4b55-b75d-9d0530051413"
                      }
                    ],
                    "id": "49c689fb-1e82-4235-b504-deb8e6d37e96",
                    "uid": "10462328-49c689fb-1e82-4235-b504-deb8e6d37e96"
                  }
                ],
                "id": "75f70129-5c3f-42b5-b7d1-fdb3055d6192",
                "uid": "10462328-75f70129-5c3f-42b5-b7d1-fdb3055d6192"
              },
              {
                "name": "Indonesia",
                "item": [
                  {
                    "name": "BANKTRANSFERSIDR",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create Indonesia Bank Transfer payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8940c566-ceba-4a69-bd74-a09861614eb4"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "80b26bd6-353c-4a44-83c8-98183eb959b2"
                                }
                              }
                            ],
                            "id": "56993f90-5997-4fa6-a553-de49812216b0",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKTRANSFERSIDR\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-56993f90-5997-4fa6-a553-de49812216b0"
                          }
                        ],
                        "id": "940cfee5-2f00-45ed-b3f7-159043e0812b",
                        "uid": "10462328-940cfee5-2f00-45ed-b3f7-159043e0812b"
                      }
                    ],
                    "id": "72c2375f-900a-4194-b42c-f08d8d5b44e4",
                    "uid": "10462328-72c2375f-900a-4194-b42c-f08d8d5b44e4"
                  },
                  {
                    "name": "OVO",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVO payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a8f4e4b4-fd9d-47c6-aaf9-57cbfcb45648"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5da89144-ad8c-41d8-8b4e-1b0b612fda6c"
                                }
                              }
                            ],
                            "id": "597765b6-a5fd-48cd-8a36-429c0ae57b1b",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVO\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-597765b6-a5fd-48cd-8a36-429c0ae57b1b"
                          }
                        ],
                        "id": "b12d5099-a496-4c84-a13c-31cddbb5173d",
                        "uid": "10462328-b12d5099-a496-4c84-a13c-31cddbb5173d"
                      }
                    ],
                    "id": "e77c2b35-3ac5-47e9-92ea-11591ef405fd",
                    "uid": "10462328-e77c2b35-3ac5-47e9-92ea-11591ef405fd"
                  },
                  {
                    "name": "ShopeePay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create ShopeePay Mobile payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "fb716917-ddc0-416e-a0ec-2b98d59ebfc7"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7eee5317-bce1-477b-8c66-f919a41b7c25"
                                }
                              }
                            ],
                            "id": "23f45a79-f03e-4b79-86a0-f7c0e88b3f46",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-23f45a79-f03e-4b79-86a0-f7c0e88b3f46"
                          }
                        ],
                        "id": "02992437-a0c1-4e98-b8a5-89c8b1c6bd3e",
                        "uid": "10462328-02992437-a0c1-4e98-b8a5-89c8b1c6bd3e"
                      }
                    ],
                    "id": "f74bacab-7f14-4716-bf7f-9167bf04b157",
                    "uid": "10462328-f74bacab-7f14-4716-bf7f-9167bf04b157"
                  },
                  {
                    "name": "LINKAJA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create LINKAJA payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e7c9ff80-a09e-4def-85a5-3a09d55ae159"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "83f2e66d-734e-4bd7-a739-9b88ddf8ffce"
                                }
                              }
                            ],
                            "id": "93efce15-3c82-4aeb-a1a4-6e437431b92b",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"LINKAJA\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-93efce15-3c82-4aeb-a1a4-6e437431b92b"
                          }
                        ],
                        "id": "15c3e18d-9446-452c-aa08-fa2990a7c43b",
                        "uid": "10462328-15c3e18d-9446-452c-aa08-fa2990a7c43b"
                      }
                    ],
                    "id": "a42a204b-8b9c-444c-b3dc-da5400ab1d82",
                    "uid": "10462328-a42a204b-8b9c-444c-b3dc-da5400ab1d82"
                  },
                  {
                    "name": "DANAWALLET",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DANA Indonesia Digital payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "462ee1ab-d7cd-4c8f-8f60-9dd3956e5378"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "380302cd-c2d0-47fc-aa21-91f1b558380e"
                                }
                              }
                            ],
                            "id": "b9ee4bf3-806a-4b87-9433-6478ccb42241",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"DANAWALLET\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 10000,\n        \"currency\": \"IDR\"\n    },\n     \"ewallet_account\": {\n        \"bank_code\": \"67\",\n        \"id\": \"1234567890\"\n    },\n    \"customer\": {\n        \"phone\":\"827123456789\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-b9ee4bf3-806a-4b87-9433-6478ccb42241"
                          }
                        ],
                        "id": "0b696329-b104-466e-af7c-bfffd8cd562f",
                        "uid": "10462328-0b696329-b104-466e-af7c-bfffd8cd562f"
                      }
                    ],
                    "id": "7671e98c-e75e-4630-a53c-b01f08297f20",
                    "uid": "10462328-7671e98c-e75e-4630-a53c-b01f08297f20"
                  }
                ],
                "id": "4012a0f5-2348-49f0-88aa-f2da913edf58",
                "uid": "10462328-4012a0f5-2348-49f0-88aa-f2da913edf58"
              }
            ],
            "id": "34911e50-15e6-4f16-98c9-8f06ded3ed7d",
            "uid": "10462328-34911e50-15e6-4f16-98c9-8f06ded3ed7d"
          },
          {
            "name": "Latin America",
            "item": [
              {
                "name": "Pix",
                "item": [
                  {
                    "name": "Create PIX payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "7f9ca080-68a8-415f-a32e-084e86e7aa86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "1e112ba6-22d9-492d-9352-e3f4c031f24b"
                        }
                      }
                    ],
                    "id": "7c85368a-7267-4156-9158-667cd8d96820",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PIX\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"BRL\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1859642039681735\",\n        \"bank_code\": \"001\",\n        \"bank_branch\": \"1234\",\n        \"type\": \"SVGS\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-7c85368a-7267-4156-9158-667cd8d96820"
                  }
                ],
                "id": "2db8f210-fa49-4f4f-a085-17e4ed2159e0",
                "uid": "10462328-2db8f210-fa49-4f4f-a085-17e4ed2159e0"
              },
              {
                "name": "Davivienda",
                "item": [
                  {
                    "name": "Create Davivienda bank payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "87a93222-5fe9-40c6-98aa-69c77bb1096a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "e2e2d6f6-eb94-40fb-8e56-382d98b0c2da"
                        }
                      }
                    ],
                    "id": "c8b52ccb-e1d0-4476-8800-6161aaa4e410",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"daviviendabank\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"016704402001\",\n        \"bank_code\": \"000007\",\n        \"type\": \"CС\"\n    },\n    \"customer\": {\n        \"identity\": \"79845632\",\n        \"document_type\": \"02\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-c8b52ccb-e1d0-4476-8800-6161aaa4e410"
                  }
                ],
                "id": "08233fbe-3ae1-489c-8234-f5d31ba192bc",
                "uid": "10462328-08233fbe-3ae1-489c-8234-f5d31ba192bc"
              },
              {
                "name": "transfiya",
                "item": [
                  {
                    "name": "Create transfiya payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "73270d08-ea4a-454a-bf7f-669994232459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "2cce783e-77eb-4bf4-8fc8-41bceef417a3"
                        }
                      }
                    ],
                    "id": "6ae2f7bf-6f2c-40a6-8649-03b6a41d439a",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"transfiya\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-6ae2f7bf-6f2c-40a6-8649-03b6a41d439a"
                  }
                ],
                "id": "397a8ce5-d283-4b0b-a2da-983019b0c5cb",
                "uid": "10462328-397a8ce5-d283-4b0b-a2da-983019b0c5cb"
              },
              {
                "name": "SPEI",
                "item": [
                  {
                    "name": "Create SPEI payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "ef92a60b-a188-45da-85aa-608ecd892595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "d2810ced-754e-48cf-94e9-589811903cd0"
                        }
                      }
                    ],
                    "id": "44784781-7b49-4da8-b408-fc8209b51cfd",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"MXN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"123456789012345689\"\n    },\n    \"customer\":{\n        \"full_name\":\"{{$randomFullName}}\"\n\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-44784781-7b49-4da8-b408-fc8209b51cfd"
                  }
                ],
                "id": "8056b114-cbd8-45c5-b844-00933654edd4",
                "uid": "10462328-8056b114-cbd8-45c5-b844-00933654edd4"
              },
              {
                "name": "DiMo",
                "item": [
                  {
                    "name": "Create Dimo payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "2f0028de-1b98-4f95-9478-42b81ae78793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "c9c77c21-0149-4e3e-8198-b1df6f00a862"
                        }
                      }
                    ],
                    "id": "5640bc6b-fe4b-417b-82cb-a2b62cffcce7",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payout_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n \n    },\n        \"ewallet_account\": {\n            \"id\": \"123456789012345678\",\n            \"bank_code\": \"40002\"\n\n        }\n    }\n"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-5640bc6b-fe4b-417b-82cb-a2b62cffcce7"
                  }
                ],
                "id": "50ca3b54-95b8-4cfa-bddb-43719860af23",
                "uid": "10462328-50ca3b54-95b8-4cfa-bddb-43719860af23"
              },
              {
                "name": "Bank transfer Colombia",
                "item": [
                  {
                    "name": "Create Bank transfer Colombia payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "f39e1432-b5cb-474a-9095-1ae1307dd258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "21e06030-8297-4f3a-9ff8-83fb6ad3154d"
                        }
                      }
                    ],
                    "id": "7ee05486-c462-4eb0-9aed-94e8ec8ba02f",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"BANKTRANSFERSCOP\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1859642039681735\",\n        \"bank_code\": \"1001\",\n        \"type\": \"cc\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"document_type\": \"cc\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-7ee05486-c462-4eb0-9aed-94e8ec8ba02f"
                  }
                ],
                "id": "292fa487-086a-4a6c-ae20-b6e11b4054f5",
                "uid": "10462328-292fa487-086a-4a6c-ae20-b6e11b4054f5"
              }
            ],
            "id": "df7d694e-05f9-4c61-8c35-42c68d5df3ee",
            "uid": "10462328-df7d694e-05f9-4c61-8c35-42c68d5df3ee"
          },
          {
            "name": "Africa",
            "item": [
              {
                "name": "OPAY",
                "item": [
                  {
                    "name": "Create OPAY payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "41ccd489-78cc-4464-ae67-feee0d339d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "3928bb2d-2273-4a0f-a427-00044fdc8321"
                        }
                      }
                    ],
                    "id": "1c2c8478-4864-4a5d-b67d-979983369617",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"OPAY\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\":\n    {\n        \"id\": \"2341111111111\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-1c2c8478-4864-4a5d-b67d-979983369617"
                  }
                ],
                "id": "49cf3e44-0819-4729-ab0e-fa644761e8b1",
                "uid": "10462328-49cf3e44-0819-4729-ab0e-fa644761e8b1"
              },
              {
                "name": "Airtel Tanzania",
                "item": [
                  {
                    "name": "Create Airtel Tanzania payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "7d46d7d3-1656-4b72-a5c8-5afc76ac996b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "541adffe-ed25-4afc-b7cb-5f063caf2b2c"
                        }
                      }
                    ],
                    "id": "04d37f2a-2d57-4df5-80a1-337307ce384e",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"AIRTELTZS\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-04d37f2a-2d57-4df5-80a1-337307ce384e"
                  }
                ],
                "id": "b448d371-4cb5-4481-aa76-8eba73ffe51b",
                "uid": "10462328-b448d371-4cb5-4481-aa76-8eba73ffe51b"
              },
              {
                "name": "Airtel",
                "item": [
                  {
                    "name": "Create Airtel payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "7d4a7ebd-28b2-4e97-a658-644c4abe3330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "a30a44b4-c04b-485a-a445-caeed0950fda"
                        }
                      }
                    ],
                    "id": "7cab1133-8b89-418d-abb2-9412cd982b81",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"AIRTEL\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-7cab1133-8b89-418d-abb2-9412cd982b81"
                  }
                ],
                "id": "d85e4473-39ba-43ae-9a0d-4cb7d5ace363",
                "uid": "10462328-d85e4473-39ba-43ae-9a0d-4cb7d5ace363"
              },
              {
                "name": "Direct Banking Nigeria",
                "item": [
                  {
                    "name": "Create Direct Banking Nigeria payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "6a84d168-b826-47ac-a8c8-2ae6d5a8193d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "bd04caf5-22ed-4457-97ea-e44636dfb906"
                        }
                      }
                    ],
                    "id": "e2bc905f-0323-4b57-92c3-a1315d4193cd",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"DIRECTBANKINGNGA\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"NGN\"\n    },\n     \"ewallet_account\": {\n        \"bank_code\": \"057\",\n        \"id\": \"1111111111\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-e2bc905f-0323-4b57-92c3-a1315d4193cd"
                  }
                ],
                "id": "04cc7282-bf93-4562-887b-3a97ef0760b6",
                "uid": "10462328-04cc7282-bf93-4562-887b-3a97ef0760b6"
              },
              {
                "name": "FCMB",
                "item": [
                  {
                    "name": "Create banktransfersngn payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "2099bb84-64a4-44a9-b921-adbf18d9521a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "11ddd3f2-ae29-45d8-86e9-967177e0ad8c"
                        }
                      }
                    ],
                    "id": "0809c320-2284-40f5-adbe-e6507a5f5d1b",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"banktransfersngn\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Post ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-0809c320-2284-40f5-adbe-e6507a5f5d1b"
                  }
                ],
                "id": "a84402de-1ba3-45c7-8927-25c201ce964d",
                "uid": "10462328-a84402de-1ba3-45c7-8927-25c201ce964d"
              },
              {
                "name": "M-Pesa",
                "item": [
                  {
                    "name": "Create M-Pesa payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "f89af5d6-558c-4cad-96af-d278b1ef7285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "ed132586-44bd-432c-938a-1a2c2fe9f5d0"
                        }
                      }
                    ],
                    "id": "417ce697-71d1-4f4b-9472-c905e32023ee",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"MPESA\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254123456789\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-417ce697-71d1-4f4b-9472-c905e32023ee"
                  }
                ],
                "id": "074e2d8b-b428-4b58-b2a3-0e431fcd9702",
                "uid": "10462328-074e2d8b-b428-4b58-b2a3-0e431fcd9702"
              },
              {
                "name": "Pesalink transfer to account",
                "item": [
                  {
                    "name": "Create Pesalink account payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "d1c187b2-ec9a-4cf6-878a-5e2234f0e7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "20cb8668-cabc-4cbf-9ecd-9f0f100955ca"
                        }
                      }
                    ],
                    "id": "c733014e-755f-4e67-8770-ff427058b518",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"pesalinkaccount\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-c733014e-755f-4e67-8770-ff427058b518"
                  }
                ],
                "id": "aba488a7-02d1-453c-9927-da105bc49590",
                "uid": "10462328-aba488a7-02d1-453c-9927-da105bc49590"
              },
              {
                "name": "Pesalink transfer to wallet",
                "item": [
                  {
                    "name": "Create Pesalink wallet payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "1cb9700e-9dc8-411e-b033-1f6303194f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "91271543-a2d9-4a84-8dec-60f3cb821f37"
                        }
                      }
                    ],
                    "id": "87688c52-9874-4dd2-9f32-430f4a12bc4c",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PESALINKWALLET\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-87688c52-9874-4dd2-9f32-430f4a12bc4c"
                  }
                ],
                "id": "2a24c41e-1813-4c19-adc1-fa8a9197ffa6",
                "uid": "10462328-2a24c41e-1813-4c19-adc1-fa8a9197ffa6"
              },
              {
                "name": "Pesalink transfer to phone",
                "item": [
                  {
                    "name": "Create Pesalink phone payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "bede98ce-c2fb-4dd5-a1f2-42fe6b5c18c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "2e4baec5-09b3-4364-92b6-1e785cdc14b8"
                        }
                      }
                    ],
                    "id": "43650878-7abb-43ea-bf69-255f00aeabb0",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"pesalinkphone\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-43650878-7abb-43ea-bf69-255f00aeabb0"
                  }
                ],
                "id": "4bc755f4-eea1-41e9-b7aa-e810248bdf85",
                "uid": "10462328-4bc755f4-eea1-41e9-b7aa-e810248bdf85"
              }
            ],
            "id": "5917e73e-36d4-4595-9d3f-bf5c381aa2fe",
            "uid": "10462328-5917e73e-36d4-4595-9d3f-bf5c381aa2fe"
          },
          {
            "name": "Europe",
            "item": [
              {
                "name": "SEPA Instant",
                "item": [
                  {
                    "name": "Create SEPATRANSFER  payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "27a47345-b7d9-4af0-8809-5ca6cd4d6bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "db19703a-067d-4bdc-b9d5-78dbafb10a76"
                        }
                      }
                    ],
                    "id": "fc6f3c8c-3d35-4694-b8a9-14b3739fc289",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"SEPATRANSFER\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"PL12123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"living_address\": {\n            \"country\": \"PL\",\n            \"address\": \"test address\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-fc6f3c8c-3d35-4694-b8a9-14b3739fc289"
                  }
                ],
                "id": "9ab6e288-499a-49d8-bcfb-00b8e465764b",
                "uid": "10462328-9ab6e288-499a-49d8-bcfb-00b8e465764b"
              }
            ],
            "id": "cff23e6d-7fe2-4ef5-86be-0a7a33adca74",
            "uid": "10462328-cff23e6d-7fe2-4ef5-86be-0a7a33adca74"
          }
        ],
        "id": "4194cbe7-4ba5-4c2e-96ad-da5bbb46afc2",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "0d32ace8-c9bd-4b9e-80ed-7699aca92b62"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ],
              "id": "9c2cc1b5-e796-4427-9471-bd581f267d87"
            }
          }
        ],
        "uid": "10462328-4194cbe7-4ba5-4c2e-96ad-da5bbb46afc2"
      },
      {
        "name": "Recurrings",
        "item": [
          {
            "name": "One-click payments",
            "item": [
              {
                "name": "Create one-click payment",
                "item": [
                  {
                    "name": "Create one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('last_recurring_one_click_id', response.recurring_data.id);",
                            "    postman.setNextRequest('Get recurring by first recurring id');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "a9a1fba0-a0bf-450a-a214-ac1d65ebbf8b",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-a9a1fba0-a0bf-450a-a214-ac1d65ebbf8b"
                  }
                ],
                "id": "749896d6-8f06-4e4d-a217-31c2d3af8a0d",
                "description": "- Merchant makes POST request in JSON format to endpoint **/api/recurrings** ([see more](https://integration.unlimit.com/#createRecurring)) to create new one-click payment (with 'initiator'='cit' in request) with card tokenization for recurrent payments\n- One-click payment is created in the system and redirect URL is returned to Merchant in JSON format (payment page URL)\n- Merchant redirects Customer to the payment page (Unlimit or Merchant site) with provided URL\n- Merchant can use filing.id (from the callback or get response) in the next one-click transactions using saved (tokenized) card",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "5e842ef4-9511-487e-8523-37aa845e71f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "baa4541c-7ac3-4c90-936b-9937ad31c86f"
                    }
                  }
                ],
                "uid": "10462328-749896d6-8f06-4e4d-a217-31c2d3af8a0d"
              },
              {
                "name": "Create next one-click payment",
                "item": [
                  {
                    "name": "Get recurring by first recurring id",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f786fc-381d-4e66-be6f-4d8fb64d5e81",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_recurring_one_click_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a70ddd4-3d57-4d77-a63a-a7504a4a17b2",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_recurring_one_click_id'));",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_filing_id', response.recurring_data.filing.id);",
                            "    ",
                            "    postman.setNextRequest('Create next one-click payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "48efc365-1f0f-4e22-b250-e611d82bd66f",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_recurring_one_click_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{last_recurring_one_click_id}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-48efc365-1f0f-4e22-b250-e611d82bd66f"
                  },
                  {
                    "name": "Create next one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac460958-2ceb-48b1-98d3-624c5c17c876",
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "pm.expect(pm.collectionVariables.get('last_filing_id')).to.not.be.undefined;",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11346c71-8220-4a06-8f44-4f2af3722ddc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data.filing.id).to.equal(pm.collectionVariables.get('last_filing_id'));",
                            "",
                            "    // emulate customer behaviour, performing GET request to redirect url",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    postman.setNextRequest('Get recurring by merchant order id');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "63332ffa-16bc-4e1f-bf56-e990daf5a738",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"filing\": {\n            \"id\": \"{{last_filing_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-63332ffa-16bc-4e1f-bf56-e990daf5a738"
                  }
                ],
                "id": "8baff04a-bb1e-4e28-8e6f-74508f28fe53",
                "description": "* Merchant makes POST request in JSON format to endpoint **/api/recurrings**, to create new one-click payment (with 'initiator'='cit', filing.id from previous one-click in request) \n* Upon authentication completion, one-click payment is processed. Customer gets payment result page (redirect URL)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "a83c135c-01f6-4522-88ff-0a0409e91d95"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "c41c2bc5-63db-4aa1-a3af-25c27fc2e16d"
                    }
                  }
                ],
                "uid": "10462328-8baff04a-bb1e-4e28-8e6f-74508f28fe53"
              },
              {
                "name": "Create pre-authorized one-click payment",
                "item": [
                  {
                    "name": "Create pre-authorized one-click payment to complete",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f302e4-f929-4c41-a1b3-d9f2edf029dd",
                          "exec": [
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64b086f-127a-420b-b5ed-8887db6c9381",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('recurring_one_click_id_to_complete', response.recurring_data.id);",
                            "    postman.setNextRequest('Complete pre-authorized one-click payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "ea8478dc-82cf-4a2b-af69-2c0215f141a1",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-ea8478dc-82cf-4a2b-af69-2c0215f141a1"
                  },
                  {
                    "name": "Complete pre-authorized one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b04ebd3-99e9-461c-af4c-3414972802c9",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('recurring_one_click_id_to_complete')).to.not.be.undefined;",
                            "",
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbcfe2c-56d8-479e-89b6-cdb8d86a6da0",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok",
                            "    pm.response.to.have.jsonBody()",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('status');",
                            "    pm.expect(response.recurring_data.status).to.equal('COMPLETED');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "6076b896-d511-408c-a303-62d9d78a6631",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"recurring_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{recurring_one_click_id_to_complete}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{recurring_one_click_id_to_complete}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-6076b896-d511-408c-a303-62d9d78a6631"
                  }
                ],
                "id": "b0395574-4ec2-4f9a-898c-ca914fb99e1f",
                "description": "- Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create new one-click payment with parameter preauth='true', [see more](https://integration.unlimit.com/#createRecurring)\n- Pre-authorized one-click payment is created in the system and redirect URL is returned to Merchant in JSON format\n- Merchant redirects Customer to the payment page with provided URL\n- Merchant can complete or reverse (void) pre-authorized one-click payment using PATCH request in JSON format with payment id and recurring_data.status_to='REVERSE' or \"COMPLETE\" to **/api/recurrings/{recurring_id}**\n- Merchant receives response with update one-click payment result information (status=\"VOIDED\" or \"COMPLETED\")\n- If merchant doesn't send complete or reverse request ([see more](https://integration.unlimit.com/#updateRecurring)), one-click payment will be completed automatically in 7 calendar days\n- Amount in completion update request can be less, equal or more than preauthorized amount in first request",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "8106993f-acbb-46a9-a889-955f53c65674"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "08c3f1d1-90ba-42cd-9a06-abaaa49d8237"
                    }
                  }
                ],
                "uid": "10462328-b0395574-4ec2-4f9a-898c-ca914fb99e1f"
              },
              {
                "name": "Reverse one-click payment (void)",
                "item": [
                  {
                    "name": "Create pre-authorized one-click payment to reverse",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc9ebef-d3eb-4bc3-bdaf-37ef83512243",
                          "exec": [
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ca1014-67ac-4f6d-b3e1-1a6102709207",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('recurring_one_click_id_to_reverse', response.recurring_data.id);",
                            "    postman.setNextRequest('Reverse pre-authorized one-click payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "7ba19668-081a-4764-bf6d-612827b9eccc",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-7ba19668-081a-4764-bf6d-612827b9eccc"
                  },
                  {
                    "name": "Reverse pre-authorized one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39562bc-1e5f-42ed-bd62-e1e9fd9185b6",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('recurring_one_click_id_to_reverse')).to.not.be.undefined;",
                            "",
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e373b2-ca70-49ea-98ab-2d470649f089",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok",
                            "    pm.response.to.have.jsonBody()",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('status');",
                            "    pm.expect(response.recurring_data.status).to.equal('VOIDED');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "abd75e83-38c5-47d0-a00b-dd93b69e390a",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"recurring_data\": {\n    \"status_to\": \"REVERSE\"\n  }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{recurring_one_click_id_to_reverse}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{recurring_one_click_id_to_reverse}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-abd75e83-38c5-47d0-a00b-dd93b69e390a"
                  }
                ],
                "id": "9fdb0e69-97e7-40a7-a979-f3daba6999e4",
                "description": "- Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create new one-click payment, [see more](https://integration.unlimit.com/#createRecurring)\n- Merchant receives callback with transaction result information (with recurring id)\n- Merchant makes PATCH request in JSON format with recurring id and recurring_data.status_to='REVERSE' to **/api/recurrings{recurring_id}** to reverse (void) one-click payment, [see more](https://integration.unlimit.com/#updateRecurring)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "23fbebf3-bb1d-4c92-8ff1-c749f14d3e9a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "fbd66f89-0adb-436a-a4e4-f0b64981a20c"
                    }
                  }
                ],
                "uid": "10462328-9fdb0e69-97e7-40a7-a979-f3daba6999e4"
              },
              {
                "name": "Get recurring payments list",
                "item": [
                  {
                    "name": "Get recurring by merchant order id",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1e1ae4-33a9-47ca-862a-e05d05e35378",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caed047b-7076-44fb-b12a-2fe5d7e7de1a",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('data');",
                            "    pm.collectionVariables.set('last_recurring_id', response.data[0].recurring_data.id);",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "75d2acbf-6837-4f7d-8cf1-807917653f2f",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          ""
                        ],
                        "query": [
                          {
                            "key": "request_id",
                            "value": "{{$guid}}"
                          },
                          {
                            "key": "merchant_order_id",
                            "value": "{{last_merchant_order_id}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-75d2acbf-6837-4f7d-8cf1-807917653f2f"
                  },
                  {
                    "name": "Get recurrings information",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4031b1-03a4-40d0-8143-20e9de17dbdc",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5409455c-d6be-4ec3-b254-00e26aa46ceb",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "        ",
                            "    pm.expect(response).to.have.property('data');",
                            "    pm.expect(response).to.have.property('has_more');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "42ee25ee-6a75-4191-b8a5-42f4db1fae0c",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          ""
                        ],
                        "query": [
                          {
                            "key": "request_id",
                            "value": "{{$guid}}"
                          },
                          {
                            "key": "max_count",
                            "value": "5"
                          },
                          {
                            "key": "currency",
                            "value": "{{TERMINAL_CURRENCY}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-42ee25ee-6a75-4191-b8a5-42f4db1fae0c"
                  }
                ],
                "id": "9a8eace6-3abf-4b64-9ba9-e0476852fe94",
                "description": "- Merchant makes GET request in JSON format to endpoint **/api/recurrings** to get information about payments list, [see more](https://integration.unlimit.com/#getRecurrings)\n- Merchant receives GET response about transactions (recurrings list)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "a9df04f0-2004-4f61-b13d-38898eaef220"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "a52d809f-a866-43ef-a9af-698311aef109"
                    }
                  }
                ],
                "uid": "10462328-9a8eace6-3abf-4b64-9ba9-e0476852fe94"
              },
              {
                "name": "Get recurring payment by recurring id",
                "item": [
                  {
                    "name": "Get recurring by recurring id",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cc9f85-9028-4f3c-8380-289e6445d78c",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_recurring_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672f9e5c-5fcf-4144-8a22-55874b43170b",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_recurring_one_click_id'));",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "00c1a390-447a-4557-8663-11ef242b8d56",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_recurring_one_click_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{last_recurring_one_click_id}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-00c1a390-447a-4557-8663-11ef242b8d56"
                  }
                ],
                "id": "9a007542-bd86-4a87-80e2-83acb871c441",
                "description": "- Merchant makes GET request in JSON format to endpoint **/api/recurrings/{recurring_id}** to get information about one-click payment by recurring id, [see more](https://integration.unlimit.com/#getRecurring)\n- Merchant receives GET response about transaction result information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "942865da-244c-4b24-b162-6f4de62dc828"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "21e8f799-7ceb-4387-80d6-e4d92e7c9592"
                    }
                  }
                ],
                "uid": "10462328-9a007542-bd86-4a87-80e2-83acb871c441"
              }
            ],
            "id": "da754610-8dda-471f-8e72-516d74565e21",
            "uid": "10462328-da754610-8dda-471f-8e72-516d74565e21"
          },
          {
            "name": "Scheduled payments",
            "item": [
              {
                "name": "Sсheduled by Acquirer (SA)",
                "item": [
                  {
                    "name": "Main flow for SA recurring payments",
                    "item": [
                      {
                        "name": "Create plan for SA payments",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan_data');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('plan_id', response.plan_data.id);",
                                "    postman.setNextRequest('Create first SA payment');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "d65bb587-55dd-4143-9415-053a88998ed0",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"plan_data\": {\n        \"amount\": \"100\",\n        \"interval\":1,\n        \"name\":\"{{$randomWord}}\",\n        \"period\": \"month\",\n        \"retries\": 3,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d65bb587-55dd-4143-9415-053a88998ed0"
                      },
                      {
                        "name": "Create first SA payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('last_sa_recurring_id', response.recurring_data.id);",
                                "    pm.collectionVariables.set('last_subscription_id', response.subscription.id);",
                                "    postman.setNextRequest('Get subscription info');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "8b9e6964-f08e-4ea8-aa70-d2a72c99dbca",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"scheduled_type\": \"SA\",\n        \"plan\": {\n            \"id\": \"{{plan_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8b9e6964-f08e-4ea8-aa70-d2a72c99dbca"
                      }
                    ],
                    "id": "b21f5c7a-2b93-4ca3-b3f1-92784af073bf",
                    "description": "A new scheduled subscription can be created in order to initiate a chain of payments that are automatically repeated based on a schedule set by the plan. A first payment in a subscription is always CIT while all following are MIT only. The value 'SA' in parameter scheduled_type must be sent. The next payment is created automatically based on the schedule set in the first request.\n\n*   Merchant makes POST request in JSON format to endpoint **/api/recurring_plans** to create plan\n*   Merchant receives response with plan.id\n*   Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create first payment.",
                    "uid": "10462328-b21f5c7a-2b93-4ca3-b3f1-92784af073bf"
                  },
                  {
                    "name": "Subscription management",
                    "item": [
                      {
                        "name": "Get subscription info",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan');",
                                "    pm.expect(response.plan).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "",
                                "    postman.setNextRequest('Update subscription');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "974a1c3a-fac4-44be-a7a3-1ed938c55048",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "GET",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": ""
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_subscriptions/{{last_subscription_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_subscriptions",
                              "{{last_subscription_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-974a1c3a-fac4-44be-a7a3-1ed938c55048"
                      },
                      {
                        "name": "Update subscription",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('subscription_data');",
                                "    pm.expect(response.subscription_data).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "",
                                "    postman.setNextRequest('Create plan');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "dd43fb24-d525-4d39-904c-0aae949270a2",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "PATCH",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"CHANGE_STATUS\",\n    \"subscription_data\": {\n        \"status_to\": \"INACTIVE\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_subscriptions/{{last_subscription_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_subscriptions",
                              "{{last_subscription_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-dd43fb24-d525-4d39-904c-0aae949270a2"
                      }
                    ],
                    "id": "fe62a775-0d24-4d3a-a8d3-b3481aac7838",
                    "description": "Cancelling a subscription cancels all future scheduled payments of that subscription. A subscription can be cancelled up until the day before the next scheduled payment, in order **Customer** not to be charged.\n\n*   Merchant makes GET request to endpoint **/api/recurring_subscriptions/{subscription_id}** to get information about subscription payments by subscription id\n*   Merchant makes PATCH request in JSON format to endpoint **/api/recurring_subscriptions/{subscription_id}** to cancel subscription",
                    "uid": "10462328-fe62a775-0d24-4d3a-a8d3-b3481aac7838"
                  },
                  {
                    "name": "Plan management",
                    "item": [
                      {
                        "name": "Create plan",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan_data');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('plan_change_id', response.plan_data.id);",
                                "    postman.setNextRequest('Update plan');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "28cf9044-6322-4823-8a11-88b50eddab38",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"plan_data\": {\n        \"amount\": \"100\",\n        \"interval\": 1,\n        \"name\":\"{{$randomAlphaNumeric}}\",\n        \"period\": \"month\",\n        \"retries\": 3,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-28cf9044-6322-4823-8a11-88b50eddab38"
                      },
                      {
                        "name": "Update plan",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan_data');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('plan_id', response.plan_data.id);",
                                "    postman.setNextRequest('Delete plan');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "aec28264-5972-4209-84dc-722bcb067c3f",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "PATCH",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"RENAME\",\n    \"plan_data\": {\n        \"name_to\":\"{{$randomWord}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans/{{plan_change_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans",
                              "{{plan_change_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-aec28264-5972-4209-84dc-722bcb067c3f"
                      },
                      {
                        "name": "Delete plan",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    postman.setNextRequest('Create first SM payment (Mexico)');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "b9a66aa3-69e5-43c8-aea2-43f91adbe35f",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "DELETE",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": ""
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans/{{plan_change_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans",
                              "{{plan_change_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b9a66aa3-69e5-43c8-aea2-43f91adbe35f"
                      }
                    ],
                    "id": "173cba06-1ef4-4686-83bd-a377dff85c1c",
                    "description": "A **Scheduled by Unlimit** subscription cannot be created without a subscription plan. A subscription plan is a set of parameters and recurrence schedule that become a basis for each new subscription. In other words - a subscription plan is a draft used for new subscription creation. Each plan has its own id and can be used multiple times to create various subscriptions. Plans can exist without subscriptions, but subscriptions cannot exist without plans.\n\n*   Merchant makes POST request in JSON format to endpoint **/api/recurring_plans** to create plan\n*   Merchant makes PATCH request in JSON format to endpoint **/api/recurring_plans/{plan_id}** to update plan\n*   Merchant makes DELETE request in JSON format to endpoint **/api/recurring_plans/{plan_id}** to delete plan",
                    "uid": "10462328-173cba06-1ef4-4686-83bd-a377dff85c1c"
                  }
                ],
                "id": "5c566f8d-cc08-49e6-af84-07601ec8b1aa",
                "uid": "10462328-5c566f8d-cc08-49e6-af84-07601ec8b1aa"
              },
              {
                "name": "Sсheduled by Merchant (SM)",
                "item": [
                  {
                    "name": "Mexico SM payments",
                    "item": [
                      {
                        "name": "Create first SM payment (Mexico)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('last_sm_recurring_id', response.recurring_data.id);",
                                "    postman.setNextRequest('Get first SM payment (Mexico)');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "b8dc0dcb-dd13-4bf9-a16d-e5b0d80a7066",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"contract_number\": \"{{$randomInt}\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b8dc0dcb-dd13-4bf9-a16d-e5b0d80a7066"
                      },
                      {
                        "name": "Get first SM payment (Mexico)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "11f786fc-381d-4e66-be6f-4d8fb64d5e81",
                              "exec": [
                                "pm.expect(pm.collectionVariables.get('last_sm_recurring_id')).to.not.be.undefined;"
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "1a70ddd4-3d57-4d77-a63a-a7504a4a17b2",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_sm_recurring_id'));",
                                "    ",
                                "    pm.expect(response.recurring_data).to.have.property('filing');",
                                "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                                "    ",
                                "    pm.collectionVariables.set('last_sm_filing_id', response.recurring_data.filing.id);",
                                "    ",
                                "    postman.setNextRequest('Create next SM payment (Mexico)');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "e276f6af-16a8-40c1-9944-f043ef7ee1ad",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "GET",
                          "header": [],
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_sm_recurring_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings",
                              "{{last_sm_recurring_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-e276f6af-16a8-40c1-9944-f043ef7ee1ad"
                      },
                      {
                        "name": "Create next SM payment (Mexico)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "ac460958-2ceb-48b1-98d3-624c5c17c876",
                              "exec": [
                                "var uuid = require('uuid');",
                                "",
                                "pm.expect(pm.collectionVariables.get('last_sm_filing_id')).to.not.be.undefined;",
                                "",
                                "var merchant_order_id = uuid.v4();",
                                "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "11346c71-8220-4a06-8f44-4f2af3722ddc",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "    ",
                                "    pm.expect(response.recurring_data).to.have.property('filing');",
                                "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                                "    ",
                                "    pm.expect(response.recurring_data.filing.id).to.equal(pm.collectionVariables.get('last_sm_filing_id'));",
                                "",
                                "    // emulate customer behaviour, performing GET request to redirect url",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    postman.setNextRequest('Create first SM payment');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "77455cd7-c953-47c5-9529-68ed5ab0ecaa",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"mit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"contract_number\": \"{{$randomInt}}\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"filing\": {\n            \"id\": \"{{last_sm_filing_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-77455cd7-c953-47c5-9529-68ed5ab0ecaa"
                      }
                    ],
                    "id": "539deca4-0b2f-4460-b294-fb0ded4b71ef",
                    "description": "Mexican recurring payments must include parameter recurring_data.contract_number. It is contract number between customer and merchant about proceeding recurring payments.\n\nSA and SM recurring payments are available for Mexican merchants.",
                    "uid": "10462328-539deca4-0b2f-4460-b294-fb0ded4b71ef"
                  },
                  {
                    "name": "Create first SM payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('last_sm_recurring_id', response.recurring_data.id);",
                            "    postman.setNextRequest('Get first SM payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "df5be6f4-f9e3-4ad0-9093-c19da050c783",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-df5be6f4-f9e3-4ad0-9093-c19da050c783"
                  },
                  {
                    "name": "Get first SM payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f786fc-381d-4e66-be6f-4d8fb64d5e81",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_sm_recurring_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a70ddd4-3d57-4d77-a63a-a7504a4a17b2",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_sm_recurring_id'));",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_sm_filing_id', response.recurring_data.filing.id);",
                            "    ",
                            "    postman.setNextRequest('Create next SM payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "5f8bd733-9609-482a-9062-6a7641431a00",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_sm_recurring_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{last_sm_recurring_id}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-5f8bd733-9609-482a-9062-6a7641431a00"
                  },
                  {
                    "name": "Create next SM payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac460958-2ceb-48b1-98d3-624c5c17c876",
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "pm.expect(pm.collectionVariables.get('last_sm_filing_id')).to.not.be.undefined;",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11346c71-8220-4a06-8f44-4f2af3722ddc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data.filing.id).to.equal(pm.collectionVariables.get('last_sm_filing_id'));",
                            "",
                            "    // emulate customer behaviour, performing GET request to redirect url",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    postman.setNextRequest('Get limits for refunds and payouts');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "bdbc73e9-b3ce-44e9-a226-82a9070d3fa3",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"mit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"filing\": {\n            \"id\": \"{{last_sm_filing_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-bdbc73e9-b3ce-44e9-a226-82a9070d3fa3"
                  }
                ],
                "id": "bc35de95-fc10-4c36-b5d3-8f7d682c16ab",
                "description": "Scheduled by **Merchant** payment have a subscription management (subscription data, **Customer** notifications, subscription schedule) on **Merchant** side. All scheduled payments by **Merchant** (first - CIT, all continue payments - MIT) must be initiated by **Merchant** API request. First and continue scheduled by **Merchant** payments must be separated in request by recurring_data. initiator parameter (CIT or MIT) in request.\n\n*   Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create the first recurring payment (with 'initiator'='cit' in request)\n*   Merchant makes GET request to endpoint **/api/recurrings/{recurring_id}** to get filing id for next payments\n*   Merchant makes POST request in JSON format to endpoint **/api/recurrings**, to create the next recurring payment (with 'initiator'='mit', filing.id from previous request)\n    \n\nPCI DSS compliant **Merchants** can store the card data on their own side and make payments with card data (without filing.id). Merchants must provide recurring_data.network_trans_id for recurring payments in this case. Merchant can ask his Unlimit manager to enable this option.",
                "uid": "10462328-bc35de95-fc10-4c36-b5d3-8f7d682c16ab"
              }
            ],
            "id": "cf45aca2-17fb-49ee-8a90-7701880d857b",
            "description": "Scheduled payments are a type of **credentials-on-file (COF)** payments designed for **Merchant**s that sell goods and services to **Customers** on an ongoing basis and bill them periodically. These can be payments for online content or for access to services. **Merchant** sets up a payment schedule specifying an amount, currency and recurrence.\n\nScheduled payments are divided into two types:\n\n*   **SA** (scheduled by Unlimit). Unlimit is responsible for managing schedule (deducts funds, retry logic etc.)\n*   **SM** (scheduled by Merchant). Merchant stores the schedule of the recurring payments and sends API requests in accordance with it.",
            "uid": "10462328-cf45aca2-17fb-49ee-8a90-7701880d857b"
          }
        ],
        "id": "6d73faf0-92b3-4de4-8895-904de8408861",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "380806e6-cf61-4810-ac28-1137fa8a370b"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "b62fc149-ae9a-4b06-b37f-e6c8f6d3c873"
            }
          }
        ],
        "uid": "10462328-6d73faf0-92b3-4de4-8895-904de8408861"
      },
      {
        "name": "Limits",
        "item": [
          {
            "name": "Get limits for refunds and payouts",
            "item": [
              {
                "name": "Get limits for refunds and payouts",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aedabcce-11d1-45a4-85cc-194d25a649de",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37d3b638-1341-4e10-9cea-ed197433e851",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('remaining_limits');",
                        "    pm.expect(response.remaining_limits).to.have.property(pm.environment.get(\"TERMINAL_CURRENCY\"));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "1179b036-116c-4708-9597-49539806d687",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/limits/?request_id={{$guid}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "limits",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-1179b036-116c-4708-9597-49539806d687"
              }
            ],
            "id": "a61204f1-ee95-421d-92eb-d96fd43d1c21",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/limits) to get available refunds and payouts limits, [see more](https://integration.unlimit.com/#limits)\n- Available withdrawal balance for refunds and payouts by all the currencies linked to the terminal_code from merchant authorization context.\n- When NULL for specific currency is returned - withdrawal balance for this currency is disabled\n- When 0 for specific currency is returned - remaining withdrawal balance for this currency is 0\n- Service returns previous limits value (cache value with life time - 1 second) in case when from one merchant was received more than 1 GET request per 1 second. Only successfully authorized merchant can make this kind of request.",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "c12ab5eb-9add-40c2-a62c-f9237c3a4602"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "0bd9e9fa-798b-4bf8-b4fe-316bb90adcd6"
                }
              }
            ],
            "uid": "10462328-a61204f1-ee95-421d-92eb-d96fd43d1c21"
          }
        ],
        "id": "af6cbcaf-cdcb-47cc-8247-9988a5745ce3",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "6041cac0-9086-40b2-8da5-da1b092b6f36"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "d9c98208-8c8e-4232-a1a5-b4b278b560ce"
            }
          }
        ],
        "uid": "10462328-af6cbcaf-cdcb-47cc-8247-9988a5745ce3"
      },
      {
        "name": "Reports",
        "item": [
          {
            "name": "Get reports",
            "item": [
              {
                "name": "Initiate the reports’ preparation",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7025d28-923a-4a63-84f1-a97bae6797b2",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "pm.variables.set(\"request_time\", new Date());",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fcd1b6d-2700-44a0-ad90-9ade88da6fc2",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "        try {",
                        "        pm.response.to.have.jsonBody();",
                        "        var response = pm.response.json();",
                        "        pm.expect(response).to.have.property('sample_id');",
                        "        pm.collectionVariables.set('reports_sample_id', response.sample_id);",
                        "        pm.execution.setNextRequest('Get a list of reports');",
                        "    } catch (a) {",
                        "        pm.collectionVariables.set('reports_sample_id', \"{{$guid}}\");",
                        "        pm.execution.setNextRequest('Get a list of reports');",
                        "    }",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "12c0dcac-0451-457c-ba04-719fe70de271",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"reports_data\": {\n        \"start_date\": \"2022-03-01\",\n        \"end_date\": \"2022-03-07\",\n        \"report_type\": [\"regular_settlement\",\"icpp_settlement\"]\n    }\n}\n\n"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/reports",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "reports"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-12c0dcac-0451-457c-ba04-719fe70de271"
              },
              {
                "name": "Get a list of reports",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8471460e-9ea5-4c38-9c18-56474556ac33",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('reports_sample_id')).to.not.be.undefined;",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bb3c294-0d95-43d5-ae8a-b429ab034b9b",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    try {",
                        "        pm.response.to.be.ok;",
                        "        pm.response.to.have.jsonBody();",
                        "        var response = pm.response.json();",
                        "        pm.response.to.be.ok;",
                        "        pm.expect(response).to.have.property('sample_id');",
                        "        pm.collectionVariables.set('reports_sample_id', response.sample_id);",
                        "        postman.setNextRequest('Download report file');",
                        "    } catch(err) {",
                        "        postman.setNextRequest('Download report file');",
                        "    }",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "5682360c-5799-42a1-8f88-d51294881692",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/reports/{{reports_sample_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "reports",
                      "{{reports_sample_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-5682360c-5799-42a1-8f88-d51294881692"
              },
              {
                "name": "Download report file",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "849eb8c8-8715-47dd-afdc-0d2395f392dd",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('reports_sample_id')).to.not.be.undefined;",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f956c45d-fb7b-4150-8806-f72bd68beddb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    try {",
                        "        pm.response.to.be.ok;",
                        "    } catch(err) {",
                        "",
                        "    }",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "42679f8a-d156-43c8-88fa-366e204e2147",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    },
                    {
                      "key": "Accept",
                      "value": "application/octet-stream",
                      "type": "text"
                    }
                  ],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/reports/download/{{reports_sample_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "reports",
                      "download",
                      "{{reports_sample_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-42679f8a-d156-43c8-88fa-366e204e2147"
              }
            ],
            "id": "d409c8ad-81f3-404a-b020-bafda61553d0",
            "description": "*   Merchant makes POST request in JSON format to endpoint (/api/reports) to initiate preparation of reports files\n*   Only successfully authorized merchant can make this kind of request\n*   If files of reports according to POST request's parameters are not found, then the empty array is returned in response to POST request\n*   Merchant makes GET request in JSON format to endpoint (/api/reports/{sample_id}) to get a list of reports with links to files' downloading\n*   Merchant makes GET request in JSON format to endpoint (/api/reports/download/{id}) to download files of report’s\n*   All report files (in archive) or single report file can be downloaded\n*   To download report file the request header 'Accept' must be set to 'application/octet-stream'",
            "uid": "10462328-d409c8ad-81f3-404a-b020-bafda61553d0"
          }
        ],
        "id": "fd09d877-69f4-48e5-8014-21c78281a62a",
        "uid": "10462328-fd09d877-69f4-48e5-8014-21c78281a62a"
      },
      {
        "name": "Invoices",
        "item": [
          {
            "name": "Create invoice (single-use)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c07165e8-1fc5-4149-a9cc-1c56675d3cb6",
                  "exec": [
                    "",
                    "var today = new Date();",
                    "var tomorrow = new Date(today);",
                    "tomorrow.setDate(tomorrow.getDate() + 2);",
                    "pm.collectionVariables.set('invoice_end_date', tomorrow.toISOString().split('.')[0]+ 'Z');"
                  ],
                  "type": "text/javascript"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad38ca0d-8c08-4798-b2d5-5d6e28d72e48",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    pm.expect(response).to.have.property('invoice_url');",
                    "});",
                    "pm.collectionVariables.set('invoice_id', pm.response.json().invoice_data.id);"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "id": "6c48878e-5af7-453d-8a05-898a2256afae",
            "protocolProfileBehavior": {
              "followAuthorizationHeader": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json",
                  "type": "text"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"invoice_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"expire_at\": \"{{invoice_end_date}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"items\": [\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"10\",\n                \"count\": 1\n            },\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"2.34\",\n                \"count\": 1\n            }\n        ]\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"payment_methods\": [\n        \"BANKCARD\"\n    ]\n}\n"
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices"
                ]
              },
              "description": "*   Merchant makes POST request in JSON format to endpoint **/api/invoice** to create a new invoice\n*   Merchant receives a response with invoice URL, merchant can provide URL via email, any messenger, sms or other way to a cardholder for payment.\n*   Merchant makes GET request in JSON format to endpoint (/api/invoices/{invoice_id}) for getting information about invoice by invoice id\n*   Merchant receives GET response about invoice result information"
            },
            "response": [],
            "uid": "10462328-6c48878e-5af7-453d-8a05-898a2256afae"
          },
          {
            "name": "Get invoice by invoice id (single-use)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f30e1ea-8670-4817-b4da-8e4aa9c7d54a",
                  "exec": [
                    "pm.expect(pm.collectionVariables.get('invoice_id')).to.not.be.undefined;",
                    "",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04b2a808-aa5b-46a0-bba9-b632938bdfd8",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "",
                    "    var response = pm.response.json();",
                    "",
                    "    pm.expect(response).to.have.property('invoice_data');",
                    "    pm.expect(response.invoice_data).to.have.property('id');",
                    "    pm.expect(response.invoice_data.id).to.equal(pm.collectionVariables.get('invoice_id'));",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "id": "0573e7b6-2479-42ca-8ade-354ea1851083",
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "type": "string",
                      "value": "{{access_token}}"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices/{{invoice_id}}",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices",
                  "{{invoice_id}}"
                ]
              }
            },
            "response": [],
            "uid": "10462328-0573e7b6-2479-42ca-8ade-354ea1851083"
          },
          {
            "name": "Create invoice (re-usable)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c07165e8-1fc5-4149-a9cc-1c56675d3cb6",
                  "exec": [
                    "",
                    "var today = new Date();",
                    "var tomorrow = new Date(today);",
                    "tomorrow.setDate(tomorrow.getDate() + 2);",
                    "pm.collectionVariables.set('invoice_end_date', tomorrow.toISOString().split('.')[0]+ 'Z');"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad38ca0d-8c08-4798-b2d5-5d6e28d72e48",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    pm.expect(response).to.have.property('invoice_url');",
                    "});",
                    "pm.collectionVariables.set('invoice_id_reuse', pm.response.json().invoice_data.id);"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              }
            ],
            "id": "6f585c16-9349-4ec9-beff-e993a2c9fe5a",
            "protocolProfileBehavior": {
              "followAuthorizationHeader": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "type": "text"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"invoice_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"expire_at\": \"{{invoice_end_date}}\",\n        \"reusable\": true,\n        \"reuse_count\": \"5\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"items\": [\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"10\",\n                \"count\": 1\n            },\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"2.34\",\n                \"count\": 1\n            }\n        ]\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"payment_methods\": [\n        \"BANKCARD\"\n    ]\n}"
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices"
                ]
              },
              "description": "*   Merchant makes POST request in JSON format to endpoint **/api/invoice** to create a new invoice\n*   Merchant receives a response with invoice URL, merchant can provide URL via email, any messenger, sms or other way to a cardholder for payment.\n*   Merchant makes GET request in JSON format to endpoint (/api/invoices/{invoice_id}) for getting information about invoice by invoice id\n*   Merchant receives GET response about invoice result information"
            },
            "response": [],
            "uid": "10462328-6f585c16-9349-4ec9-beff-e993a2c9fe5a"
          },
          {
            "name": "Get invoice by invoice id (re-usable)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f30e1ea-8670-4817-b4da-8e4aa9c7d54a",
                  "exec": [
                    "pm.expect(pm.collectionVariables.get('invoice_id')).to.not.be.undefined;",
                    "",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04b2a808-aa5b-46a0-bba9-b632938bdfd8",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "",
                    "    var response = pm.response.json();",
                    "",
                    "    pm.expect(response).to.have.property('invoice_data');",
                    "    pm.expect(response.invoice_data).to.have.property('id');",
                    "    pm.expect(response.invoice_data.id).to.equal(pm.collectionVariables.get('invoice_id_reuse'));",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              }
            ],
            "id": "c3f9f151-d6b9-4388-8741-763788a66d4e",
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "type": "string",
                      "value": "{{access_token}}"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices/{{invoice_id_reuse}}",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices",
                  "{{invoice_id_reuse}}"
                ]
              }
            },
            "response": [],
            "uid": "10462328-c3f9f151-d6b9-4388-8741-763788a66d4e"
          }
        ],
        "id": "1f54d238-1bee-437a-b9c6-6e1462b63d04",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "0a62195c-1c47-4ee1-b650-7488f6022a40"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "b5b40044-c877-490e-853e-edc541ab13b6"
            }
          }
        ],
        "uid": "10462328-1f54d238-1bee-437a-b9c6-6e1462b63d04"
      },
      {
        "name": "Payment authentication",
        "item": [
          {
            "name": "Server-to-server mode",
            "item": [
              {
                "name": "Frictionless flow",
                "item": [
                  {
                    "name": "Create authentication with 3-D secure (frictionless flow)",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb41ef1-729c-4586-93c0-f3f8b4c8a015",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6634c58c-32e0-4e13-8b74-626f310499de",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('authentication_data');",
                            "    pm.expect(response.authentication_data).to.have.property('id');",
                            "  ",
                            "    postman.setNextRequest('Create authentication with 3-D secure (challenge flow)');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "8e4a818e-a284-4b90-ba38-a434e94015d6",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_FRICTIONLESS_CONFIRMED}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_PA\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "authentication"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-8e4a818e-a284-4b90-ba38-a434e94015d6"
                  }
                ],
                "id": "9625bec4-3b26-448e-8d15-73c062606e1c",
                "uid": "10462328-9625bec4-3b26-448e-8d15-73c062606e1c"
              },
              {
                "name": "Challenge flow",
                "item": [
                  {
                    "name": "Create authentication with 3-D secure (challenge flow)",
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2603fce5-9daa-4ec0-9422-fa16538abe1b",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('CReq');",
                            "    pm.expect(response).to.have.property('id');",
                            "",
                            "    pm.collectionVariables.set('creq', response.CReq);",
                            "    pm.collectionVariables.set('auth_id_to_complete_3ds', response.id);",
                            "",
                            "    pm.execution.setNextRequest('Send CReq to ACS for authentication');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3bfd00-9ccb-4c22-88aa-353d2f8a65c3",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "488fc7b9-7366-4411-92d6-74b28a9c75d6",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_PA\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "authentication"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-488fc7b9-7366-4411-92d6-74b28a9c75d6"
                  },
                  {
                    "name": "Send CReq to ACS for authentication",
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f3d9c6-11dc-41da-9e36-9e8afcdacd34",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    ",
                            "    pm.execution.setNextRequest('Complete authentication with CRes');",
                            "})"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "0bc73ae9-21f2-4a64-aade-e7fd342219c6",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "method": "POST",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/sandbox-emulator/3ds2/browserCReqS2S?creq={{creq}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "sandbox-emulator",
                          "3ds2",
                          "browserCReqS2S"
                        ],
                        "query": [
                          {
                            "key": "creq",
                            "value": "{{creq}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-0bc73ae9-21f2-4a64-aade-e7fd342219c6"
                  },
                  {
                    "name": "Complete authentication with CRes",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c319631-48ce-42d5-a6cf-eb1cee2f0ed1",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cd3c7c-2cef-446e-877d-65af8ceebdfc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    try {",
                            "        pm.response.to.be.ok;",
                            "        pm.response.to.have.jsonBody();",
                            "        ",
                            "        var response = pm.response.json();",
                            "        console.log(response);",
                            "        pm.expect(response).to.have.property('authentication_data');",
                            "        pm.expect(response.authentication_data).to.have.property('id'); ",
                            "    } catch(err) {",
                            "",
                            "    }",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "8fd7795d-3053-4d4f-87aa-7165d96f4e57",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"CONFIRM_3DS\",\n    \"CRes\": \"{{creq}}\"\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{auth_id_to_complete_3ds}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "authentication",
                          "{{auth_id_to_complete_3ds}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-8fd7795d-3053-4d4f-87aa-7165d96f4e57"
                  }
                ],
                "id": "a7956c1c-3d48-4422-910b-6b4aedce8bac",
                "uid": "10462328-a7956c1c-3d48-4422-910b-6b4aedce8bac"
              }
            ],
            "id": "211d29d9-56aa-4abd-bbaf-0311372f7392",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca107f4e-de01-4390-a0d4-1a2f8ab019cc",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                    "var password = pm.environment.get('S2S_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8215f496-47ca-4a36-96c5-b06f09099fd5",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "uid": "10462328-211d29d9-56aa-4abd-bbaf-0311372f7392"
          },
          {
            "name": "Gateway mode",
            "item": [
              {
                "name": "Create 3-D Secure payment authentication (gateway mode)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2603fce5-9daa-4ec0-9422-fa16538abe1b",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_authentication_id', response.authentication_data.id);",
                        "",
                        "",
                        "",
                        "    postman.setNextRequest('Create AVS authentication (gateway mode)');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "2305c58c-5db7-493b-b9b2-1a35f47b1649",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{$randomEmail}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_PA\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-2305c58c-5db7-493b-b9b2-1a35f47b1649"
              },
              {
                "name": "Create AVS authentication (gateway mode)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2603fce5-9daa-4ec0-9422-fa16538abe1b",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('avs_authentication_id', response.authentication_data.id);",
                        "",
                        "    postman.setNextRequest('Create 3-D Secure non-payment authentication (gateway mode)');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "41f3a0d1-d5a7-4e6e-8605-7232ac0ce620",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        },\n        \"billing_address\": {\n            \"addr_line_1\": \"221b, Baker Street\",\n            \"addr_line_2\": \"\",\n            \"city\": \"London\",\n            \"country\": \"GB\",\n            \"state\": \"\",\n            \"zip\": \"NW1 6XE1\"\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{$randomEmail}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"AVS\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-41f3a0d1-d5a7-4e6e-8605-7232ac0ce620"
              },
              {
                "name": "Create 3-D Secure non-payment authentication (gateway mode)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95ee2f98-087e-410f-ae0e-4683a9255f76",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('non_payment_authentication_id', response.authentication_data.id);",
                        "",
                        "   ",
                        "",
                        "    postman.setNextRequest('Get 3-D Secure payment authentication');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "cd9cd710-434f-4503-b5c0-3fadde650ed8",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{$randomEmail}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_NPA\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"payment_method\": \"BANKCARD\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-cd9cd710-434f-4503-b5c0-3fadde650ed8"
              },
              {
                "name": "Get 3-D Secure payment authentication",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07ec6fc7-becb-4070-8797-96e72aefc202",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('authentication_data');",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "",
                        "",
                        "    postman.setNextRequest('Get AVS authentication');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "b5882fb3-fc2d-4091-b946-e67424622f62",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{payment_authentication_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication",
                      "{{payment_authentication_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-b5882fb3-fc2d-4091-b946-e67424622f62"
              },
              {
                "name": "Get AVS authentication",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07ec6fc7-becb-4070-8797-96e72aefc202",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('authentication_data');",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "  ",
                        "    postman.setNextRequest('Get 3-D Secure non-payment authentication');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "0f4e93a6-6cc4-4490-9ff6-f130ee52c490",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{avs_authentication_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication",
                      "{{avs_authentication_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-0f4e93a6-6cc4-4490-9ff6-f130ee52c490"
              },
              {
                "name": "Get 3-D Secure non-payment authentication",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b37e8a10-c92c-4e8c-a0d5-61289f39a843",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('authentication_data');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebd8a791-f2c1-4e4a-a5fd-4241f611c91a",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "27b57137-8c01-4443-9855-99d7544ad7ba",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{non_payment_authentication_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication",
                      "{{non_payment_authentication_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-27b57137-8c01-4443-9855-99d7544ad7ba"
              }
            ],
            "id": "92307e3b-3248-4a54-a2b8-a0fe80bd4e83",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c72d533-42fb-4997-a482-e885e87c11f6",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c24d077-f26b-4ddb-a2fd-4f1548048b8a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "uid": "10462328-92307e3b-3248-4a54-a2b8-a0fe80bd4e83"
          }
        ],
        "id": "6075afd6-c8d1-4578-8433-568fc87868c5",
        "description": "The authentication service implements three types of authentication to cater to different security needs:\n\n- **3-D Secure Payment Authentication (3DS PA)** - This adds an extra layer of security for online card transactions.\n    \n- **3-D Secure Non-Payment Authentication (3DS NPA)** - This is used for securing non-payment activities that require customer authentication. This method ensures that any sensitive action, such as updating account information, accessing secure areas of a website, or changing customer settings, is performed by the authorized user.\n    \n- **Address Verification System (AVS)** - This system verifies the address provided by the customer during the payment process. It matches the billing address submitted with the address on file at the issuing bank. This helps in detecting and preventing fraudulent transactions.\n    \n\n3DS PA and 3DS NPA are available in Payment page, Gateway, Server-to-server modes. AVS is available in Payment page, Gateway modes",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e76e8db-a4fc-43d0-8fc9-2b5d3a3661f7",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());"
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bf45b25-f79f-4a80-9639-a987d5aceb16",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ]
            }
          }
        ],
        "uid": "10462328-6075afd6-c8d1-4578-8433-568fc87868c5"
      },
      {
        "name": "Account details (APMs)",
        "item": [
          {
            "name": "Get Account details Pix",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "99083080-ba25-4c7f-a1a8-6b56775ac753"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "cdf4505e-e09d-4ab8-ba66-910d7c3f335e"
                }
              }
            ],
            "id": "110a117e-271f-4f36-9ba1-e1d9675712ba",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"customer_identity\": \"03281811370\"\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/pix",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "pix"
                ]
              }
            },
            "response": [],
            "uid": "10462328-110a117e-271f-4f36-9ba1-e1d9675712ba"
          },
          {
            "name": "Get Account details Dimo",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "f692218c-da4b-40a3-8a92-44dd576e87cd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('customer');",
                    "        pm.expect(response.customer).to.have.property('clabe');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "a46bede2-c91d-46bf-919c-03a0e4c048aa"
                }
              }
            ],
            "id": "f06bd271-215a-476a-a16c-546895e4d62e",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"type\": \"phoneNumber\",\n            \"value\": \"998121214\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/dimo",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "dimo"
                ]
              }
            },
            "response": [],
            "uid": "10462328-f06bd271-215a-476a-a16c-546895e4d62e"
          }
        ],
        "id": "a553ed17-fa24-464a-84cf-17629336ff11",
        "uid": "10462328-a553ed17-fa24-464a-84cf-17629336ff11"
      },
      {
        "name": "Get banks (APMs)",
        "item": [
          {
            "name": "Banks list. PSE. COP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d344198-5748-4ad9-80a1-fd88dede47bf",
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0b0f17e9-0fb4-457a-8d84-06f9fed49fae",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              }
            ],
            "id": "1c64dbf4-4a93-4d58-83cc-a0bde5f596a0",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/pse/cop",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "pse",
                  "cop"
                ]
              }
            },
            "response": [],
            "uid": "10462328-1c64dbf4-4a93-4d58-83cc-a0bde5f596a0"
          },
          {
            "name": "Banks list. Bank transfer Colombia. COP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "f296359b-ab0b-40d5-b437-ee30efa72a0a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "ebe85878-dba7-4a63-a35f-1addf1eff3dc"
                }
              }
            ],
            "id": "0916354b-7fea-4102-a8a0-a09872f2170e",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/BANKTRANSFERSCOP/cop",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "BANKTRANSFERSCOP",
                  "cop"
                ]
              }
            },
            "response": [],
            "uid": "10462328-0916354b-7fea-4102-a8a0-a09872f2170e"
          }
        ],
        "id": "6904f635-4977-47a0-8378-05497dccfe3a",
        "uid": "10462328-6904f635-4977-47a0-8378-05497dccfe3a"
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "a293d798-10c5-41cb-ba5c-9fb097bd5adb",
          "type": "text/javascript",
          "exec": [
            "var moment = require('moment');",
            "",
            "pm.variables.set('request_name', pm.info.requestName);",
            "pm.variables.set('expiration', moment().add(1, 'year').format('MM/YYYY'));",
            "pm.variables.set('customer_id', \"{{$randomUserName}}\");",
            "",
            "pm.collectionVariables.set('tokens', '(' + function () {",
            "    return {",
            "        obtain: function (terminal_code, password) {",
            "            var unlimit_api_url = pm.environment.get('UNLIMIT_API_URL');",
            "",
            "            pm.sendRequest({",
            "                url: `${unlimit_api_url}/api/auth/token`,",
            "                method: 'POST',",
            "                header: 'Content-Type:application/x-www-form-urlencoded',",
            "                body: {",
            "                    mode: 'raw',",
            "                    raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`",
            "                }",
            "",
            "            }, (err, res) => {",
            "                if (err || res.code !== 200) {",
            "                    throw new Error('Authentication Error');",
            "                }",
            "",
            "                var response = res.json();",
            "                pm.variables.set('access_token', response.access_token);",
            "            });",
            "        }",
            "    }",
            "} + ')();');"
          ]
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "692eb3f9-3fea-4364-aea2-f8adfe4d92f3",
          "type": "text/javascript",
          "exec": [
            ""
          ]
        }
      }
    ]
  }
}
