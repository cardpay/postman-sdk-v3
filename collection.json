{
  "collection": {
    "info": {
      "_postman_id": "9dacc77f-6ab0-4094-82b5-d6b2db8b4045",
      "name": "Unlimit REST API (3.0)",
      "description": "## Installation\n\n1. Install Postman 8.5+\n2. Download and import [collection file](https://raw.githubusercontent.com/cardpay/postman-sdk-v3/master/collection.json)\n3. Download and import [environment file](https://raw.githubusercontent.com/cardpay/postman-sdk-v3/master/sandbox.json)\n    \n\n## API usage\n\nExecute any section from Postman collection  \nFor more information about API v3 please visit [documentation web-site](https://integration.unlimit.com).\n\n## Notes\n\n- constants ('UNLIMIT_API_URL', 'PAYMENTPAGE_TERMINAL_CODE' and so on) are [Postman environment variables](https://learning.postman.com/docs/postman/variables-and-environments/variables/), defined for 'sandbox' environment.\n- following variables are defined for collection scope _(click 'Edit' button on 'unlimit-api' collection and see 'Pre-request Script' section)_:\n    - request_name — name of the test that is being executed, using for 'merchant_order.description' field value, in request's 'Body' section\n    - expiration — customer's card expiration date, using for 'card_account.card.expiration' field value, in gateway request 'Body' section. Format: mm/yyyy\n    - tokens — variable with 'obtain' function which is calling in order to get API authorization tokens\n- other variables ('', '', etc) are defined in 'Pre-request Script' and 'Tests' sections for particular request.",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2025-09-19T11:26:01.000Z",
      "createdAt": "2020-02-20T08:17:14.000Z",
      "lastUpdatedBy": "10462328",
      "uid": "10462328-9dacc77f-6ab0-4094-82b5-d6b2db8b4045"
    },
    "item": [
      {
        "name": "Authorization",
        "item": [
          {
            "name": "Get authorization tokens",
            "item": [
              {
                "name": "Get authorization token",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cda8100-43d1-41d1-b96d-9e4c21f27d33",
                      "exec": [
                        "pm.test(\"Successful response\", function () {",
                        "    pm.response.to.have.status(200);",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('access_token');",
                        "    pm.expect(response).to.have.property('refresh_token');",
                        "    pm.expect(response).to.have.property('expires_in');",
                        "    pm.expect(response).to.have.property('refresh_expires_in');",
                        "",
                        "    pm.variables.set('access_token', response.access_token);",
                        "    pm.variables.set('refresh_token', response.refresh_token);",
                        "});",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "216904b4-7bcb-4ccb-bc6c-b38c29e33d71",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/x-www-form-urlencoded"
                    }
                  ],
                  "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                      {
                        "key": "grant_type",
                        "value": "password",
                        "type": "text"
                      },
                      {
                        "key": "terminal_code",
                        "value": "{{PAYMENTPAGE_TERMINAL_CODE}}",
                        "type": "text"
                      },
                      {
                        "key": "password",
                        "value": "{{PAYMENTPAGE_PASSWORD}}",
                        "type": "text"
                      }
                    ]
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/auth/token",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "auth",
                      "token"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-216904b4-7bcb-4ccb-bc6c-b38c29e33d71"
              }
            ],
            "id": "f86c2b90-083b-4486-9174-b8094b1d50b1",
            "description": "## Get authorization tokens for every transaction request\n\n- In order to perform any API call the access token must be obtained.\n- To do this Merchant needs to send POST request to the API token endpoint.\n- As a result Merchant will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values.\n- After receiving access token (one from the pair) merchant should use in one create, update or get transaction information request\n- Merchant can receiving new pair of tokens (access and refresh tokens) for every transaction request and don't use refresh token for tokens pair refreshing\n    \n\n## Get authorization tokens for more than one request\n\n- After receiving access token merchant can save access and refresh tokens in his site\n- Merchant can use this pair of tokens for more than one transaction request\n- After lifetime of access token is ended, merchant can use refresh token for refreshing (getting new pair) tokens (see more in Refresh token case below)\n- If a lifetime of refresh token is ended merchant should send new request to the API token endpoint to get new pair of tokens\n- As a result Merchant will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "f324607e-3afb-4075-8447-ca4021350953"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "58fed0ea-0275-47eb-a1fe-e84cbc779258"
                }
              }
            ],
            "uid": "10462328-f86c2b90-083b-4486-9174-b8094b1d50b1"
          },
          {
            "name": "Refresh token",
            "item": [
              {
                "name": "Refresh authorization token",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2625fb80-ac36-4624-9ce0-6bfaa757648b",
                      "exec": [
                        "pm.test(\"Successful response\", function () {",
                        "    pm.response.to.have.status(200);",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('access_token');",
                        "    pm.expect(response).to.have.property('refresh_token');",
                        "    pm.expect(response).to.have.property('expires_in');",
                        "    pm.expect(response).to.have.property('refresh_expires_in');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "117285cb-0575-469b-9b63-e76be50b4afa",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/x-www-form-urlencoded"
                    }
                  ],
                  "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                      {
                        "key": "grant_type",
                        "value": "refresh_token",
                        "type": "text"
                      },
                      {
                        "key": "refresh_token",
                        "value": "{{refresh_token}}",
                        "type": "text"
                      }
                    ]
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/auth/token",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "auth",
                      "token"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-117285cb-0575-469b-9b63-e76be50b4afa"
              }
            ],
            "id": "a43703a7-a9ef-4d94-962f-89c6435b1b4d",
            "description": "- Merchant can send a POST request to the **/api/auth/token** endpoint and specify refresh token as a request param.\n- A result of this request will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values\n- If a lifetime of refresh token is ended merchant should send new request to the API token endpoint to get new pair of tokens (see 'Get authorization token' use case)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "8a2b1fea-5c16-4acb-b51d-25c231eb6d1a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "6ef2ab5d-eda3-45b6-8c3f-fba88ecac078"
                }
              }
            ],
            "uid": "10462328-a43703a7-a9ef-4d94-962f-89c6435b1b4d"
          },
          {
            "name": "Get authorization tokens for more than one request",
            "item": [
              {
                "name": "Create pre-authorized payment (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f16b6361-598a-49d0-bccd-d6ca5bee84b9",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        "pm.variables.set('request_time', new Date());",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fe0407a-8496-49ad-b697-306cf1a92c78",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_id_to_complete', response.payment_data.id);",
                        "",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "",
                        "    postman.setNextRequest('Get payment by payment id (reusable tokens)');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "a47a7f97-4bec-4821-a050-901b170ffb22",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-a47a7f97-4bec-4821-a050-901b170ffb22"
              },
              {
                "name": "Get payment by payment id (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcb91f53-a0ae-4c45-8000-d8c53e62a8a1",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd5a0777-fe7d-4795-b467-739b95bfac3d",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.expect(response.payment_data.id).to.equal(pm.collectionVariables.get('payment_id_to_complete'));",
                        "    ",
                        "    postman.setNextRequest('Complete pre-authorized payment (reusable tokens)');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "f833ddfb-dd26-4aea-be26-3700502c0073",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-f833ddfb-dd26-4aea-be26-3700502c0073"
              },
              {
                "name": "Complete pre-authorized payment (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55f0d1dd-0f0f-4435-83f4-2a4411849b66",
                      "exec": [
                        "pm.expect(pm.variables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "pm.variables.set(\"request_time\", new Date());",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c40004c7-d1a4-421b-876c-3e7279dbbe55",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok",
                        "    pm.response.to.have.jsonBody()",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('COMPLETED');",
                        "    ",
                        "    postman.setNextRequest('Get payment by payment id again (reusable tokens)');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "8f18694d-712a-4a42-88af-5e2048bb29f3",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-8f18694d-712a-4a42-88af-5e2048bb29f3"
              },
              {
                "name": "Get payment by payment id again (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9d4c1cb-856a-4723-90c4-bf0890152599",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e425d46c-4193-46ff-b455-1603e51f934a",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.expect(response.payment_data.id).to.equal(pm.variables.get('payment_id_to_complete'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "6d0348b4-03ab-4b59-b43a-659ba72c51fc",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-6d0348b4-03ab-4b59-b43a-659ba72c51fc"
              }
            ],
            "id": "cd504d36-1a4c-4617-a8f7-0b2e3a042795",
            "description": "- After receiving access token merchant can save access and refresh tokens on his side\n- Merchant can use this pair of tokens for more than one transaction request\n- After lifetime of access token is ended, merchant can use refresh token for refreshing (getting new pair) tokens (see more in Refresh token case below)\n- If a lifetime of refresh token is ended merchant should send new request to the API token endpoint to get new pair of tokens\n- As a result Merchant will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values\n- See 'Pre-request Scripts' section for 'reusable_tokens' function",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe8529f3-49a2-4af2-9ae7-c95df310dc04",
                  "type": "text/javascript",
                  "exec": [
                    "pm.collectionVariables.set('reusable_tokens', '(' + function () {",
                    "    return {",
                    "        obtain: function (terminal_code, password) {",
                    "            var moment = require('moment');",
                    "            var TOKEN_MIN_VALIDITY = 100;",
                    "            var unlimit_api_url = pm.environment.get('UNLIMIT_API_URL');",
                    "",
                    "            function unsetVar(name) {",
                    "                pm.collectionVariables.unset(`${name}_${terminal_code}`);",
                    "            }",
                    "",
                    "            function setVar(name, value) {",
                    "                pm.collectionVariables.set(`${name}_${terminal_code}`, value);",
                    "            }",
                    "",
                    "            function getVar(name, defValue) {",
                    "                return pm.collectionVariables.get(`${name}_${terminal_code}`) || defValue;",
                    "            }",
                    "",
                    "            var now = moment().unix();",
                    "            var expires_in = getVar('expires_in', 0);",
                    "            var refresh_expires_in = getVar('refresh_expires_in', 0);",
                    "",
                    "            if (expires_in - now >= TOKEN_MIN_VALIDITY && getVar('access_token')) {",
                    "                setVar('access_token', getVar('access_token'));",
                    "",
                    "            } else {",
                    "                var refresh_token = getVar('refresh_token');",
                    "                var request_body = `grant_type=refresh_token&refresh_token=${refresh_token}`;",
                    "",
                    "                if (refresh_expires_in - now < TOKEN_MIN_VALIDITY || !refresh_token) {",
                    "                    request_body = `grant_type=password&terminal_code=${terminal_code}&password=${password}`;",
                    "                }",
                    "",
                    "                unsetVar('access_token');",
                    "                unsetVar('refresh_token');",
                    "                unsetVar('expires_in');",
                    "                unsetVar('refresh_expires_in');",
                    "",
                    "                pm.sendRequest({",
                    "                    url: `${unlimit_api_url}/api/auth/token`,",
                    "                    method: 'POST',",
                    "                    header: 'Content-Type:application/x-www-form-urlencoded',",
                    "                    body: {",
                    "                        mode: 'raw',",
                    "                        raw: request_body",
                    "                    }",
                    "",
                    "                }, (err, res) => {",
                    "                    if (err || res.code !== 200) {",
                    "                        throw new Error('Authentication Error');",
                    "                    }",
                    "",
                    "                    var response = res.json();",
                    "                    setVar('access_token', response.access_token);",
                    "                    setVar('refresh_token', response.refresh_token);",
                    "                    setVar('expires_in', response.expires_in + moment().unix());",
                    "                    setVar('refresh_expires_in', response.refresh_expires_in + moment().unix());",
                    "                });",
                    "            }",
                    "        }",
                    "    }",
                    "} + ')();');"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b69c1c6-4ce0-4ce6-b348-2cc4dea21527",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "uid": "10462328-cd504d36-1a4c-4617-a8f7-0b2e3a042795"
          },
          {
            "name": "Authorization through signature",
            "item": [
              {
                "name": "Create payment through signature",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f16b6361-598a-49d0-bccd-d6ca5bee84b9",
                      "exec": [
                        "pm.collectionVariables.set('guid', pm.variables.replaceIn('{{$guid}}'));",
                        "pm.collectionVariables.set('time', new Date().toISOString());",
                        "",
                        "let uuid = require('uuid');",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);",
                        "",
                        "let api_client_id = pm.variables.get('SIGNATURE_API_CLIENT_ID');",
                        "let api_key = pm.variables.get('SIGNATURE_API_KEY');",
                        "let path = '/' + pm.request.url.path.slice(0).join('/');",
                        "let body = pm.collectionVariables.replaceIn(pm.variables.replaceIn(pm.request.body));",
                        "let xsign = '' + require(\"crypto-js\").SHA256((api_client_id + path + body + '' + api_key));",
                        "pm.collectionVariables.set('signature_x_sign', xsign);",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fe0407a-8496-49ad-b697-306cf1a92c78",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        " ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "db440bed-20cb-4c67-a029-813d1c1dbc5d",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "noauth"
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Authorization",
                      "value": "Signature {{GATEWAY_TERMINAL_CODE}},{{$guid}},{{SIGNATURE_API_CLIENT_ID}},{{signature_x_sign}}"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{guid}}\",\n        \"time\": \"{{time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"User-friendly empowering standardization\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{CUSTOMER_PHONE}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{HOLDER}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-db440bed-20cb-4c67-a029-813d1c1dbc5d"
              }
            ],
            "id": "625a9992-f187-45f2-8e29-2a210241876b",
            "description": "In order to perform any API call, merchant can use authorization through signature. API client ID and API key allows to get access to all the merchants’ wallets available in the merchant group.  \nIn order to use this type of authorization, the merchant should contact Unlimit manager.",
            "uid": "10462328-625a9992-f187-45f2-8e29-2a210241876b"
          }
        ],
        "id": "3da51624-aea8-4449-bf9b-1980aabe59e2",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "5f9f66f1-361c-4202-a729-71816a4f939a"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "e9c84fed-52da-4dee-8b7d-697a16385e64"
            }
          }
        ],
        "uid": "10462328-3da51624-aea8-4449-bf9b-1980aabe59e2"
      },
      {
        "name": "Payments (cards)",
        "item": [
          {
            "name": "Create payment (payment page)",
            "item": [
              {
                "name": "Create payment (payment page)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bed6479d-a890-4ff6-8387-767713de4d17",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f324adde-9c89-4573-9bc6-32973b9b41b8",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "e19a4c47-64c1-471d-b79f-d57f255a1540",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-e19a4c47-64c1-471d-b79f-d57f255a1540"
              }
            ],
            "id": "58e60f19-bb1b-4579-ae3c-c4514ec510e5",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment, [see more](https://integration.unlimit.com/#createPayment).\n- Payment is created in the system and redirect URL is returned to Merchant in JSON format\n- Card data is filled in by customer on hosted payment page (asynchronous process - out of scope of Postman collection)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "b81bd6ee-49ba-492e-a636-afffcaa6d74a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "d56f1fcf-6a76-48ef-beaa-c4919729e773"
                }
              }
            ],
            "uid": "10462328-58e60f19-bb1b-4579-ae3c-c4514ec510e5"
          },
          {
            "name": "Create payment without 3-D Secure",
            "item": [
              {
                "name": "Create payment (without 3-D Secure, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "7a1952aa-fc9f-456d-bc16-39dd9c4573ad",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-7a1952aa-fc9f-456d-bc16-39dd9c4573ad"
              }
            ],
            "id": "a976dca0-3945-4638-ae7c-a3a1ea37afe5",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment, [see more](https://integration.unlimit.com/#createPayment).\n- Payment is created in the system and redirect URL is returned to Merchant in JSON format",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "36b91583-75e5-42c1-8591-f8e8ecb4a6f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "47fedb83-0b4f-4210-8cda-7b108ac5d55d"
                }
              }
            ],
            "uid": "10462328-a976dca0-3945-4638-ae7c-a3a1ea37afe5"
          },
          {
            "name": "Create payment with 3-D Secure 2",
            "item": [
              {
                "name": "Create payment (3-D Secure 2)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73505a4b-d55f-42d2-8dcf-d1f606d563b2",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "276a4dd0-d77c-498e-b8a3-08393a096c80",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok",
                        "    pm.response.to.have.jsonBody()",
                        "    ",
                        "    var response = pm.response.json()",
                        "    pm.expect(response).to.have.property('redirect_url')",
                        "})",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "1024360c-bdb1-4188-9b60-f06e8b42adb5",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"trans_type\": \"01\"\n    },\n    \"card_account\": {\n        \"acct_type\": \"01\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"+1 123456789\",\n        \"work_phone\": \"+1 987654321\",\n        \"home_phone\": \"+1 462526747\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-1024360c-bdb1-4188-9b60-f06e8b42adb5"
              }
            ],
            "id": "e98d537a-ecd7-4d34-b7f9-a51cc8a972fd",
            "description": "* Merchant makes POST request in JSON format (with list of special 3-D Secure 2 parameters in request) to endpoint **/api/payments** to create new payment \n* Payment is created in the system and redirect URL is returned to Merchant in JSON format\n* The results of 3-D Secure 2 verification depend on the card provided in request and can be received only after customer redirects to redirect URL and passes 3-D Secure (asynchronous process - out of scope of Postman collection)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "aa050c15-9b43-4dc5-92b6-52c273033238"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "32b0f395-1adb-40cb-9bfc-2394b363be9b"
                }
              }
            ],
            "uid": "10462328-e98d537a-ecd7-4d34-b7f9-a51cc8a972fd"
          },
          {
            "name": "Reverse payment (void)",
            "item": [
              {
                "name": "Create pre-authorized payment to reverse",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af18803d-0977-448d-ae73-3ab034b3388a",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee5b229e-3d38-4dcb-b5e1-736bdd9c7091",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    ",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_id_to_reverse', response.payment_data.id);",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    postman.setNextRequest('Reverse pre-authorized payment');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "a1a2adb1-7381-445b-b943-7e3ca6db5cb9",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-a1a2adb1-7381-445b-b943-7e3ca6db5cb9"
              },
              {
                "name": "Reverse pre-authorized payment",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff50a88d-1788-461a-940c-46d889a5a13c",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_reverse')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5aa9a46e-63a3-4479-a890-57fa3b872ca4",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    ",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('VOIDED');",
                        "})"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "17188031-7a37-4846-ad93-aff478811db4",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"REVERSE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_reverse}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_reverse}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-17188031-7a37-4846-ad93-aff478811db4"
              }
            ],
            "id": "4e586676-c021-4526-86fc-6565d5f078da",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment, [see more](https://integration.unlimit.com/#createPayment).\n- Merchant receives callback with transaction result information (with payment id)\n- Merchant makes PATCH request in JSON format with payment id and payment_data.status_to='REVERSE' to **/api/payments/{payment_id}** to reverse (void) payment, [see more](https://integration.unlimit.com/#updatePayment).",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "24b5d0c7-ddea-4ecb-88e4-a9e86df326d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "8850e862-fe7f-482d-bcad-efe437449ac0"
                }
              }
            ],
            "uid": "10462328-4e586676-c021-4526-86fc-6565d5f078da"
          },
          {
            "name": "Create pre-authorised payment",
            "item": [
              {
                "name": "Create pre-authorized payment",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "986d2ea7-3ca9-45d5-9f81-da8505ff383a",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.variables.set('merchant_order_id', merchant_order_id);",
                        "pm.variables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa27e67c-2ab1-4561-b73b-9e3009c8bb10",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_id_to_complete', response.payment_data.id);",
                        "",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "",
                        "    postman.setNextRequest('Complete pre-authorized payment');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "668ee06f-5c4e-4d61-bdf2-c3baadf66ddd",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-668ee06f-5c4e-4d61-bdf2-c3baadf66ddd"
              },
              {
                "name": "Complete pre-authorized payment",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19a4cc3a-2213-444f-9c96-d5927dcbfda1",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fed742e8-e696-446f-a316-f8c7c82be93c",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok",
                        "    pm.response.to.have.jsonBody()",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('COMPLETED');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "1dd02330-6a25-4599-97ca-fb9fb1cc38e2",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-1dd02330-6a25-4599-97ca-fb9fb1cc38e2"
              }
            ],
            "id": "ff4a1e82-b559-4b43-ab98-9e663c8e00f9",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment with parameter preauth='true', [see more](https://integration.unlimit.com/#createPayment)\n- Preauth authorization payment is created in the system and redirect URL is returned to Merchant in JSON format (payment page URL)\n- Merchant redirects Customer to the payment page with provided URL\n- Merchant can complete or reverse (void) preauthorized payment using PATCH request in JSON format with payment id and payment_data.status_to='REVERSE' or \"COMPLETE\" to **/api/payments/{payment_id}**\n- Merchant receives response with update payment result information (status='VOIDED' or 'COMPLETED')\n- If merchant doesn't send complete or reverse request ([see more](https://integration.unlimit.com/#updatePayment)) payment will be completed automatically in 7 calendar days\n- Amount in completion update request can be less or more than preauthorized amount in first request",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "a3811576-3586-4eea-bdf7-ff8dc2d04950"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "f8585be3-5148-46ab-8d90-ea7dd0c5c8c0"
                }
              }
            ],
            "uid": "10462328-ff4a1e82-b559-4b43-ab98-9e663c8e00f9"
          },
          {
            "name": "Create payment with card token",
            "item": [
              {
                "name": "Create payment with card tokenization",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b97773ed-15fa-4ce2-92fa-4b12a58e9a4f",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3574e484-9a0f-4074-8001-1c7df9f77b9f",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.collectionVariables.set('payment_id_for_card_token', response.payment_data.id);",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    postman.setNextRequest('Get payment by id for card token');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "8e819f5d-dad5-4c1a-b22f-f14f8e771e69",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"generate_token\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-8e819f5d-dad5-4c1a-b22f-f14f8e771e69"
              },
              {
                "name": "Get payment by id for card token",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8221207d-7606-45eb-ad14-1b49f40f4413",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_for_card_token')).to.not.be.undefined;",
                        "",
                        "postman.setNextRequest('Create payment with card token');"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7da8c7d3-d74e-4a29-b665-6a816f6802a5",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('card_account');",
                        "    pm.expect(response.card_account).to.have.property('token');",
                        "    pm.collectionVariables.set('card_token', response.card_account.token);",
                        "    ",
                        "    postman.setNextRequest('Create payment with card token');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "8ab3fab2-7a5b-4912-8114-cb541c5a2a43",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_for_card_token}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_for_card_token}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-8ab3fab2-7a5b-4912-8114-cb541c5a2a43"
              },
              {
                "name": "Create payment with card token",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51992566-c7f1-4d75-902d-609d31dca75e",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "pm.expect(pm.collectionVariables.get('card_token')).to.not.be.undefined;",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d45750db-bce3-4d0b-8222-34f6554545cc",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "   ",
                        "    postman.setNextRequest('Get payment by merchant order id');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "b204f565-9974-41a6-acae-6f72885701df",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"card_account\": {\n        \"token\": \"{{card_token}}\",\n        \"card\": {\n        \t\"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-b204f565-9974-41a6-acae-6f72885701df"
              }
            ],
            "id": "abf9f898-580d-4dec-864e-199381d79c2b",
            "description": "- Merchant makes POST request in JSON format (with payment_data.generate_token parameter in request) to endpoint **/api/payments** to create new payment with card tokenization\n- Payment is created in the system and redirect URL is returned to Merchant in JSON format (payment page URL)\n- Merchant redirects Customer to the payment page (Unlimit or Merchant site) with provided URL\n- After successful transaction merchant can use card token (from callback) in the next transactions",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "id": "e3e5429d-1eb3-4ded-acbd-f1f98e25593f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "38dbb10a-59d8-4530-ad80-97ef2b5e6681"
                }
              }
            ],
            "uid": "10462328-abf9f898-580d-4dec-864e-199381d79c2b"
          },
          {
            "name": "Get payments list",
            "item": [
              {
                "name": "Get payment by merchant order id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7f69ffa-a7f7-4de0-a13d-ba320a26453a",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67f2ccd1-29c7-4327-8c54-554074681bba",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('data');",
                        "    ",
                        "    pm.collectionVariables.set('last_payment_id', response.data[0].payment_data.id);",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "69426992-646b-428a-9538-cb94f4d597d4",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "merchant_order_id",
                        "value": "{{last_merchant_order_id}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-69426992-646b-428a-9538-cb94f4d597d4"
              },
              {
                "name": "Get payments information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "696fb910-5b14-410b-8e62-3733c9bc710a",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0e0f99b-05a0-4ec0-9119-ac66358ddecb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('data');",
                        "    pm.expect(response).to.have.property('has_more');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "d24f2268-6faf-4176-b3b1-88fad384e47b",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "max_count",
                        "value": "5"
                      },
                      {
                        "key": "currency",
                        "value": "{{TERMINAL_CURRENCY}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-d24f2268-6faf-4176-b3b1-88fad384e47b"
              }
            ],
            "id": "97b81426-3dd0-44e3-a38a-425426ee603e",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payments) to get information about payments list, [see more](https://integration.unlimit.com/#getPayments)\n- Merchant receives GET response about transactions (payments list)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "0fec225b-59f1-4996-8300-550f77699aa7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "3b16e2fe-40ea-4874-902d-b78e88fff4c2"
                }
              }
            ],
            "uid": "10462328-97b81426-3dd0-44e3-a38a-425426ee603e"
          },
          {
            "name": "Get payment by payment id",
            "item": [
              {
                "name": "Get payment by payment id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1edfea5-d0f5-4e78-9109-7aeda314c814",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_payment_id')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06268d37-0364-482d-8af3-7ee735d8ef62",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.expect(response.payment_data.id).to.equal(pm.collectionVariables.get('last_payment_id'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "bc296873-a616-492b-9d24-0775740b6892",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{last_payment_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{last_payment_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-bc296873-a616-492b-9d24-0775740b6892"
              }
            ],
            "id": "84435173-e77d-4d78-b6d6-69e51c06a1d8",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payments/{payment_id}) for getting information about payment by payment id, [see more](https://integration.unlimit.com/#getPayment)\n- Merchant receives GET response about transaction (payment) result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "d701a6db-9610-4c0a-9186-4d821e1d3b91"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "43db0711-9c92-4f51-8fb1-eb1fa5e5a0c8"
                }
              }
            ],
            "uid": "10462328-84435173-e77d-4d78-b6d6-69e51c06a1d8"
          },
          {
            "name": "Create installment payment (one-phase)",
            "item": [
              {
                "name": "Create issuer financed installment payment (one-phase)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58c7c3e5-0b6f-4706-bff2-d28a2ec4ca1a",
                      "exec": [
                        "pm.test(\"Successful request\", function () {\r",
                        "    pm.response.to.be.ok;\r",
                        "    pm.response.to.have.jsonBody();\r",
                        "    \r",
                        "    var response = pm.response.json();\r",
                        "    pm.expect(response).to.have.property('redirect_url');\r",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0cddd46-3e6c-4f1f-90e1-8162f04a24b0",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                        "\r",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "fb1d3720-0c28-44da-9fdb-ad6db9825e29",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"request\": {\r\n        \"id\": \"{{$guid}}\",\r\n        \"time\": \"{{request_time}}\"\r\n    },\r\n    \"merchant_order\": {\r\n        \"id\": \"{{$randomUUID}}\",\r\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\r\n    },\r\n    \"payment_method\": \"BANKCARD\",\r\n    \"payment_data\": {\r\n        \"amount\": \"12.34\",\r\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\r\n        \"installment_type\": \"IF\",\r\n        \"installments\": \"6\" \r\n    },\r\n    \"card_account\": {\r\n        \"card\": {\r\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\r\n            \"holder\": \"{{$randomFullName}}\",\r\n            \"expiration\": \"{{expiration}}\",\r\n            \"security_code\": \"100\"\r\n        }\r\n    },\r\n    \"customer\": {\r\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\r\n        \"id\": \"DfVg56Gvx\"\r\n    }\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-fb1d3720-0c28-44da-9fdb-ad6db9825e29"
              },
              {
                "name": "Create merchant financed installment payment (one-phase)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef421c77-bd01-4b8f-97ed-8ec7927325a2",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                        "\r",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc799e45-f58a-4c05-9b14-2a98b9bad17e",
                      "exec": [
                        "pm.test(\"Successful request\", function () {\r",
                        "    pm.response.to.be.ok;\r",
                        "    pm.response.to.have.jsonBody();\r",
                        "    \r",
                        "    var response = pm.response.json();\r",
                        "    pm.expect(response).to.have.property('redirect_url');\r",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "ea3daed1-cd46-46d3-a279-62b647ceed68",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"request\": {\r\n        \"id\": \"{{$guid}}\",\r\n        \"time\": \"{{request_time}}\"\r\n    },\r\n    \"merchant_order\": {\r\n        \"id\": \"{{$randomUUID}}\",\r\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\r\n    },\r\n    \"payment_method\": \"BANKCARD\",\r\n    \"payment_data\": {\r\n        \"amount\": \"12.34\",\r\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\r\n        \"installment_type\": \"MF_HOLD\",\r\n        \"installments\": \"6\" \r\n    },\r\n    \"card_account\": {\r\n        \"card\": {\r\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\r\n            \"holder\": \"{{$randomFullName}}\",\r\n            \"expiration\": \"{{expiration}}\",\r\n            \"security_code\": \"100\"\r\n        }\r\n    },\r\n    \"customer\": {\r\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\r\n        \"id\": \"DfVg56Gvx\"\r\n    }\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-ea3daed1-cd46-46d3-a279-62b647ceed68"
              }
            ],
            "id": "4011a210-b4a8-4369-87ca-8a96ff8df628",
            "description": "Merchant makes POST request in JSON format to endpoint **/api/payments** to create new Installment payment (one-phase), [see more](https://integration.unlimit.com/#createPayment).\n\n**How to create Installment payment:**\n\n- Make POST-request\n- Click on 3DS redirect URL from response message\n- Emulate successful 3DS validation\n    \n\nAfter successful 3DS validation payment will be completed",
            "uid": "10462328-4011a210-b4a8-4369-87ca-8a96ff8df628"
          },
          {
            "name": "Create installment payment (two-phase)",
            "item": [
              {
                "name": "Create merchant financed installment payment (two-phase)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f157e50-632d-4de7-b1ad-72be6d5c1868",
                      "exec": [
                        "var uuid = require('uuid');\r",
                        "\r",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');\r",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');\r",
                        "\r",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                        "tokens.obtain(terminal_code, password);\r",
                        "\r",
                        "var merchant_order_id = uuid.v4();\r",
                        "pm.variables.set('merchant_order_id', merchant_order_id);\r",
                        "pm.variables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5006bed-8b78-4ed6-aefe-e9310a372073",
                      "exec": [
                        "pm.test(\"Successful request\", function () {\r",
                        "    pm.response.to.be.ok;\r",
                        "    pm.response.to.have.jsonBody();\r",
                        "\r",
                        "    var response = pm.response.json();\r",
                        "    pm.expect(response).to.have.property('redirect_url');\r",
                        "    \r",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;\r",
                        "    pm.collectionVariables.set('payment_id_to_update', response.payment_data.id);\r",
                        "    \r",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {\r",
                        "        pm.expect(response_after_redirect.code).to.equal(200);\r",
                        "    });\r",
                        "    \r",
                        "    postman.setNextRequest('Update merchant financed installment payment (two-phase)');\r",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "40d6c66b-181b-4516-b065-3c94262253d1",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"request\": {\r\n        \"id\": \"{{$guid}}\",\r\n        \"time\": \"{{request_time}}\"\r\n    },\r\n    \"merchant_order\": {\r\n        \"id\": \"{{$randomUUID}}\",\r\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\r\n    },\r\n    \"payment_method\": \"BANKCARD\",\r\n    \"payment_data\": {\r\n        \"amount\": \"12.34\",\r\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\r\n        \"preauth\": true,\r\n        \"installment_type\": \"MF_HOLD\",\r\n        \"installments\": \"6\" \r\n    },\r\n    \"card_account\": {\r\n        \"card\": {\r\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\r\n            \"holder\": \"{{$randomFullName}}\",\r\n            \"expiration\": \"{{expiration}}\",\r\n            \"security_code\": \"100\"\r\n        }\r\n    },\r\n    \"customer\": {\r\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\r\n        \"id\": \"DfVg56Gvx\"\r\n    }\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-40d6c66b-181b-4516-b065-3c94262253d1"
              },
              {
                "name": "Update merchant financed installment payment (two-phase)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e4fc82a-77c4-4ab0-b1a8-4fd9107eb7d8",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_update')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faf06132-0f44-46d9-9a14-d653fccdb276",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    ",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('COMPLETED');",
                        "})"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "3cd82d25-6188-4545-85f3-d97d92e79ade",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_update}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_update}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-3cd82d25-6188-4545-85f3-d97d92e79ade"
              }
            ],
            "id": "5d4d4507-58d2-4ccc-a0bf-babb183b38e5",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new Installment payment (two-phase), [see more](https://integration.unlimit.com/#createPayment).\n    \n\n**How to create two-phase Installment payment:**\n\n- Make POST-request\n- Click on 3DS redirect URL from response message\n- Emulate successful 3DS validation\n- Make PATСH-request to update (complete) Installment payment\n    \n\n**Important:** in POST-request non-3DS card is used. These settings are relevant only for the test collection (due to Sandbox features) - real Installment payments can be created only for cards with 3DS enabled",
            "uid": "10462328-5d4d4507-58d2-4ccc-a0bf-babb183b38e5"
          },
          {
            "name": "Create payment in server-to-server mode",
            "item": [
              {
                "name": "Create payment with passing 3-D Secure independently",
                "item": [
                  {
                    "name": "Create payment with 3-D secure results",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d36774-35bf-4366-8380-1d9191161ba5",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI');",
                            "var password = pm.environment.get('S2S_PASSWORD_EXMPI');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);",
                            "",
                            "",
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7108ef8-3109-46b3-9eda-2ff4419dcc8c",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "354172de-22b2-42bb-88b0-59f73f583ff4",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    },\n    \"three_d_secure\": {\n        \"card_enrollment\": \"Y\",\n        \"cavv\": \"AAABABhVGHmHFVORcFUYEGddqYo=\",\n        \"status\": \"Y\",\n        \"three_d_secure_flow\": \"3DS2C\",\n        \"xid\": \"c7c3c5d3-77a9-4106-b677-8e91b2a052bd\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-354172de-22b2-42bb-88b0-59f73f583ff4"
                  },
                  {
                    "name": "Create payment without 3-D secure results",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daeb1068-d13f-4d6c-b7ca-b97df3875882",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI_NO3DS');",
                            "var password = pm.environment.get('S2S_PASSWORD_EXMPI_NO3DS');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);",
                            "",
                            "",
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72e6cb7-e2e5-4435-97b0-411f34a842a5",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "   ",
                            "    pm.expect(response).to.have.property('payment_data');",
                            "    pm.expect(response.payment_data).to.have.property('id');",
                            "    ",
                            "    pm.execution.setNextRequest('Create payment with 3-D secure (frictionless)');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "9b4c2695-3e50-487f-a3c1-a69b1d27548b",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-9b4c2695-3e50-487f-a3c1-a69b1d27548b"
                  }
                ],
                "id": "1adfbc65-bcbb-40db-903d-afec55e7d69f",
                "description": "In case where merchant passes 3-D Secure independently, result parameters of 3-D Secure should be collected by the merchant and sent in \"Create payment\" request with additional structure three_d_secure",
                "uid": "10462328-1adfbc65-bcbb-40db-903d-afec55e7d69f"
              },
              {
                "name": "Create payment with 3-D Secure (frictionless flow)",
                "item": [
                  {
                    "name": "Create payment with 3-D secure (frictionless)",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb41ef1-729c-4586-93c0-f3f8b4c8a015",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                            "var password = pm.environment.get('S2S_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6634c58c-32e0-4e13-8b74-626f310499de",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('payment_data');",
                            "    pm.expect(response.payment_data).to.have.property('id');",
                            "  ",
                            "    postman.setNextRequest('Create payment with 3-D secure (challenge)');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "d3cd1bdc-02c5-45c1-b3de-326da17822b9",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_FRICTIONLESS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    },\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-d3cd1bdc-02c5-45c1-b3de-326da17822b9"
                  }
                ],
                "id": "6fb2e786-cd37-4df0-b986-143f4df011cc",
                "description": "If card is 3-D Secure and authentication pass through Frictionless flow then merchant gets synchronous payment response in JSON format. In  \ncase of error JSON with error result will be returned.\n\n\"return_urls.return_url\" must be replaced with Merchant's webhook url",
                "uid": "10462328-6fb2e786-cd37-4df0-b986-143f4df011cc"
              },
              {
                "name": "Create payment with 3-D Secure (challenge flow)",
                "item": [
                  {
                    "name": "Create payment with 3-D secure (challenge)",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa87f03-1d4f-4b6b-98b5-8645ec343290",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                            "var password = pm.environment.get('S2S_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f103fef2-595e-4145-b652-c9add7d1f502",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('CReq');",
                            "    pm.expect(response).to.have.property('id');",
                            "    pm.collectionVariables.set('creq', response.CReq);",
                            "    pm.collectionVariables.set('payment_id_to_complete_3ds', response.id);",
                            "    postman.setNextRequest('Send CReq to ACS');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "d4e4d9df-04c7-4a8f-a7f9-16b0d0536672",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    },\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-d4e4d9df-04c7-4a8f-a7f9-16b0d0536672"
                  },
                  {
                    "name": "Send CReq to ACS",
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f3d9c6-11dc-41da-9e36-9e8afcdacd34",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    })",
                            "    postman.setNextRequest('Complete payment with CRes');"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "933fa4cd-6bfe-4cae-94d4-c2f8d526fb8c",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "method": "POST",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/sandbox-emulator/3ds2/browserCReqS2S?creq={{creq}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "sandbox-emulator",
                          "3ds2",
                          "browserCReqS2S"
                        ],
                        "query": [
                          {
                            "key": "creq",
                            "value": "{{creq}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-933fa4cd-6bfe-4cae-94d4-c2f8d526fb8c"
                  },
                  {
                    "name": "Complete payment with CRes",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c319631-48ce-42d5-a6cf-eb1cee2f0ed1",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                            "var password = pm.environment.get('S2S_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cd3c7c-2cef-446e-877d-65af8ceebdfc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();   ",
                            "    pm.expect(response).to.have.property('payment_data');",
                            "    pm.expect(response.payment_data).to.have.property('id'); ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "dbde63bd-3be6-40c1-8aa0-a3f250628525",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"CONFIRM_3DS\",\n    \"CRes\": \"eyJtZXNzYWdlVHlwZSI6IkNSZXEiLCJtZXNzYWdlVmVyc2lvbiI6IjIuMS4wIiwidGhyZWVEU1NlcnZlclRyYW5zSUQiOiJiM2UzZDY4Mi0zNWNkLTRjYjQtOTVmOS01Yjg2ZmVlYzg5YjciLCJhY3NUcmFuc0lEIjoiWTFMU1NhVVVoQzROWUVKMXBhM2h2aFRWeTZ1YlE4MXU1MDBQIiwiY2hhbGxlbmdlV2luZG93U2l6ZSI6IjA1In0=\"\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete_3ds}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments",
                          "{{payment_id_to_complete_3ds}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-dbde63bd-3be6-40c1-8aa0-a3f250628525"
                  }
                ],
                "id": "c3b9a60f-494f-4520-8e81-17f404b27f79",
                "description": "If card is 3-D Secure and authentication pass Challenge flow then merchant gets redirect_url, CReq and Id parameters in JSON  \nformat. In case of error JSON with error result will be returned.\n\n\"return_urls.return_url\" must be replaced with Merchant's webhook url",
                "uid": "10462328-c3b9a60f-494f-4520-8e81-17f404b27f79"
              }
            ],
            "id": "801d1423-ff47-4d57-938e-f0193ee00729",
            "description": "In Server-to-Server Mode the Customer interacts only with the Merchant's website and all interactions between Merchant and Unlimint are server-to-server. In this case the Merchant has to collect cardholder data on his website that must be PCI DSS certified for that and then send it as a POST request to the Unlimint Endpoint. In response to Merchant's request, Unlimint server sends URL the Customer should be redirected to if 3-D Secure is required or Result JSON response if 3-D Secure is not required.",
            "uid": "10462328-801d1423-ff47-4d57-938e-f0193ee00729"
          },
          {
            "name": "Create payments (by tokens)",
            "item": [
              {
                "name": "Create payment (ApplePay, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "7976d009-f8a1-46c7-a8e1-9ae0d6b98a04",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"APPLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-7976d009-f8a1-46c7-a8e1-9ae0d6b98a04"
              },
              {
                "name": "Create payment (ApplePay, s2s)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI_NO3DS');",
                        "var password = pm.environment.get('S2S_PASSWORD_EXMPI_NO3DS');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "2fdb1c4a-3561-428a-bd2a-d86948d411d7",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"APPLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-2fdb1c4a-3561-428a-bd2a-d86948d411d7"
              },
              {
                "name": "Create payment (GooglePay, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "7e5a15f2-dcdc-4fb9-8035-d82fda133f88",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"GOOGLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-7e5a15f2-dcdc-4fb9-8035-d82fda133f88"
              },
              {
                "name": "Create payment (GooglePay, s2s)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI_NO3DS');",
                        "var password = pm.environment.get('S2S_PASSWORD_EXMPI_NO3DS');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "82224134-8568-44f8-8561-717fe5f7da61",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"GOOGLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-82224134-8568-44f8-8561-717fe5f7da61"
              },
              {
                "name": "Create payment (GooglePay, pan only, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "a2afc693-5e98-4fa3-ad32-0b5d22a4e5db",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"GOOGLEPAY\",\n            \"pan\": \"{{DPAN_AUTH}}\",\n            \"expiration\": \"{{expiration}}\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-a2afc693-5e98-4fa3-ad32-0b5d22a4e5db"
              },
              {
                "name": "Create payment (Network token, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "c4e15909-a55b-43b2-aafc-9e6dc553b836",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"NETWORK\",\n            \"pan\": \"{{DPAN_AUTH}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iJKIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-c4e15909-a55b-43b2-aafc-9e6dc553b836"
              }
            ],
            "id": "caccb6cc-4902-41d9-97e7-4f0f8535b5f8",
            "description": "- This section presents examples of requests with decrypted data from Google Pay, Apple Pay, and Network Tokenization\n    \n- Supported modes: Gateway and server-to-server\n    \n- 3-D Secure can be called for requests with network token and for GooglePay PAN-only case",
            "uid": "10462328-caccb6cc-4902-41d9-97e7-4f0f8535b5f8"
          }
        ],
        "id": "cb952acc-0a49-4299-b770-b07f602f5d26",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "3cef093f-6da5-4789-ad9b-7b7e7e4ce333"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "b1f50e25-b697-4f18-bcfd-9de82eef721b"
            }
          }
        ],
        "uid": "10462328-cb952acc-0a49-4299-b770-b07f602f5d26"
      },
      {
        "name": "Payments (ACT/OFT)",
        "item": [
          {
            "name": "Create Account Funding Transaction",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "",
                    "    var response = pm.response.json();",
                    "    pm.expect(response).to.have.property('redirect_url');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              }
            ],
            "id": "4ef4aebf-1af6-404e-ab57-923199dfb1a6",
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "type": "string",
                      "value": "{{access_token}}"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "type": "text"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"full_name\": \"MR SENDER\",\n        \"birth_date\": \"2000-04-22\",\n        \"living_address\": {\n            \"country\": \"USA\",\n            \"state\": \"NE\",\n            \"city\": \"Dallas\",\n            \"address\": \"Black Road 112, 3\"\n        }\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"MR SENDRER\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        },\n        \"recipient_info\": \"MR RECIPIENT\"\n    }\n}"
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "payments"
                ]
              }
            },
            "response": [],
            "uid": "10462328-4ef4aebf-1af6-404e-ab57-923199dfb1a6"
          },
          {
            "name": "Create Original Credit Transaction",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e121e80-1189-44b3-b403-a64500548ab7",
                  "exec": [
                    "var uuid = require('uuid');",
                    "",
                    "var merchant_order_id = uuid.v4();",
                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1565a53-2dd4-4176-b464-fa049952b4e7",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.have.status(201);",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    pm.expect(response.payout_data).to.have.property('id');",
                    "    ",
                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                    "    ",
                    "    ",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              }
            ],
            "id": "76981098-0d0f-4552-a566-14954e1f5e96",
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "type": "string",
                      "value": "{{access_token}}"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "type": "text"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payout_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"funding_source\": \"02\",\n        \"network_trans_id\": \"305086217313972\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"expiration\": \"{{expiration}}\"\n        },\n        \"recipient_info\": \"MR RECIPIENT\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"full_name\": \"MR SENDER\",\n        \"birth_date\": \"2000-04-22\",\n        \"living_address\": {\n            \"country\": \"USA\",\n            \"state\": \"NE\",\n            \"city\": \"Dallas\",\n            \"address\": \"Black Road 112, 3\"\n        }\n    }\n}"
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "payouts"
                ]
              }
            },
            "response": [],
            "uid": "10462328-76981098-0d0f-4552-a566-14954e1f5e96"
          }
        ],
        "id": "07fe4960-a107-4a6a-bc59-60633314ee84",
        "description": "**AFTs (Account Funding Transactions)** are special types of card operations supported by Visa Direct and MasterСard MoneySend, where funds are pulled from a card without a traditional purchase being involved.\n\nThis is used when a Customer wants to move money from their card into another account, e.g. funding a digital wallet (PayPal), transferring funds to an investment or crypto account.\n\n**OCTs (Original Credit Transactions)** are special types of card operations supported by Visa Direct and MasterСard MoneySend, where funds are _pushed_ to a card.\n\nThis is used for disbursing funds to a customer’s card in real-time or near real-time, for example:\n\n- Salary or freelancer payouts\n    \n- Cashback, insurance, or loans\n    \n- Peer-to-peer (P2P) money transfers",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0898f20-6f8b-42b1-b7be-0074a80c8658",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ac73dde-83d3-481a-bf81-91414772b1b7",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ]
            }
          }
        ],
        "uid": "10462328-07fe4960-a107-4a6a-bc59-60633314ee84"
      },
      {
        "name": "Payments (APMs)",
        "item": [
          {
            "name": "Worldwide",
            "item": [
              {
                "name": "PayPal",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PayPal payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "701d2359-e4cb-4cc0-944b-7ae8c7353e45"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "08c65967-2b1b-418e-baa5-376c1f72decc"
                            }
                          }
                        ],
                        "id": "67aab0c7-4557-449c-999f-0deefe68cee6",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAYPAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-67aab0c7-4557-449c-999f-0deefe68cee6"
                      }
                    ],
                    "id": "a6954a1a-c89f-42aa-bf03-39493740b3b9",
                    "uid": "10462328-a6954a1a-c89f-42aa-bf03-39493740b3b9"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PayPal payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6e31a552-6c66-4b4a-a10a-955d59a58bbe"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7cce3272-add1-403c-8c27-2e07e8e11c6f"
                            }
                          }
                        ],
                        "id": "ed5b8e2a-183d-4060-8788-48a777b8365d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAYPAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ed5b8e2a-183d-4060-8788-48a777b8365d"
                      }
                    ],
                    "id": "c694a4b5-8f01-4fac-8eda-5ae34f52e1f5",
                    "uid": "10462328-c694a4b5-8f01-4fac-8eda-5ae34f52e1f5"
                  }
                ],
                "id": "425c0edb-6a30-4a8f-a073-ab35600dd2ba",
                "uid": "10462328-425c0edb-6a30-4a8f-a073-ab35600dd2ba"
              },
              {
                "name": "ALIPAYPLUS",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create ALIPAYPLUS payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1dbafa67-3ba6-4857-8b28-33316c442b32"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "dce98dd9-f484-4ec0-bdbc-7c56aa15f5f0"
                            }
                          }
                        ],
                        "id": "33e9c9f4-f5ba-426b-bf96-896ca3472a31",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALIPAYPLUS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-33e9c9f4-f5ba-426b-bf96-896ca3472a31"
                      }
                    ],
                    "id": "32cdec8b-6413-4809-97f3-d60b3e609d59",
                    "uid": "10462328-32cdec8b-6413-4809-97f3-d60b3e609d59"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create ALIPAYPLUS payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e1e455ed-8906-4fff-8731-ce700a250781"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "25c58c06-6d09-4357-befd-ac07aa6e13e1"
                            }
                          }
                        ],
                        "id": "471313c6-0d5d-4d41-bc85-924f14f9594e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALIPAYPLUS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-471313c6-0d5d-4d41-bc85-924f14f9594e"
                      }
                    ],
                    "id": "4f4b213a-8590-458a-9797-774f5a1fc9e5",
                    "uid": "10462328-4f4b213a-8590-458a-9797-774f5a1fc9e5"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create ALIPAYPLUS payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4f5b3c75-b813-4c85-bc47-9e062eb6b352"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f9212c54-0883-43fe-af2f-353803fe701d"
                            }
                          }
                        ],
                        "id": "0ab0a7c7-d984-4ac3-8d56-90e23d28208e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALIPAYPLUS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-0ab0a7c7-d984-4ac3-8d56-90e23d28208e"
                      }
                    ],
                    "id": "96417585-be57-4169-8d12-3fca3ed48971",
                    "uid": "10462328-96417585-be57-4169-8d12-3fca3ed48971"
                  }
                ],
                "id": "668ebed1-054f-4706-aabe-8917907daf64",
                "uid": "10462328-668ebed1-054f-4706-aabe-8917907daf64"
              }
            ],
            "id": "f2908c59-7013-4b12-aec6-cf7185480e09",
            "uid": "10462328-f2908c59-7013-4b12-aec6-cf7185480e09"
          },
          {
            "name": "Africa",
            "item": [
              {
                "name": "Direct Banking Nigeria",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create DIRECTBANKINGNGA payment (gateway)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "03ef64df-1ae5-448b-92ee-43edd2cc11a3"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1c5c75e3-a017-4c1c-967e-f171e158b4af"
                            }
                          }
                        ],
                        "id": "30e073bb-e12f-44eb-9076-b4c889326825",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGNGA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"bank_code\": \"057\",\n        \"id\": \"1111111111\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"1234567891\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"birth_date\": \"2010-10-10\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-30e073bb-e12f-44eb-9076-b4c889326825"
                      }
                    ],
                    "id": "818ccfc2-968d-4330-960c-25f648362937",
                    "uid": "10462328-818ccfc2-968d-4330-960c-25f648362937"
                  },
                  {
                    "name": "Payment Page mode",
                    "item": [
                      {
                        "name": "Create DIRECTBANKINGNGA payment (payment page mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f60a780a-df18-4b4a-9879-493e5ef27214"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1191b981-a6d6-4233-b5da-7c97db85ebb6"
                            }
                          }
                        ],
                        "id": "b07f3749-8636-4f4d-ab38-ca010c33b822",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGNGA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1780004070\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"1234567891\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b07f3749-8636-4f4d-ab38-ca010c33b822"
                      }
                    ],
                    "id": "bc1295f0-b80e-4998-99a6-d6c13c2ece82",
                    "uid": "10462328-bc1295f0-b80e-4998-99a6-d6c13c2ece82"
                  }
                ],
                "id": "e806adb4-22f1-4b43-98df-d613a9442d09",
                "uid": "10462328-e806adb4-22f1-4b43-98df-d613a9442d09"
              },
              {
                "name": "M-Pesa",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create MPESA payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b4a3f9e2-1248-48f4-8da5-e891e25dcbf7"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5dac461f-bfcb-484c-ac37-82a841f559ff"
                            }
                          }
                        ],
                        "id": "8e035c0a-ad6d-4d1b-987c-526a8258c48c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8e035c0a-ad6d-4d1b-987c-526a8258c48c"
                      }
                    ],
                    "id": "12b710fc-952b-48e3-afdd-e9c6828e11ec",
                    "uid": "10462328-12b710fc-952b-48e3-afdd-e9c6828e11ec"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create MPESA payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "115d2ee7-6330-4953-a389-8148c9455b5d"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8dddde6d-2b77-4e02-8be7-b904cff8244e"
                            }
                          }
                        ],
                        "id": "07d5147e-2f01-4fe5-aecc-ac4eec11839a",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-07d5147e-2f01-4fe5-aecc-ac4eec11839a"
                      }
                    ],
                    "id": "9203ab20-bcc7-478e-a735-6f47f9406e58",
                    "uid": "10462328-9203ab20-bcc7-478e-a735-6f47f9406e58"
                  }
                ],
                "id": "062be851-b0b5-4988-a49f-778c1d0f4240",
                "uid": "10462328-062be851-b0b5-4988-a49f-778c1d0f4240"
              },
              {
                "name": "M-Pesa Tanzania",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create M-Pesa Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a0436b8f-7b46-4729-a673-48fe83ad6e66"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ca6e8ab5-6be4-4ea5-8223-ae94ef6fa393"
                            }
                          }
                        ],
                        "id": "65539184-6fbe-413a-be82-5130587bb613",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MPESATZS\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"+255740123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{$randomEmail}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-65539184-6fbe-413a-be82-5130587bb613"
                      }
                    ],
                    "id": "d2c03996-4419-43ae-b9b4-c0465db86daa",
                    "uid": "10462328-d2c03996-4419-43ae-b9b4-c0465db86daa"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create M-Pesa Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9720d1fc-0f99-44f1-9374-c396b4dcd057"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "378a6988-5efa-4f6e-a38a-da9f31f3687d"
                            }
                          }
                        ],
                        "id": "66c728fa-4383-41c5-82c9-7f2cb4ad7ccf",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MPESATZS\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"TZS\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-66c728fa-4383-41c5-82c9-7f2cb4ad7ccf"
                      }
                    ],
                    "id": "da97af04-c53a-4cb6-b845-16659b3eade4",
                    "uid": "10462328-da97af04-c53a-4cb6-b845-16659b3eade4"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create M-Pesa Tanzania payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "faf93c05-67fd-47f4-9886-9fc3b36c4508"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "129cbef8-1c15-465d-89c0-93875cbb9bad"
                            }
                          }
                        ],
                        "id": "e37d21ec-3f6a-4852-9b53-b3c0ab6347b9",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman\"\n    },\n    \"payment_method\": \"MPESATZS\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"+255740123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{$randomEmail}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-e37d21ec-3f6a-4852-9b53-b3c0ab6347b9"
                      }
                    ],
                    "id": "04c32e21-5e42-4bca-9b15-c1491a975f21",
                    "uid": "10462328-04c32e21-5e42-4bca-9b15-c1491a975f21"
                  }
                ],
                "id": "85a85ee7-69e5-427c-9337-efe79a3e2d13",
                "uid": "10462328-85a85ee7-69e5-427c-9337-efe79a3e2d13"
              },
              {
                "name": "Payattitude",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Payattitude payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "79ff43a5-b2bf-4937-91a9-7541b333fcd9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "04d729bb-5830-482f-916d-e7a0757ecd50"
                            }
                          }
                        ],
                        "id": "a34f9223-e326-43c6-9bb4-b2aefeef4f5d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payattitude\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"2341234567890\"\n    },\n    \"customer\": {\n            \"full_name\": \"{{$randomFullName}}\",\n            \"email\": \"{{CUSTOMER_EMAIL}}\"\n        }\n    }",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a34f9223-e326-43c6-9bb4-b2aefeef4f5d"
                      }
                    ],
                    "id": "12e8bac0-1ec8-4e47-9363-80f24402c90f",
                    "uid": "10462328-12e8bac0-1ec8-4e47-9363-80f24402c90f"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Payattitude payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5f9a91fc-f1da-4720-a312-4eb6563a9100"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "84d765af-1c64-41c4-96ad-ccb94e3cb7d6"
                            }
                          }
                        ],
                        "id": "f51a24ed-8964-4962-9075-538246692440",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payattitude\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"2341234567890\"\n    },\n    \"customer\": {\n            \"full_name\": \"{{$randomFullName}}\",\n            \"email\": \"{{CUSTOMER_EMAIL}}\"\n        }\n    }",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-f51a24ed-8964-4962-9075-538246692440"
                      }
                    ],
                    "id": "e55a97c7-b6a7-4364-8131-84d005260fb2",
                    "uid": "10462328-e55a97c7-b6a7-4364-8131-84d005260fb2"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Payattitude payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8ac6ebb5-adf6-4aa8-b557-50a66860afb7"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1eb26e18-1c9b-46f5-bd5a-286e92a46ab1"
                            }
                          }
                        ],
                        "id": "b99a7671-0031-4ce2-87ad-13b1dd27ace9",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payattitude\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"2341234567890\"\n    },\n    \"customer\": {\n            \"full_name\": \"{{$randomFullName}}\",\n            \"email\": \"{{CUSTOMER_EMAIL}}\"\n        }\n    }",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b99a7671-0031-4ce2-87ad-13b1dd27ace9"
                      }
                    ],
                    "id": "68a84feb-113a-4bcd-838d-5e0133dee29c",
                    "uid": "10462328-68a84feb-113a-4bcd-838d-5e0133dee29c"
                  }
                ],
                "id": "4e57654a-48d7-4ea1-b5d3-2d56030b8c29",
                "uid": "10462328-4e57654a-48d7-4ea1-b5d3-2d56030b8c29"
              },
              {
                "name": "Pesalink",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create pesalink payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "868e9b31-54e2-43d7-964c-3f21bcf11931"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "bd2564ad-44ff-47d5-a71f-776b8161d5b8"
                            }
                          }
                        ],
                        "id": "cb5b218c-d3f7-40b9-ad3f-f52fb8b0e973",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"pesalink\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-cb5b218c-d3f7-40b9-ad3f-f52fb8b0e973"
                      }
                    ],
                    "id": "30ac7065-5a1f-484d-baff-22e50aa21a0c",
                    "uid": "10462328-30ac7065-5a1f-484d-baff-22e50aa21a0c"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create pesalink payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "30690a62-39d6-4573-9ab7-d8a8d795d1ad"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "01270ee8-23b1-4d52-aea7-141d05d16f92"
                            }
                          }
                        ],
                        "id": "af8e978d-fa27-47b4-bfc3-0fee69c41473",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"pesalink\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-af8e978d-fa27-47b4-bfc3-0fee69c41473"
                      }
                    ],
                    "id": "f68fa126-819f-4611-a9d7-4a0dc6519b3e",
                    "uid": "10462328-f68fa126-819f-4611-a9d7-4a0dc6519b3e"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create pesalink payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ab9532ea-2376-4cab-8869-4e4086b42535"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "40bc03fd-7383-4cce-bc38-64829fd9269d"
                            }
                          }
                        ],
                        "id": "e4df135e-0621-499a-8ff1-ce5c6b028526",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"pesalink\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-e4df135e-0621-499a-8ff1-ce5c6b028526"
                      }
                    ],
                    "id": "922f29c9-a5ac-45de-b4f6-e89b7302fb5e",
                    "uid": "10462328-922f29c9-a5ac-45de-b4f6-e89b7302fb5e"
                  }
                ],
                "id": "5a449ca1-5b62-4405-b9dd-e0dca7df5d26",
                "uid": "10462328-5a449ca1-5b62-4405-b9dd-e0dca7df5d26"
              },
              {
                "name": "NGN Virtual Account",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create NGNVA payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "aa11307c-a929-4c8a-ae4f-130112756c94"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b081e7de-6265-46f3-ae4e-438cfea66164"
                            }
                          }
                        ],
                        "id": "d3b662f5-65c5-4345-ab7d-b99246a6052b",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"NGNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d3b662f5-65c5-4345-ab7d-b99246a6052b"
                      }
                    ],
                    "id": "0847c4c9-29b7-4c84-99a3-1aa3a85c633b",
                    "uid": "10462328-0847c4c9-29b7-4c84-99a3-1aa3a85c633b"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create NGNVA payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "135a803e-4986-4a69-ae4f-264805b4ef73"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f56bfcd8-0366-4d7e-b4f0-9cdd5a1c7a35"
                            }
                          }
                        ],
                        "id": "d6e2693c-d1ee-4489-bd69-c3fd463f313f",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"NGNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d6e2693c-d1ee-4489-bd69-c3fd463f313f"
                      }
                    ],
                    "id": "0cce6247-1328-46bf-b3fd-c00e10fd3b3b",
                    "uid": "10462328-0cce6247-1328-46bf-b3fd-c00e10fd3b3b"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create NGNVA payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "49ab8da0-8784-48ad-b0a1-25278e646097"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8471e600-66e1-4567-9a07-ba637df5499e"
                            }
                          }
                        ],
                        "id": "06d1be74-31e4-4e4f-bfcb-366017a7598b",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"NGNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-06d1be74-31e4-4e4f-bfcb-366017a7598b"
                      }
                    ],
                    "id": "762586b6-2a9c-497a-8eaf-f4b74e2a2d9e",
                    "uid": "10462328-762586b6-2a9c-497a-8eaf-f4b74e2a2d9e"
                  }
                ],
                "id": "5adfbe80-4986-4489-aee0-b63efa6317b6",
                "uid": "10462328-5adfbe80-4986-4489-aee0-b63efa6317b6"
              },
              {
                "name": "Tigopesa Tanzania",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Tigopesa Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "aa8d4287-252f-43d5-b5a5-687b49c9a040"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ce2d32d6-3e5f-4ac7-964b-ab3ded654701"
                            }
                          }
                        ],
                        "id": "00fffb63-ef46-43f1-8d5d-db926c06d730",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"TIGOPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-00fffb63-ef46-43f1-8d5d-db926c06d730"
                      }
                    ],
                    "id": "4f9ce83b-be7e-4be2-a48e-41a215ba466d",
                    "uid": "10462328-4f9ce83b-be7e-4be2-a48e-41a215ba466d"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Tigopesa Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f790a6a8-94bb-4cbe-ab3f-99b2d55d9cac"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4b9af654-b558-4f9c-84c4-232cb4bbccd6"
                            }
                          }
                        ],
                        "id": "03fef16e-0b6f-45cb-a59d-9792d36ca3eb",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"TIGOPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-03fef16e-0b6f-45cb-a59d-9792d36ca3eb"
                      }
                    ],
                    "id": "b6959692-eda5-46ab-9f66-6133a7f0b35a",
                    "uid": "10462328-b6959692-eda5-46ab-9f66-6133a7f0b35a"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Tigopesa Tanzania payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8178ac54-a7b3-4809-8154-ab3b095304d6"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c0885b50-5245-49fa-acb2-a3d8dd3e2e25"
                            }
                          }
                        ],
                        "id": "f56829df-0a41-445e-9d6c-3b29c96ec01a",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"TIGOPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-f56829df-0a41-445e-9d6c-3b29c96ec01a"
                      }
                    ],
                    "id": "21b7d1e6-6634-4bc6-886c-7d377ab886cf",
                    "uid": "10462328-21b7d1e6-6634-4bc6-886c-7d377ab886cf"
                  }
                ],
                "id": "e11bcfad-6721-42a9-898d-11babfe1bf51",
                "uid": "10462328-e11bcfad-6721-42a9-898d-11babfe1bf51"
              },
              {
                "name": "Airtel",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Airtel payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d859262c-6fd7-4fc7-9799-b3dfc78d8ec5"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b48d0ee9-f73a-4389-b90e-b735aad2c6f1"
                            }
                          }
                        ],
                        "id": "995fe0cb-bc89-4cb1-8905-90230ed5481b",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTEL\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254100123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-995fe0cb-bc89-4cb1-8905-90230ed5481b"
                      }
                    ],
                    "id": "9dd3d867-e484-425f-8492-b2403e9a949d",
                    "uid": "10462328-9dd3d867-e484-425f-8492-b2403e9a949d"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Airtel payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "540b5a95-cef4-4d7f-85ad-c4257613ff50"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ba88190e-28f6-4eff-86e8-a1b25397f261"
                            }
                          }
                        ],
                        "id": "d4846731-c72e-4ce7-ae4e-a57ebedd8431",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTEL\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254100123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d4846731-c72e-4ce7-ae4e-a57ebedd8431"
                      }
                    ],
                    "id": "00bfc8ba-4441-4228-ba15-800e78eff0c6",
                    "uid": "10462328-00bfc8ba-4441-4228-ba15-800e78eff0c6"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Airtel payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a33c0294-6666-421e-ad25-f82c73ea728d"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9305138f-21f2-4970-bbc0-41d90839d377"
                            }
                          }
                        ],
                        "id": "9e44911e-2e01-4b72-9d51-941fa4e01dee",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTEL\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254100123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-9e44911e-2e01-4b72-9d51-941fa4e01dee"
                      }
                    ],
                    "id": "e6ac87d7-6272-45e7-9ecf-2e3b1387d8d3",
                    "uid": "10462328-e6ac87d7-6272-45e7-9ecf-2e3b1387d8d3"
                  }
                ],
                "id": "bbc01c6b-4281-4525-b96f-f7dc1d79a603",
                "uid": "10462328-bbc01c6b-4281-4525-b96f-f7dc1d79a603"
              },
              {
                "name": "Airtel Tanzania",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Airtel Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5ed6e85a-5eed-4545-953b-0bd15542f9a0"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fb642707-296c-4309-b7e1-ec68d337e637"
                            }
                          }
                        ],
                        "id": "ad3b3c71-9f6d-41da-bf57-dd402d6f28bf",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTELTZS\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255780123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ad3b3c71-9f6d-41da-bf57-dd402d6f28bf"
                      }
                    ],
                    "id": "c2a32be8-54f4-4d13-b3a3-e9dc5de08cb2",
                    "uid": "10462328-c2a32be8-54f4-4d13-b3a3-e9dc5de08cb2"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Airtel Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "49b3a426-7664-45c1-8964-1d1c2ebe6e17"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "00220d80-e0ea-4322-a12a-dc3008e3bee0"
                            }
                          }
                        ],
                        "id": "d72e2344-b434-4d4a-aad8-140b59fe199d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTELTZS\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255780123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d72e2344-b434-4d4a-aad8-140b59fe199d"
                      }
                    ],
                    "id": "b9c7767d-7175-4db5-a537-e57417e309ea",
                    "uid": "10462328-b9c7767d-7175-4db5-a537-e57417e309ea"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Airtel Tanzania payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9cb21cc9-4315-4998-9fe1-8437957ee087"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ce5e37c7-e02e-481e-80a2-fd0b4137a591"
                            }
                          }
                        ],
                        "id": "54793451-f7e3-4362-9f3d-5132c9c75e84",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTELTZS\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255780123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-54793451-f7e3-4362-9f3d-5132c9c75e84"
                      }
                    ],
                    "id": "e8afc841-d98a-4d3b-9dec-fd15a4426d80",
                    "uid": "10462328-e8afc841-d98a-4d3b-9dec-fd15a4426d80"
                  }
                ],
                "id": "fbc779ff-1809-4f5f-977c-d9507657dfa0",
                "uid": "10462328-fbc779ff-1809-4f5f-977c-d9507657dfa0"
              }
            ],
            "id": "5982ddd2-1ff8-4385-9f99-b2edea5681eb",
            "uid": "10462328-5982ddd2-1ff8-4385-9f99-b2edea5681eb"
          },
          {
            "name": "Europe",
            "item": [
              {
                "name": "iDEAL",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create IDEAL payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "53c687a2-fc40-4d3b-a44e-7911709eab16"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fa60761f-e116-4a65-b263-624257f5363b"
                            }
                          }
                        ],
                        "id": "58160541-a18c-47fa-b083-7409f7a693d9",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"IDEAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-58160541-a18c-47fa-b083-7409f7a693d9"
                      }
                    ],
                    "id": "46d8fd4e-92aa-4b85-86ba-46c5538296c9",
                    "uid": "10462328-46d8fd4e-92aa-4b85-86ba-46c5538296c9"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create IDEAL payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d021bc19-0c84-4fde-9126-91e6d282d1d7"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "09083e65-d4c0-423c-99a9-cdd07a074026"
                            }
                          }
                        ],
                        "id": "e6d940db-8c3a-4993-aacc-a7d54be42738",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"IDEAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-e6d940db-8c3a-4993-aacc-a7d54be42738"
                      }
                    ],
                    "id": "e5b114ed-210a-4504-9e8e-842b303ba85c",
                    "uid": "10462328-e5b114ed-210a-4504-9e8e-842b303ba85c"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create IDEAL payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6bdb1175-88aa-4526-8b98-2330136ee40e"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b60b6b90-3e8c-4de3-a539-44b57c120646"
                            }
                          }
                        ],
                        "id": "7579d121-520b-44e4-ba59-529e25458b94",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"IDEAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-7579d121-520b-44e4-ba59-529e25458b94"
                      }
                    ],
                    "id": "6c19db09-c3f2-4bb0-aad7-0d3272f120e7",
                    "uid": "10462328-6c19db09-c3f2-4bb0-aad7-0d3272f120e7"
                  }
                ],
                "id": "a1d1c3b0-455f-4f8c-8048-e5ca57d21c3f",
                "uid": "10462328-a1d1c3b0-455f-4f8c-8048-e5ca57d21c3f"
              },
              {
                "name": "WeChat",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create WECHAT payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e15eea6a-1491-4873-a1da-8ab8a91858a9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3932772b-c847-403e-9d22-d442a118cb30"
                            }
                          }
                        ],
                        "id": "d3c1724f-8fcf-4b50-be10-61d54bb57efd",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"WECHAT\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d3c1724f-8fcf-4b50-be10-61d54bb57efd"
                      }
                    ],
                    "id": "65743e9e-e5d1-4a8d-a011-4a4dd361b46d",
                    "uid": "10462328-65743e9e-e5d1-4a8d-a011-4a4dd361b46d"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create WECHAT payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c5def21d-593f-4bab-a128-cda4cf1b0485"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6d30c444-595a-4a55-92c9-48776e223c36"
                            }
                          }
                        ],
                        "id": "de894da3-dea4-4ff0-b593-a2e6d77fa20c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"WECHAT\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-de894da3-dea4-4ff0-b593-a2e6d77fa20c"
                      }
                    ],
                    "id": "f0567eea-8a42-49a0-84fa-9ff5bec1a34b",
                    "uid": "10462328-f0567eea-8a42-49a0-84fa-9ff5bec1a34b"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create WECHAT payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "68f94153-7ba5-404d-88bd-dd491c810ad7"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "63a316a8-98fd-4224-8aaa-e0dd11d98b73"
                            }
                          }
                        ],
                        "id": "263ae6de-5db1-4bf7-9090-2be36225245c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"WECHAT\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-263ae6de-5db1-4bf7-9090-2be36225245c"
                      }
                    ],
                    "id": "09fe3416-0744-450d-b634-df5394e240c5",
                    "uid": "10462328-09fe3416-0744-450d-b634-df5394e240c5"
                  }
                ],
                "id": "1d1e1049-276d-446a-a56c-c5de26c682c6",
                "uid": "10462328-1d1e1049-276d-446a-a56c-c5de26c682c6"
              },
              {
                "name": "Multibanco",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create MULTIBANCO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f79368bb-2e18-4938-99d1-44a575cb36c2"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "57b731a2-b3d3-435a-a3a2-31b6e609bf92"
                            }
                          }
                        ],
                        "id": "b3e504b2-9a37-4b31-abf4-d9e3b2860eb4",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MULTIBANCO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b3e504b2-9a37-4b31-abf4-d9e3b2860eb4"
                      }
                    ],
                    "id": "bd24ba47-9b67-410b-a0ae-6fa47299971c",
                    "uid": "10462328-bd24ba47-9b67-410b-a0ae-6fa47299971c"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create MULTIBANCO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e6f3bdb9-940b-4d84-bd3c-8cfffff4820c"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7a76e7bc-583e-440f-bb24-47ec01fe65b9"
                            }
                          }
                        ],
                        "id": "2c1491d6-d68e-47ec-9840-45245d194985",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MULTIBANCO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2c1491d6-d68e-47ec-9840-45245d194985"
                      }
                    ],
                    "id": "a8dfb5c3-c1fb-4cc4-b928-5719eb5c19ab",
                    "uid": "10462328-a8dfb5c3-c1fb-4cc4-b928-5719eb5c19ab"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create MULTIBANCO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "90175787-e60b-4818-8799-ff88b3649e71"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "0b78556e-179b-44cf-99da-7fb8ed09a952"
                            }
                          }
                        ],
                        "id": "9b408eae-2f71-4b1b-9e33-464101c91c55",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MULTIBANCO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-9b408eae-2f71-4b1b-9e33-464101c91c55"
                      }
                    ],
                    "id": "d143f216-2ffb-4d88-94c5-0b2789d04044",
                    "uid": "10462328-d143f216-2ffb-4d88-94c5-0b2789d04044"
                  }
                ],
                "id": "de48ec29-bec7-4cc9-9f8b-c578edbd453e",
                "uid": "10462328-de48ec29-bec7-4cc9-9f8b-c578edbd453e"
              },
              {
                "name": "MBWAY",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create MBWAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a8321049-e4c6-41b3-9835-1b724aaee50d"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d470564e-5143-48f1-8df6-b92863de27e8"
                            }
                          }
                        ],
                        "id": "0e30a4b5-21d3-495f-b3a7-0083cd1a3f5a",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MBWAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"351123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-0e30a4b5-21d3-495f-b3a7-0083cd1a3f5a"
                      }
                    ],
                    "id": "7e54919c-cfaa-42cc-bea4-9966781903ca",
                    "uid": "10462328-7e54919c-cfaa-42cc-bea4-9966781903ca"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create MBWAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "439513c7-1bcf-45c2-bca7-6c2e3123a4df"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "11e0ac32-c398-4d01-b70f-d8be73ae22d4"
                            }
                          }
                        ],
                        "id": "e953b567-ed63-4797-a1be-ddc3339a7944",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MBWAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"351123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-e953b567-ed63-4797-a1be-ddc3339a7944"
                      }
                    ],
                    "id": "f212333f-b0df-4181-8df1-38ff1b906fec",
                    "uid": "10462328-f212333f-b0df-4181-8df1-38ff1b906fec"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create MBWAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d1d6d584-5c16-4377-b3d5-7729c9a7bdab"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fd6b2e68-d8ad-423e-be14-0ed2aeceb20f"
                            }
                          }
                        ],
                        "id": "c059aba2-0f24-48a5-ad94-3048537f8563",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MBWAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"351123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c059aba2-0f24-48a5-ad94-3048537f8563"
                      }
                    ],
                    "id": "f8fcc919-3114-4abc-95d8-eed2a6be553c",
                    "uid": "10462328-f8fcc919-3114-4abc-95d8-eed2a6be553c"
                  }
                ],
                "id": "f36ac3c9-9692-406b-8cd6-7998aa0139e0",
                "uid": "10462328-f36ac3c9-9692-406b-8cd6-7998aa0139e0"
              },
              {
                "name": "OPENBANKING",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create OPENBANKING payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "0ea52e8b-b895-4cf0-8811-46fbb6a53aed"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "06208763-104e-4c55-ba33-33162aa34b17"
                            }
                          }
                        ],
                        "id": "4057c2b4-df39-4ee4-b99b-cb25277ac8aa",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OPENBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n       \"bank_code\":  \"ksk_euskirchen_oauth_client_de\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-4057c2b4-df39-4ee4-b99b-cb25277ac8aa"
                      }
                    ],
                    "id": "cc189033-1d47-4835-b887-104841106e46",
                    "uid": "10462328-cc189033-1d47-4835-b887-104841106e46"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create OPENBANKING payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4e61024b-27bf-4e07-ba14-c0db4ae8302a"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "bb8c4dd4-c1e2-4e32-96fa-626bce5be022"
                            }
                          }
                        ],
                        "id": "15c4dc8d-e8d5-4a68-abc7-c4b8ad556a77",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OPENBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-15c4dc8d-e8d5-4a68-abc7-c4b8ad556a77"
                      }
                    ],
                    "id": "19250aef-97cf-4ba0-bb8e-c26c7e951d3d",
                    "uid": "10462328-19250aef-97cf-4ba0-bb8e-c26c7e951d3d"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create OPENBANKING payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "14924257-c421-4f00-a53d-8df50e9869e6"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8c8d2475-e135-4682-9dac-e72b66189f5e"
                            }
                          }
                        ],
                        "id": "87c05d86-ddf3-434f-9932-21376393cb82",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OPENBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n       \"bank_code\":  \"spk_schweinfurt_hassberge_oauth_client_de\",\n       \"id\":\"CY000000000000000000000000771\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-87c05d86-ddf3-434f-9932-21376393cb82"
                      }
                    ],
                    "id": "bd709c72-c32a-4439-8336-4ea6f60ae0c7",
                    "uid": "10462328-bd709c72-c32a-4439-8336-4ea6f60ae0c7"
                  }
                ],
                "id": "477c7b90-3262-4fc9-a258-2c54e0cdeb11",
                "uid": "10462328-477c7b90-3262-4fc9-a258-2c54e0cdeb11"
              },
              {
                "name": "BLIK",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create BLIK payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "60d158a0-2cf5-4bae-bb97-2b63211f902e"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2246be40-05ab-45eb-b870-98e66139b070"
                            }
                          }
                        ],
                        "id": "54a6dbf2-9047-4ef7-9d3b-49fd40fb3b42",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BLIK\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"PLN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-54a6dbf2-9047-4ef7-9d3b-49fd40fb3b42"
                      }
                    ],
                    "id": "ed8d1728-21cf-489a-92c6-b4bfe4d554fb",
                    "uid": "10462328-ed8d1728-21cf-489a-92c6-b4bfe4d554fb"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create BLIK payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c4d659d0-22b0-45a7-82e6-d1724a7390b6"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "40d47bff-9a42-4a5b-9287-4489ae276659"
                            }
                          }
                        ],
                        "id": "f2489297-8346-45d0-98d6-7b3c1517587d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BLIK\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"PLN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-f2489297-8346-45d0-98d6-7b3c1517587d"
                      }
                    ],
                    "id": "7dee6550-a340-4715-a799-bf63540899fd",
                    "uid": "10462328-7dee6550-a340-4715-a799-bf63540899fd"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create BLIK payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "041b827f-a0c7-4618-9119-0f55ebf42576"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "411741d5-0e51-4bfa-9b57-b5d212d91014"
                            }
                          }
                        ],
                        "id": "5100b190-49b5-4f61-a127-304bfa58e1f6",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BLIK\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"PLN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-5100b190-49b5-4f61-a127-304bfa58e1f6"
                      }
                    ],
                    "id": "e8f05b7b-c012-4dd3-be84-6150982bffc4",
                    "uid": "10462328-e8f05b7b-c012-4dd3-be84-6150982bffc4"
                  }
                ],
                "id": "52a0400f-bc22-4371-9852-06c3c9d7d912",
                "uid": "10462328-52a0400f-bc22-4371-9852-06c3c9d7d912"
              },
              {
                "name": "P24",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create P24 payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c75f449d-8d9c-430f-bf02-06708b6a9846"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9bf9cdf3-2a7a-4a9e-a3f9-e0c4e3d10a05"
                            }
                          }
                        ],
                        "id": "bba3e4c9-13d0-44b8-956f-bd3ba3ca2aa5",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"P24\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n        \"bank_code\": 64\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-bba3e4c9-13d0-44b8-956f-bd3ba3ca2aa5"
                      }
                    ],
                    "id": "b7b9395a-7fcd-4f91-ad7d-13a692b1670c",
                    "uid": "10462328-b7b9395a-7fcd-4f91-ad7d-13a692b1670c"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create P24 payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9724bed6-58ec-4d21-a55f-d56b4012a1d9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3ba74cf0-dd83-49e6-8ef4-aaab466d94b3"
                            }
                          }
                        ],
                        "id": "8b7b2cc5-e5b1-43c9-8710-42065e32b000",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"P24\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8b7b2cc5-e5b1-43c9-8710-42065e32b000"
                      }
                    ],
                    "id": "847c3b27-da01-4114-9ee3-18c0454db30c",
                    "uid": "10462328-847c3b27-da01-4114-9ee3-18c0454db30c"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create P24 payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "dba1dd5a-7071-4ab1-92c9-1c69a77b80c4"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "adbb9fbc-f9b8-4f65-a668-da0a28b861c6"
                            }
                          }
                        ],
                        "id": "20c11371-9659-46bd-91ea-1fbeb8dfa854",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"P24\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n        \"bank_code\": 64\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-20c11371-9659-46bd-91ea-1fbeb8dfa854"
                      }
                    ],
                    "id": "a5f54458-1dc9-4761-b189-ace8447a667b",
                    "uid": "10462328-a5f54458-1dc9-4761-b189-ace8447a667b"
                  }
                ],
                "id": "7805a3d2-6166-4765-9e34-b80cb437a5d8",
                "uid": "10462328-7805a3d2-6166-4765-9e34-b80cb437a5d8"
              },
              {
                "name": "BIZUM",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create BIZUM payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e591dfd1-7d6f-4d64-ae71-3563fe88252c"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fc66e709-fa4a-498f-adcb-76fd4c53270c"
                            }
                          }
                        ],
                        "id": "9a91a5bc-7d5f-4f1b-ba66-f5f95bd28709",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BIZUM\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n        \"id\": \"+12345678\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-9a91a5bc-7d5f-4f1b-ba66-f5f95bd28709"
                      }
                    ],
                    "id": "79ed98d8-1505-4fa6-809d-04baadb20854",
                    "uid": "10462328-79ed98d8-1505-4fa6-809d-04baadb20854"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create BIZUM payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "97d3ea81-0f19-49cb-85b3-58002800d463"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9d910d46-7a89-4e2b-9590-e5d1e319073b"
                            }
                          }
                        ],
                        "id": "845ccf41-6171-45a8-afc6-ad79b8942b90",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BIZUM\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-845ccf41-6171-45a8-afc6-ad79b8942b90"
                      }
                    ],
                    "id": "839b57b9-8fdc-47c6-95f8-1db9b00f8967",
                    "uid": "10462328-839b57b9-8fdc-47c6-95f8-1db9b00f8967"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create BIZUM payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "00f7d595-037f-408d-bccd-4211c682f891"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8cb62bad-425f-4e30-b4dd-77320fa0c0ce"
                            }
                          }
                        ],
                        "id": "984c28f1-f072-4211-8f69-67411852e819",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BIZUM\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n        \"id\": \"+12345678\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-984c28f1-f072-4211-8f69-67411852e819"
                      }
                    ],
                    "id": "03252b3a-a4fa-4920-b1ed-145d66fffce1",
                    "uid": "10462328-03252b3a-a4fa-4920-b1ed-145d66fffce1"
                  }
                ],
                "id": "4993aa58-b477-44e6-a75d-e76191f8be25",
                "uid": "10462328-4993aa58-b477-44e6-a75d-e76191f8be25"
              },
              {
                "name": "BANCONTACT",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create BANCONTACT payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7c5d79a4-ee36-489d-ac97-3a0232e3b167"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "682164ed-0323-4014-9770-57c6b4c432c0"
                            }
                          }
                        ],
                        "id": "470c4b5a-7b24-4e12-9b6e-4d5ff902c722",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCONTACT\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-470c4b5a-7b24-4e12-9b6e-4d5ff902c722"
                      }
                    ],
                    "id": "6ea1e261-efaf-4035-b0fb-e73087e74e5c",
                    "uid": "10462328-6ea1e261-efaf-4035-b0fb-e73087e74e5c"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create BANCONTACT payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6f5c95a3-4819-4cce-b38a-7aa91d1d1d31"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6e7b5539-4fa7-4d2f-83ac-79904855dd85"
                            }
                          }
                        ],
                        "id": "e929bc1d-5c2f-452c-b60b-cdc253f22607",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCONTACT\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-e929bc1d-5c2f-452c-b60b-cdc253f22607"
                      }
                    ],
                    "id": "be820d06-1508-4bf5-b31e-697017292ed8",
                    "uid": "10462328-be820d06-1508-4bf5-b31e-697017292ed8"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create BANCONTACT payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "409b153f-add4-431b-8c03-15d42f653c50"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "39cfe9f6-c00c-41ae-b6dc-8c1d48899332"
                            }
                          }
                        ],
                        "id": "85049531-441b-4b8e-9b38-6864f2ad5aa6",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCONTACT\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-85049531-441b-4b8e-9b38-6864f2ad5aa6"
                      }
                    ],
                    "id": "b853c2cb-35b0-4604-9cc6-c4173667627b",
                    "uid": "10462328-b853c2cb-35b0-4604-9cc6-c4173667627b"
                  }
                ],
                "id": "804ee1ca-b242-4d16-b0a8-b01193c05202",
                "uid": "10462328-804ee1ca-b242-4d16-b0a8-b01193c05202"
              },
              {
                "name": "SEPA Instant",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create SEPATRANSFER payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f1ada024-f2c7-49f3-8c7f-e470f04c4c78"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e2951fb3-2705-440a-abde-0a51e0ed900f"
                            }
                          }
                        ],
                        "id": "8d23f995-caa7-4ea0-8731-c4d7c35042c6",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SEPATRANSFER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8d23f995-caa7-4ea0-8731-c4d7c35042c6"
                      }
                    ],
                    "id": "6c4f6470-e817-47ec-9d36-c0390006cff7",
                    "uid": "10462328-6c4f6470-e817-47ec-9d36-c0390006cff7"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create SEPATRANSFER payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "754419df-a494-4b1f-834f-2b54789af224"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b0f9f970-abff-4932-8503-fd8be75f1484"
                            }
                          }
                        ],
                        "id": "4d48544a-9576-426b-8756-b5ca8bdda3b0",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SEPATRANSFER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-4d48544a-9576-426b-8756-b5ca8bdda3b0"
                      }
                    ],
                    "id": "922b5835-b670-4cfd-b060-e0fafcfc5896",
                    "uid": "10462328-922b5835-b670-4cfd-b060-e0fafcfc5896"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create SEPATRANSFER payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7389a304-6c35-4467-97de-9de91939c601"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "55768648-7716-40d4-b252-de7d0eb6f974"
                            }
                          }
                        ],
                        "id": "84db1224-fdd9-4001-b6a9-2feb948f0195",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SEPATRANSFER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-84db1224-fdd9-4001-b6a9-2feb948f0195"
                      }
                    ],
                    "id": "8685ba63-28a5-410e-8503-c54193d1dc85",
                    "uid": "10462328-8685ba63-28a5-410e-8503-c54193d1dc85"
                  }
                ],
                "id": "03d277b0-07a8-4f80-bf1a-e46719551dda",
                "uid": "10462328-03d277b0-07a8-4f80-bf1a-e46719551dda"
              }
            ],
            "id": "9dcbdec6-26e9-4031-a474-f123184bea06",
            "uid": "10462328-9dcbdec6-26e9-4031-a474-f123184bea06"
          },
          {
            "name": "Asia",
            "item": [
              {
                "name": "Vietnam",
                "item": [
                  {
                    "name": "QR Vietnam",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create QR Vietnam payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b58107d2-37b3-40aa-a8a7-a9c6a6eeecc4"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c5cd0458-5b93-404e-8095-8f34cc1a956e"
                                }
                              }
                            ],
                            "id": "0ca84312-cc1f-4400-96bd-1524a854dc20",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"VIETQR\",\n    \"payment_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"VND\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-0ca84312-cc1f-4400-96bd-1524a854dc20"
                          }
                        ],
                        "id": "493ca369-e8a7-4584-a2bf-5df2d2aa01e4",
                        "uid": "10462328-493ca369-e8a7-4584-a2bf-5df2d2aa01e4"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create QR Vietnam payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f5972471-9c54-4f21-90c3-66db0288ce5c"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "81aa883b-4299-47ab-a6e1-bce7c179d2ef"
                                }
                              }
                            ],
                            "id": "c2127b12-a97c-4f49-b805-355d8bdf62ad",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"VIETQR\",\n    \"payment_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"VND\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-c2127b12-a97c-4f49-b805-355d8bdf62ad"
                          }
                        ],
                        "id": "6c326aa2-7faf-4850-8f01-632ef1365b90",
                        "uid": "10462328-6c326aa2-7faf-4850-8f01-632ef1365b90"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create Payme payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('ExtendedResponse_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('ExtendedResponse_TERMINAL_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "44add047-9905-48cb-8e41-1884559cb42d"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "74d6758c-6286-4d32-8388-7ad471cfdf1e"
                                }
                              }
                            ],
                            "id": "eed483e6-cb72-4040-adc3-8974721d73d4",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"VietQR\",\n    \"payment_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"VND\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-eed483e6-cb72-4040-adc3-8974721d73d4"
                          }
                        ],
                        "id": "98c115c4-716c-4a9e-be67-a99374103f31",
                        "uid": "10462328-98c115c4-716c-4a9e-be67-a99374103f31"
                      }
                    ],
                    "id": "abd6b96f-99f8-4826-8665-81e9921901ab",
                    "uid": "10462328-abd6b96f-99f8-4826-8665-81e9921901ab"
                  }
                ],
                "id": "17314adc-3e63-47c4-911e-599c0c0c69b4",
                "uid": "10462328-17314adc-3e63-47c4-911e-599c0c0c69b4"
              },
              {
                "name": "Malaysia",
                "item": [
                  {
                    "name": "Boost",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "f8b14b1b-de84-448e-ae3d-c56bf2a97478",
                        "uid": "10462328-f8b14b1b-de84-448e-ae3d-c56bf2a97478"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "8a25b2db-d87a-4908-bf7e-5f367dc96703",
                        "uid": "10462328-8a25b2db-d87a-4908-bf7e-5f367dc96703"
                      }
                    ],
                    "id": "ac8f920d-99a7-49fb-98df-84c311695f44",
                    "uid": "10462328-ac8f920d-99a7-49fb-98df-84c311695f44"
                  },
                  {
                    "name": "GrabPay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "0dc0c693-4bd1-49e0-b156-c5b8ea9b9815",
                        "uid": "10462328-0dc0c693-4bd1-49e0-b156-c5b8ea9b9815"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "1128f406-b269-4a7e-8016-e3c01bf4e932",
                        "uid": "10462328-1128f406-b269-4a7e-8016-e3c01bf4e932"
                      }
                    ],
                    "id": "324dc6a6-95c6-4083-be93-9e0ec6fe9b5a",
                    "uid": "10462328-324dc6a6-95c6-4083-be93-9e0ec6fe9b5a"
                  },
                  {
                    "name": "Shopeepay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "1ab4a9e1-3d1c-455c-abed-5d59b369b381"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2e20b80a-375a-4f6d-82a1-03e3fe2d1ed0"
                                }
                              }
                            ],
                            "id": "ddb3d0c4-5ed6-41b4-9965-6ad27f0e2da2",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MYR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"601234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ddb3d0c4-5ed6-41b4-9965-6ad27f0e2da2"
                          }
                        ],
                        "id": "3f200695-b9e2-4114-8818-fd2032d1ce89",
                        "uid": "10462328-3f200695-b9e2-4114-8818-fd2032d1ce89"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e5494a2a-6a73-4925-9b34-1a7405479a27"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0e321ef0-d3da-4d06-9375-1689b292e04f"
                                }
                              }
                            ],
                            "id": "02c973be-be70-465b-9b4b-b5d73f704942",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MYR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"601234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-02c973be-be70-465b-9b4b-b5d73f704942"
                          }
                        ],
                        "id": "46f38a79-4777-4827-98c4-188dbf5e74c1",
                        "uid": "10462328-46f38a79-4777-4827-98c4-188dbf5e74c1"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create Shopeepay payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "1120202c-8ec1-4264-82ae-dc3a4c22c424"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5109401a-bc90-4f17-b9e7-fd374a26b845"
                                }
                              }
                            ],
                            "id": "8ff32297-c9d0-4eb6-b9cc-2e752dd264e3",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MYR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"601234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-8ff32297-c9d0-4eb6-b9cc-2e752dd264e3"
                          }
                        ],
                        "id": "46296ff4-4d6b-4d95-8a86-3c45db62a23b",
                        "uid": "10462328-46296ff4-4d6b-4d95-8a86-3c45db62a23b"
                      }
                    ],
                    "id": "767a195d-7e70-4d6b-9be1-216b42cb2edd",
                    "uid": "10462328-767a195d-7e70-4d6b-9be1-216b42cb2edd"
                  }
                ],
                "id": "7b53d73a-71b8-4423-8555-b32bd8b510fa",
                "uid": "10462328-7b53d73a-71b8-4423-8555-b32bd8b510fa"
              },
              {
                "name": "Republic of the Philippines",
                "item": [
                  {
                    "name": "Over The Counter Banking",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERBANKING payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a0e7f30a-de6f-42d2-9b37-dcd73c9003b3"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "27b6cdf0-e7f0-404e-84da-ae95aab72efe"
                                }
                              }
                            ],
                            "id": "af51a5a4-49c6-4725-bf96-f8dfc6b0ab38",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BNRX\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-af51a5a4-49c6-4725-bf96-f8dfc6b0ab38"
                          }
                        ],
                        "id": "fc92e984-7a76-4cbf-b4c0-f44f3f3d2c1c",
                        "uid": "10462328-fc92e984-7a76-4cbf-b4c0-f44f3f3d2c1c"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERBANKING payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "1ab308bf-0b67-42f4-a7ce-8f9709ec8be2"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b20ac9dc-bc00-47b1-9db2-d37b43a7aff7"
                                }
                              }
                            ],
                            "id": "d83c39bd-8716-4a44-be02-99f6d38b2895",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BNRX\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-d83c39bd-8716-4a44-be02-99f6d38b2895"
                          }
                        ],
                        "id": "48ca5af7-a58f-443b-8ff8-a06784f1bf2d",
                        "uid": "10462328-48ca5af7-a58f-443b-8ff8-a06784f1bf2d"
                      }
                    ],
                    "id": "e3b9cc70-bfb7-4f61-a4c9-0bd55618621b",
                    "uid": "10462328-e3b9cc70-bfb7-4f61-a4c9-0bd55618621b"
                  },
                  {
                    "name": "Over The Counter Non Banking",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERNONBANKING payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a69dde70-3954-4512-a8d6-6c758f938c0f"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7ccf6210-ef7b-48a5-9c8f-a859b8071954"
                                }
                              }
                            ],
                            "id": "d1de22d7-5757-4f57-b3cf-01b2f8539dbe",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERNONBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"CEBL\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-d1de22d7-5757-4f57-b3cf-01b2f8539dbe"
                          }
                        ],
                        "id": "c1f041c4-e35a-4f39-b527-6c44466d3359",
                        "uid": "10462328-c1f041c4-e35a-4f39-b527-6c44466d3359"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERNONBANKING payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "84f2a019-cfae-4b3a-b64a-3e8a9d739eb9"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "55442885-e2f5-4d02-bec9-1468d52d71d1"
                                }
                              }
                            ],
                            "id": "7e3641cc-c803-48df-96a1-2e4b2fde7408",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERNONBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"CEBL\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-7e3641cc-c803-48df-96a1-2e4b2fde7408"
                          }
                        ],
                        "id": "df5cb924-fd6c-4070-a2c9-02c12c6a39b4",
                        "uid": "10462328-df5cb924-fd6c-4070-a2c9-02c12c6a39b4"
                      }
                    ],
                    "id": "bee9f713-e903-4984-ab97-f2979573803a",
                    "uid": "10462328-bee9f713-e903-4984-ab97-f2979573803a"
                  },
                  {
                    "name": "Direct Banking Philippines",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create DIRECTBANKINGPH payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d8162d74-8ce4-486c-adc4-e0b05656a801"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f75ab661-1e73-4e07-8ee6-8d52da015197"
                                }
                              }
                            ],
                            "id": "0e096cf1-72a4-436b-92a2-ed220e7d20bc",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGPH\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BOC\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-0e096cf1-72a4-436b-92a2-ed220e7d20bc"
                          }
                        ],
                        "id": "07da5493-84ec-4ba7-a5e9-1fa97c3b4baf",
                        "uid": "10462328-07da5493-84ec-4ba7-a5e9-1fa97c3b4baf"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DIRECTBANKINGPH payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "55cae3ff-8b35-4e0f-bf1d-8d08559e44b0"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e8a8e786-f17c-4282-bb4f-5a9ee89e488e"
                                }
                              }
                            ],
                            "id": "b0955b57-b1d7-4d39-be20-fb962e2b44f3",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGPH\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BOC\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-b0955b57-b1d7-4d39-be20-fb962e2b44f3"
                          }
                        ],
                        "id": "f100db25-4a83-4e4a-84b8-7d5c467cc2b0",
                        "uid": "10462328-f100db25-4a83-4e4a-84b8-7d5c467cc2b0"
                      }
                    ],
                    "id": "5e3d7f5d-c33a-47f8-bbd9-8e09cfc6e589",
                    "uid": "10462328-5e3d7f5d-c33a-47f8-bbd9-8e09cfc6e589"
                  },
                  {
                    "name": "QR Philippines",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create QR Philippines payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "eee9fc9c-969c-488f-881c-b3d6c65eb4b6"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8977d7fc-ab19-4449-bb53-ed3a1e522a9b"
                                }
                              }
                            ],
                            "id": "dfc69e89-28fa-478a-b9d6-2c2da28ea924",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"qrph\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-dfc69e89-28fa-478a-b9d6-2c2da28ea924"
                          }
                        ],
                        "id": "b476a626-ea52-4f23-b897-f8a126502b50",
                        "uid": "10462328-b476a626-ea52-4f23-b897-f8a126502b50"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create QR Philippines payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "9bfa5d67-1912-48d4-a051-2e5f2ca764e7"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a87e4a60-c388-487a-bea2-be0726cefb83"
                                }
                              }
                            ],
                            "id": "f78d5675-07cc-433e-b43e-8f68ae91d9d1",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"qrph\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-f78d5675-07cc-433e-b43e-8f68ae91d9d1"
                          }
                        ],
                        "id": "9b903778-cac0-480a-8290-f8661dbf4ee2",
                        "uid": "10462328-9b903778-cac0-480a-8290-f8661dbf4ee2"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create QR Philippines payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "9ad4f022-91a9-4546-9fdf-51c53400e0a4"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c69ffada-b533-4557-b83d-aee2960eef85"
                                }
                              }
                            ],
                            "id": "06ca5612-eaf6-47fc-ab8b-fc8ea38e8521",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"qrph\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-06ca5612-eaf6-47fc-ab8b-fc8ea38e8521"
                          }
                        ],
                        "id": "8509d7f2-9058-4d48-ac2d-ffeb5b6d6e2b",
                        "uid": "10462328-8509d7f2-9058-4d48-ac2d-ffeb5b6d6e2b"
                      }
                    ],
                    "id": "4d8a5f95-c6d2-40fa-acdd-fd452fb40c9e",
                    "uid": "10462328-4d8a5f95-c6d2-40fa-acdd-fd452fb40c9e"
                  },
                  {
                    "name": "Shopeepay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8f8181a1-6b81-46f4-b11d-b876ccb8ee1b"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d139c6ef-7e2e-4d45-a726-aa9fa604fb35"
                                }
                              }
                            ],
                            "id": "451b7b15-3057-4abd-a42c-5cc1aff99343",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"631234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-451b7b15-3057-4abd-a42c-5cc1aff99343"
                          }
                        ],
                        "id": "a8008357-6766-4498-9c03-65a4e56e3a6c",
                        "uid": "10462328-a8008357-6766-4498-9c03-65a4e56e3a6c"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "834f0de5-18a9-45bf-90d1-146849f3fe7c"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b93d4a21-9f33-4d39-8dc8-1df1c25eafab"
                                }
                              }
                            ],
                            "id": "28185867-2b8e-4280-acae-bcc07d505be6",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"631234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-28185867-2b8e-4280-acae-bcc07d505be6"
                          }
                        ],
                        "id": "b67097ad-0154-43ce-9b76-e4429d265e5c",
                        "uid": "10462328-b67097ad-0154-43ce-9b76-e4429d265e5c"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create Shopeepay payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7ab3da4f-3390-40c7-a0b1-9e14a1bf0b57"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c0108321-fdd9-4c60-9a5b-fbefb1ce8189"
                                }
                              }
                            ],
                            "id": "f921db45-453a-438e-8eb3-18ec2f25b048",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"631234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-f921db45-453a-438e-8eb3-18ec2f25b048"
                          }
                        ],
                        "id": "1289f4d0-5a3c-499c-b8ca-89c2d838ecac",
                        "uid": "10462328-1289f4d0-5a3c-499c-b8ca-89c2d838ecac"
                      }
                    ],
                    "id": "a52e2b80-5216-44c5-95ab-4fd1c28ea769",
                    "uid": "10462328-a52e2b80-5216-44c5-95ab-4fd1c28ea769"
                  }
                ],
                "id": "e9f833dd-e3f7-4f94-ab75-232bfe88d6a6",
                "uid": "10462328-e9f833dd-e3f7-4f94-ab75-232bfe88d6a6"
              },
              {
                "name": "Thailand",
                "item": [
                  {
                    "name": "Direct Banking Thailand",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create directbankingthb payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "36a53f98-a2c5-47f3-90fb-84bcc26a523f"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8e3ae6d4-fd83-4913-a533-2a25b6cccc5c"
                                }
                              }
                            ],
                            "id": "30a6b0b5-38c9-4d50-8a89-6a492b3109ab",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"directbankingthb\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    },\n    \"ewallet_account\":{\n        \"bank_code\":\"BBL\"\n    },\n    \"return_urls\":{\n        \"inprocess_url\": \"http://www.example.com/in-process-url\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-30a6b0b5-38c9-4d50-8a89-6a492b3109ab"
                          }
                        ],
                        "id": "a5883384-b027-49a8-a39b-c41b96811b74",
                        "uid": "10462328-a5883384-b027-49a8-a39b-c41b96811b74"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create directbankingthb payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "85c9fe9f-a9d4-48a5-bd65-6f424e961037"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "499e45f8-52b4-46c5-b134-c31b798e762c"
                                }
                              }
                            ],
                            "id": "9bce3e41-0e97-4583-a2d0-482c9b430057",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"directbankingthb\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    },\n    \"ewallet_account\":{\n        \"bank_code\":\"BBL\"\n    }\n\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-9bce3e41-0e97-4583-a2d0-482c9b430057"
                          }
                        ],
                        "id": "2764d389-18cb-4079-82ab-b10b48180e3d",
                        "uid": "10462328-2764d389-18cb-4079-82ab-b10b48180e3d"
                      }
                    ],
                    "id": "a753a883-f3b3-4f9d-8ab5-4f44e2eed33a",
                    "uid": "10462328-a753a883-f3b3-4f9d-8ab5-4f44e2eed33a"
                  },
                  {
                    "name": "PromptPay QR",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create PROMPTPAYQR payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2bb05d82-fef8-4761-a6c4-393a776b1920"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0700812c-996b-47f4-9858-45e2f5c861ed"
                                }
                              }
                            ],
                            "id": "73ddad19-1797-4617-ad7a-42697fe1bbeb",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"promptpayqr\",\n    \"payment_data\": {\n        \"amount\": \"2001\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-73ddad19-1797-4617-ad7a-42697fe1bbeb"
                          }
                        ],
                        "id": "5b29b1ca-ffbb-41c4-aaef-958ea76fdb2a",
                        "uid": "10462328-5b29b1ca-ffbb-41c4-aaef-958ea76fdb2a"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create promptpayqr payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d9b90383-e853-48de-a036-4701abc23c97"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4d947198-3900-43cf-a815-89e774122c74"
                                }
                              }
                            ],
                            "id": "e891d33b-2487-45a5-9fde-1ac921c642dc",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"promptpayqr\",\n    \"payment_data\": {\n        \"amount\": \"2001\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-e891d33b-2487-45a5-9fde-1ac921c642dc"
                          }
                        ],
                        "id": "e98bc893-4199-48db-8b2f-f1dc6c6b37ba",
                        "uid": "10462328-e98bc893-4199-48db-8b2f-f1dc6c6b37ba"
                      }
                    ],
                    "id": "28d7ff03-53ec-4048-817a-8a2b731a452d",
                    "uid": "10462328-28d7ff03-53ec-4048-817a-8a2b731a452d"
                  },
                  {
                    "name": "TrueMoney Wallet",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create TRUEMONEY payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ecce189a-90d8-4d76-a84f-71ac9749e977"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "9f18bfc0-d2cb-452b-9288-0d5b41b38958"
                                }
                              }
                            ],
                            "id": "58e21d75-1fd6-470f-b301-c0c750617320",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"truemoney\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\":\"0123456789\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-58e21d75-1fd6-470f-b301-c0c750617320"
                          }
                        ],
                        "id": "6cac61c4-2092-4c1f-970e-c24f6e74fee0",
                        "uid": "10462328-6cac61c4-2092-4c1f-970e-c24f6e74fee0"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create truemoney payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7f7fac23-58bd-4210-8e9f-78b6231332d2"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0cc33b3f-3578-4285-b722-eecbf2fef7af"
                                }
                              }
                            ],
                            "id": "4bc3af0a-9fff-48b1-97fa-28880a99b918",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"truemoney\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\":\"0123456789\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-4bc3af0a-9fff-48b1-97fa-28880a99b918"
                          }
                        ],
                        "id": "2420b7c1-1b34-42f6-a1e0-7befa14faabe",
                        "uid": "10462328-2420b7c1-1b34-42f6-a1e0-7befa14faabe"
                      }
                    ],
                    "id": "f06f537b-c271-4336-af51-643f1562822a",
                    "uid": "10462328-f06f537b-c271-4336-af51-643f1562822a"
                  },
                  {
                    "name": "Tesco Bill Payment",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create tescobill payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5d10d805-c725-46ba-92d4-23dd2bc1971d"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "db3c7703-715c-4f57-9a8a-2dd98b3048a9"
                                }
                              }
                            ],
                            "id": "1be44329-3c7c-4dbe-ba8a-7d26364a4ef8",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"tescobill\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-1be44329-3c7c-4dbe-ba8a-7d26364a4ef8"
                          }
                        ],
                        "id": "908d8d63-4c99-411d-a6fd-abfe19006bbc",
                        "uid": "10462328-908d8d63-4c99-411d-a6fd-abfe19006bbc"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create tescobill payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "9a6cd19b-05a8-41aa-a55d-abf2fbd0a449"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "da107d07-278f-45d9-a111-e642b0f07bb4"
                                }
                              }
                            ],
                            "id": "8f787749-9838-40e3-b801-f740814bad7c",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"tescobill\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-8f787749-9838-40e3-b801-f740814bad7c"
                          }
                        ],
                        "id": "a1de7b2d-f37a-4d37-b4f5-a40bc1f103a4",
                        "uid": "10462328-a1de7b2d-f37a-4d37-b4f5-a40bc1f103a4"
                      }
                    ],
                    "id": "958a59b6-ae04-4823-812a-208958a43e9e",
                    "uid": "10462328-958a59b6-ae04-4823-812a-208958a43e9e"
                  },
                  {
                    "name": "Shopeepay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b8065dc5-d5ae-4f7b-a1ab-d3a690e8c1df"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6af3eed5-fb0e-4262-a01e-48c25255d004"
                                }
                              }
                            ],
                            "id": "32a198df-0e56-444d-a575-64555d46fd79",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"THB\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"66123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-32a198df-0e56-444d-a575-64555d46fd79"
                          }
                        ],
                        "id": "bfd6a8ec-af7c-4a96-8b2b-9c55037a7f8e",
                        "uid": "10462328-bfd6a8ec-af7c-4a96-8b2b-9c55037a7f8e"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8f0bc15b-f722-425f-a89c-8a9835330dd2"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4385da01-f003-4d2e-a94b-87c8ce0f3015"
                                }
                              }
                            ],
                            "id": "fc64fdee-a1f7-40cf-8963-2520762d26f1",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"THB\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"66123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-fc64fdee-a1f7-40cf-8963-2520762d26f1"
                          }
                        ],
                        "id": "c5b8f9af-30f0-4efc-b476-f7bff9fd4eaa",
                        "uid": "10462328-c5b8f9af-30f0-4efc-b476-f7bff9fd4eaa"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create Shopeepay payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "9df3aa36-3856-4cb5-b27b-ca058b646de7"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "227c8390-5cce-4f68-94d1-03fe4ef9fce9"
                                }
                              }
                            ],
                            "id": "1b851a28-15b0-4884-ac1c-439205855798",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"THB\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"66123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-1b851a28-15b0-4884-ac1c-439205855798"
                          }
                        ],
                        "id": "54c07d34-cbfd-41ea-8018-4c80f23c7dd5",
                        "uid": "10462328-54c07d34-cbfd-41ea-8018-4c80f23c7dd5"
                      }
                    ],
                    "id": "acbc525a-81db-413e-8018-179f6a01a9b2",
                    "uid": "10462328-acbc525a-81db-413e-8018-179f6a01a9b2"
                  }
                ],
                "id": "c1cc1b20-8940-4c21-8733-e764260d1091",
                "uid": "10462328-c1cc1b20-8940-4c21-8733-e764260d1091"
              },
              {
                "name": "South Korea",
                "item": [
                  {
                    "name": "Bank transfer South Korea",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "f6da5905-6eb6-4040-8a24-152ae01b6215",
                        "uid": "10462328-f6da5905-6eb6-4040-8a24-152ae01b6215"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "4089ffcf-249d-426c-a7c1-2953f5af7b60",
                        "uid": "10462328-4089ffcf-249d-426c-a7c1-2953f5af7b60"
                      }
                    ],
                    "id": "8bbd0050-33b0-4eb4-845a-c3cc9edb0b57",
                    "uid": "10462328-8bbd0050-33b0-4eb4-845a-c3cc9edb0b57"
                  },
                  {
                    "name": "NaverPay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create naverpay payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "79907c5a-3b66-4932-8c25-d90befbacb39"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6616839d-bf8b-4b76-8915-9aaacfe71879"
                                }
                              }
                            ],
                            "id": "b38689b2-a87b-4133-b326-81e505dec2ef",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n             \"items\": [\n            {\n                \"count\": 2,\n                \"name\": \"bread\",\n                \"price\": 100\n            }\n        ]\n    },\n    \"payment_method\": \"naverpay\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"KRW\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-b38689b2-a87b-4133-b326-81e505dec2ef"
                          }
                        ],
                        "id": "b88cf3b0-6f3f-44c9-b223-bc3986699e38",
                        "uid": "10462328-b88cf3b0-6f3f-44c9-b223-bc3986699e38"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create naverpay payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f525d217-cf1a-4d6a-90d0-b3705d7a99c2"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e8e2dde5-03af-47b4-89de-112f05d5b05d"
                                }
                              }
                            ],
                            "id": "065d4c98-4b09-448a-bbe4-e0ca379f7182",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n             \"items\": [\n            {\n                \"count\": 2,\n                \"name\": \"bread\",\n                \"price\": 100\n            }\n        ]\n    },\n    \"payment_method\": \"naverpay\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"KRW\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-065d4c98-4b09-448a-bbe4-e0ca379f7182"
                          }
                        ],
                        "id": "26c4e01b-2729-456b-bf52-6b11a5f07c7e",
                        "uid": "10462328-26c4e01b-2729-456b-bf52-6b11a5f07c7e"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create naverpay payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0e008a90-90d1-49ed-a5ad-0809b94eb5c9"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b6935a67-94bb-4b70-a4e0-18d2f0cadc19"
                                }
                              }
                            ],
                            "id": "27ebaae2-0032-4c0d-9b08-d8fab38b239c",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\",\n        \"items\":[\n            {\n                \"name\": \"Apple\",\n                \"count\": \"10\",\n                \"price\": 10\n            }\n        ]\n    },\n    \"payment_method\": \"NAVERPAY\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"KRW\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-27ebaae2-0032-4c0d-9b08-d8fab38b239c"
                          }
                        ],
                        "id": "e186379f-e772-4ab5-a333-91e6261edf3d",
                        "uid": "10462328-e186379f-e772-4ab5-a333-91e6261edf3d"
                      }
                    ],
                    "id": "84fa79be-4cdf-4c3c-84ef-cfde9f3e83a8",
                    "uid": "10462328-84fa79be-4cdf-4c3c-84ef-cfde9f3e83a8"
                  }
                ],
                "id": "aa19dc25-2a37-4518-a8ad-1f007beb57a8",
                "uid": "10462328-aa19dc25-2a37-4518-a8ad-1f007beb57a8"
              },
              {
                "name": "Indonesia",
                "item": [
                  {
                    "name": "Alfa VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create ALFAVA payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d3a7cea3-f05b-4322-9267-39251f9e5c09"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "3a377761-4818-44cb-862c-ed4c18def39e"
                                }
                              }
                            ],
                            "id": "2866ef53-70c3-4bfe-a621-b85f2e70fcfa",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALFAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-2866ef53-70c3-4bfe-a621-b85f2e70fcfa"
                          }
                        ],
                        "id": "8e022ebc-e450-4f76-a9f3-e43116dbe4ac",
                        "uid": "10462328-8e022ebc-e450-4f76-a9f3-e43116dbe4ac"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create ALFAVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ad08521b-0e97-4e8e-9f31-99a65fa6eecb"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "555a1953-05ea-431f-9a6e-e227b34e6ace"
                                }
                              }
                            ],
                            "id": "4cdeaea2-171a-4683-8788-a0b9e974d11f",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALFAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-4cdeaea2-171a-4683-8788-a0b9e974d11f"
                          }
                        ],
                        "id": "d5c3bf4c-f88e-4dfc-a997-6375e704e23e",
                        "uid": "10462328-d5c3bf4c-f88e-4dfc-a997-6375e704e23e"
                      }
                    ],
                    "id": "2d65976a-c4b3-4690-afc8-c98e61ea833f",
                    "uid": "10462328-2d65976a-c4b3-4690-afc8-c98e61ea833f"
                  },
                  {
                    "name": "CIMB VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create CIMBVA payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0d698b08-901a-4f5a-b9f7-a90a3350e5a2"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5e685524-2ae0-475f-bf81-4334cfb29659"
                                }
                              }
                            ],
                            "id": "0c2250c4-1845-4881-95a3-2c12905c84a7",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CIMBVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-0c2250c4-1845-4881-95a3-2c12905c84a7"
                          }
                        ],
                        "id": "09fd9ed2-c02b-4e54-ad82-1d78df3ce8a8",
                        "uid": "10462328-09fd9ed2-c02b-4e54-ad82-1d78df3ce8a8"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create CIMBVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ad5485ff-b5f3-4ee4-a1c2-7ccc1481d75b"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "75f723e7-a3dd-4e5a-ad2d-ffd0dfd546c9"
                                }
                              }
                            ],
                            "id": "6e02bd70-df63-4d14-b47c-5fbfaba18ed6",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CIMBVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-6e02bd70-df63-4d14-b47c-5fbfaba18ed6"
                          }
                        ],
                        "id": "6fa537e5-bac8-458c-af57-ddef9f3f4576",
                        "uid": "10462328-6fa537e5-bac8-458c-af57-ddef9f3f4576"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create CIMBVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "76ec219a-a6f1-4c38-b735-78be7133acc7"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "852f7a00-1cac-4042-8b1f-082e01d91271"
                                }
                              }
                            ],
                            "id": "54274f8a-5681-4146-b675-4021b0b20953",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CIMBVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-54274f8a-5681-4146-b675-4021b0b20953"
                          }
                        ],
                        "id": "b61ea463-817b-4ba0-95e2-253713ad5b1c",
                        "uid": "10462328-b61ea463-817b-4ba0-95e2-253713ad5b1c"
                      }
                    ],
                    "id": "07ecb5ab-b1e7-48b7-b938-b0bae04ffae9",
                    "uid": "10462328-07ecb5ab-b1e7-48b7-b938-b0bae04ffae9"
                  },
                  {
                    "name": "Danamon VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "50ddb668-04da-425f-b8c6-d70162d9059c",
                        "uid": "10462328-50ddb668-04da-425f-b8c6-d70162d9059c"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "97360219-21a7-4a74-b6ea-af1091fe05bf",
                        "uid": "10462328-97360219-21a7-4a74-b6ea-af1091fe05bf"
                      }
                    ],
                    "id": "42ccd1c1-47ba-4beb-a9ca-b8e27dcd3c82",
                    "uid": "10462328-42ccd1c1-47ba-4beb-a9ca-b8e27dcd3c82"
                  },
                  {
                    "name": "Permata VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create PERMATAVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "47f37742-987e-46b1-aefc-eb9c472c8ee6"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "41ec48f4-ac51-4a3c-9040-a562ba42f87e"
                                }
                              }
                            ],
                            "id": "3e7335f8-802e-4c77-9671-f1b0ea1b2d59",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PERMATAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-3e7335f8-802e-4c77-9671-f1b0ea1b2d59"
                          }
                        ],
                        "id": "ef18a334-83c3-486a-b2c8-0b437c72789b",
                        "uid": "10462328-ef18a334-83c3-486a-b2c8-0b437c72789b"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create PERMATAVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "9be6d587-e318-478b-bff6-226c7058fafb"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "304362ee-5261-4fd9-8906-6862a63b6fbc"
                                }
                              }
                            ],
                            "id": "305750a2-0550-47e3-83c5-ca38261c0f5b",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PERMATAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-305750a2-0550-47e3-83c5-ca38261c0f5b"
                          }
                        ],
                        "id": "8146727a-f01e-4df5-9185-3e663ac38ddb",
                        "uid": "10462328-8146727a-f01e-4df5-9185-3e663ac38ddb"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create PERMATAVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "41ee4321-4265-491a-a986-d4f3c50ded30"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c83bc495-3e34-484a-9a0b-c013bbdde3cd"
                                }
                              }
                            ],
                            "id": "a4fde80a-cb72-4de0-b2b2-3bbd61e262fc",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PERMATAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-a4fde80a-cb72-4de0-b2b2-3bbd61e262fc"
                          }
                        ],
                        "id": "4903e416-ecd6-40f7-86be-bc55492b627a",
                        "uid": "10462328-4903e416-ecd6-40f7-86be-bc55492b627a"
                      }
                    ],
                    "id": "e6056d30-c0af-4278-a03e-e4f6562d210f",
                    "uid": "10462328-e6056d30-c0af-4278-a03e-e4f6562d210f"
                  },
                  {
                    "name": "Mandiri VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create MANDIRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8bf05e4a-6480-4469-9f81-f957aeba9d7f"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "460c2f2f-d781-46d3-a4eb-5854cbea09f0"
                                }
                              }
                            ],
                            "id": "2e407015-2cb4-4019-9e7f-8b575a32789a",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MANDIRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-2e407015-2cb4-4019-9e7f-8b575a32789a"
                          }
                        ],
                        "id": "fac802cc-a12f-4e0f-b931-331820d58e12",
                        "uid": "10462328-fac802cc-a12f-4e0f-b931-331820d58e12"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create MANDIRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e3599132-a762-4ec3-9a8f-18032bdbd126"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "345d3db9-1b10-495f-9b1e-752a50e94687"
                                }
                              }
                            ],
                            "id": "c17c3233-7c8c-4b55-b0bc-8713beb3aacb",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MANDIRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-c17c3233-7c8c-4b55-b0bc-8713beb3aacb"
                          }
                        ],
                        "id": "d949ac3a-4b2c-456b-b371-33d9f44614fe",
                        "uid": "10462328-d949ac3a-4b2c-456b-b371-33d9f44614fe"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create MANDIRIVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6a94f97d-8fc7-42cf-8446-cbfcdb10d6ad"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e3ec51e2-03e9-41ca-879d-39d67be6afad"
                                }
                              }
                            ],
                            "id": "0ccc05df-6757-4dc7-859f-29c89d490086",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MANDIRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-0ccc05df-6757-4dc7-859f-29c89d490086"
                          }
                        ],
                        "id": "94331a17-c029-4e91-a535-64b52d5389a5",
                        "uid": "10462328-94331a17-c029-4e91-a535-64b52d5389a5"
                      }
                    ],
                    "id": "fc36aaf4-be0a-42a9-921c-d3859f4df0f6",
                    "uid": "10462328-fc36aaf4-be0a-42a9-921c-d3859f4df0f6"
                  },
                  {
                    "name": "Permata Internet Banking",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "829b69ac-f5da-4d5e-bb3c-8ff98c2b5602",
                        "uid": "10462328-829b69ac-f5da-4d5e-bb3c-8ff98c2b5602"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "54d8622a-31e7-45f7-9b17-497694e059c7",
                        "uid": "10462328-54d8622a-31e7-45f7-9b17-497694e059c7"
                      }
                    ],
                    "id": "62efb9ce-afc5-4f03-bd6e-22ee8bd1882e",
                    "uid": "10462328-62efb9ce-afc5-4f03-bd6e-22ee8bd1882e"
                  },
                  {
                    "name": "DOKU Wallet",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DOKUWALLET payment(gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8e91bcca-ee87-4d96-bb44-97b5cd466732"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ca73cfde-29fa-4af9-8b8b-4b7021196a8c"
                                }
                              }
                            ],
                            "id": "84e7e6cf-a106-48b9-835c-6801561aa4cd",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"DOKUWALLET\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-84e7e6cf-a106-48b9-835c-6801561aa4cd"
                          }
                        ],
                        "id": "f8a11e2d-abd8-408f-b297-5d4fb0c723d8",
                        "uid": "10462328-f8a11e2d-abd8-408f-b297-5d4fb0c723d8"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create DOKUWALLET payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "3697e63b-5258-48f0-afb1-65e15aa51322"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f4c8a4df-f9ea-442f-9086-1e1e3b69fb80"
                                }
                              }
                            ],
                            "id": "7e69abd4-4c1c-4676-897d-d9aa647dac50",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"DOKUWALLET\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-7e69abd4-4c1c-4676-897d-d9aa647dac50"
                          }
                        ],
                        "id": "fef76aa3-ed13-418f-a87c-3ba77b8a44d8",
                        "uid": "10462328-fef76aa3-ed13-418f-a87c-3ba77b8a44d8"
                      }
                    ],
                    "id": "9cf2fb06-0856-474a-aeb2-56f0b8fcbbf6",
                    "uid": "10462328-9cf2fb06-0856-474a-aeb2-56f0b8fcbbf6"
                  },
                  {
                    "name": "BNI VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BNIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e1248a38-ec7b-4078-9a54-d7a0779c22e8"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e275c568-3766-43b6-8cb6-7e6ba9c3522e"
                                }
                              }
                            ],
                            "id": "f0c49f0e-b774-4cda-b879-076affbc7fe0",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BNIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-f0c49f0e-b774-4cda-b879-076affbc7fe0"
                          }
                        ],
                        "id": "48d817c9-5680-4ee5-a798-c0ffd41ebfd8",
                        "uid": "10462328-48d817c9-5680-4ee5-a798-c0ffd41ebfd8"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BNIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "fe0b676c-4b55-4455-a161-cd60197aef2d"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6f67db46-acb0-4e5a-8e3a-fc8d127a6734"
                                }
                              }
                            ],
                            "id": "4d140822-301b-48b7-ae91-a6593f04f3f6",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BNIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-4d140822-301b-48b7-ae91-a6593f04f3f6"
                          }
                        ],
                        "id": "6a9e275e-95f1-4b26-837e-7b9327dd2e42",
                        "uid": "10462328-6a9e275e-95f1-4b26-837e-7b9327dd2e42"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BNIVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "49e78e2a-714c-4d12-8ab2-813aaf4a7112"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "47e9370e-c7fc-4459-a722-865c82a45fbd"
                                }
                              }
                            ],
                            "id": "a0deab27-4f43-4ea5-a6bb-16716419138f",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BNIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-a0deab27-4f43-4ea5-a6bb-16716419138f"
                          }
                        ],
                        "id": "79661bd2-4de9-4b7b-877a-43397738aead",
                        "uid": "10462328-79661bd2-4de9-4b7b-877a-43397738aead"
                      }
                    ],
                    "id": "8650f8bc-1603-47ae-b9a3-1f7e22ded820",
                    "uid": "10462328-8650f8bc-1603-47ae-b9a3-1f7e22ded820"
                  },
                  {
                    "name": "BRI VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "020a5d4a-b067-4a5f-b69d-7945d8497ee9"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "70432e55-f133-44db-b6ec-493f1475bc27"
                                }
                              }
                            ],
                            "id": "2042157a-ecfc-4384-bccd-b64c0118bcb1",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-2042157a-ecfc-4384-bccd-b64c0118bcb1"
                          }
                        ],
                        "id": "769e0ee3-6dc7-465e-83e5-b4713f5744f8",
                        "uid": "10462328-769e0ee3-6dc7-465e-83e5-b4713f5744f8"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7258d913-c366-4b8e-a93b-fe1658ca7b27"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c566604e-3ca2-4291-a358-1c3e805f0862"
                                }
                              }
                            ],
                            "id": "952539b8-819f-4ed1-b192-dc71fbd976a2",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-952539b8-819f-4ed1-b192-dc71fbd976a2"
                          }
                        ],
                        "id": "395b3151-5a63-4341-a196-2b454591d6d0",
                        "uid": "10462328-395b3151-5a63-4341-a196-2b454591d6d0"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BRIVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c4a21344-7185-4be5-b6be-4506ec0c91d4"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f0095903-f97d-4268-bcea-36391c8c5a37"
                                }
                              }
                            ],
                            "id": "82695f7d-81fe-49ef-a4fb-8b93313f3c8d",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-82695f7d-81fe-49ef-a4fb-8b93313f3c8d"
                          }
                        ],
                        "id": "6a9078a4-5153-4d46-8a58-ea3cf779da90",
                        "uid": "10462328-6a9078a4-5153-4d46-8a58-ea3cf779da90"
                      }
                    ],
                    "id": "d7913230-584f-4073-80e4-0556ef189903",
                    "uid": "10462328-d7913230-584f-4073-80e4-0556ef189903"
                  },
                  {
                    "name": "DANA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DANA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "94d1d5d8-7a91-4c4f-a2e7-743beb6b2f28"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                                    "        pm.expect(response_after_redirect.code).to.equal(200);",
                                    "    });",
                                    "    ",
                                    " pm.collectionVariables.set('payment_id_for_refund_dana', response.payment_data.id);",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e8897bd9-5bbf-432a-92e8-574512b34e57"
                                }
                              }
                            ],
                            "id": "054c045d-e18b-4458-a9e8-8900f4d0719e",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DANA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-054c045d-e18b-4458-a9e8-8900f4d0719e"
                          }
                        ],
                        "id": "dcbeede4-4d7e-46d1-850b-6c0b524c3910",
                        "uid": "10462328-dcbeede4-4d7e-46d1-850b-6c0b524c3910"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create DANA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8bdfaad2-d2ab-45ed-a575-1e795944a35c"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "   ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "62cb522f-0747-4acd-888a-89460446c786"
                                }
                              }
                            ],
                            "id": "37055042-e0fa-42ea-849b-eace914807e7",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DANA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-37055042-e0fa-42ea-849b-eace914807e7"
                          }
                        ],
                        "id": "3e84d520-5d7c-41c4-98ce-b8a5e34371e4",
                        "uid": "10462328-3e84d520-5d7c-41c4-98ce-b8a5e34371e4"
                      },
                      {
                        "name": "Refunds",
                        "item": [
                          {
                            "name": "Create DANA Refund",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var moment = require('moment');",
                                    "pm.variables.set(\"request_time\", moment().toISOString());",
                                    "",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                                    "",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a2183128-e180-4ced-bd20-09b9d4b64f4b"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "   ",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "  ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f1888f06-273d-4396-88d3-d8368b0dda2f"
                                }
                              }
                            ],
                            "id": "29f2b56d-955b-48ff-ac7d-613d1c750fa4",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund_dana}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "refunds"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-29f2b56d-955b-48ff-ac7d-613d1c750fa4"
                          }
                        ],
                        "id": "88cf0af8-f2f5-4e16-9b73-ee1c48718ffc",
                        "uid": "10462328-88cf0af8-f2f5-4e16-9b73-ee1c48718ffc"
                      }
                    ],
                    "id": "41a64cf0-07cd-417c-a9d2-b2150c0b53d7",
                    "uid": "10462328-41a64cf0-07cd-417c-a9d2-b2150c0b53d7"
                  },
                  {
                    "name": "OVO",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVO payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "1b5d2ba2-c15b-4e44-9355-91ac320666b0"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "     pm.collectionVariables.set('payment_id_for_refund_ovo', response.payment_data.id);",
                                    "});",
                                    ""
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "3b9c45a6-440d-4211-8397-976c5530541b"
                                }
                              }
                            ],
                            "id": "b8538f3b-0798-41d9-8da0-5ad5e6238207",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVO\",\n    \"payment_data\": {\n        \"amount\": \"101\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-b8538f3b-0798-41d9-8da0-5ad5e6238207"
                          }
                        ],
                        "id": "cf410b04-0118-4388-9789-d4c29fe90366",
                        "uid": "10462328-cf410b04-0118-4388-9789-d4c29fe90366"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create OVO payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "36633f9d-d3c3-440e-b0a3-2cceaa5d8fe1"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "1fddfbea-900e-4256-b23a-ebcb83003c63"
                                }
                              }
                            ],
                            "id": "cab6b47c-a42a-411e-976a-2aab297540a4",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVO\",\n    \"payment_data\": {\n        \"amount\": \"101\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-cab6b47c-a42a-411e-976a-2aab297540a4"
                          }
                        ],
                        "id": "112fab12-3259-4aa0-b102-931d0ec9d15d",
                        "uid": "10462328-112fab12-3259-4aa0-b102-931d0ec9d15d"
                      },
                      {
                        "name": "Refunds",
                        "item": [
                          {
                            "name": "Create OVO Refund",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var moment = require('moment');",
                                    "pm.variables.set(\"request_time\", moment().toISOString());",
                                    "",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                                    "",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c651abbb-d5c9-4e84-b15a-5709ac5818fd"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.refund_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_refund_id', response.refund_data.id);",
                                    "    ",
                                    "    postman.setNextRequest('Get refund by merchant order id');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "bfe96f91-87c5-4059-960a-83df93efbb79"
                                }
                              }
                            ],
                            "id": "c6917c8f-9157-4611-a40f-cb1842ecfd29",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund_ovo}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "refunds"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-c6917c8f-9157-4611-a40f-cb1842ecfd29"
                          }
                        ],
                        "id": "422e9490-87b4-4e74-bc79-3283928c1fbc",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "type": "text/javascript",
                              "packages": {},
                              "exec": [
                                ""
                              ],
                              "id": "6c5ce120-491e-4e9c-8072-24d2ce572b73"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "type": "text/javascript",
                              "packages": {},
                              "exec": [
                                ""
                              ],
                              "id": "2c4013dd-cc6f-4f28-b82d-9c32cf0c2a63"
                            }
                          }
                        ],
                        "uid": "10462328-422e9490-87b4-4e74-bc79-3283928c1fbc"
                      }
                    ],
                    "id": "9a9735ab-55a5-4369-9847-69f3fd08af6c",
                    "uid": "10462328-9a9735ab-55a5-4369-9847-69f3fd08af6c"
                  },
                  {
                    "name": "LINKAJA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create LINKAJA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7ec2cac1-0ec2-409d-89d4-5dde98805006"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a258da1e-ece7-4fec-951a-bf09fd171bad"
                                }
                              }
                            ],
                            "id": "6700b99c-6861-4e46-8563-2bb96864d4c7",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"LINKAJA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-6700b99c-6861-4e46-8563-2bb96864d4c7"
                          }
                        ],
                        "id": "a9490a13-9cd0-42ad-b8fa-e26fcf68c8d7",
                        "uid": "10462328-a9490a13-9cd0-42ad-b8fa-e26fcf68c8d7"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create LINKAJA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d1e89137-5f9b-48d4-af01-ef3eadb5fcb1"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "34193107-f480-4cff-9e18-4264eeed55f7"
                                }
                              }
                            ],
                            "id": "7c2d7271-bf3e-46e8-b97c-3bbaee6c94ec",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"LINKAJA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-7c2d7271-bf3e-46e8-b97c-3bbaee6c94ec"
                          }
                        ],
                        "id": "89a8a505-7a50-4613-bac6-795bdd13f9fd",
                        "uid": "10462328-89a8a505-7a50-4613-bac6-795bdd13f9fd"
                      }
                    ],
                    "id": "493843e9-197f-427e-af06-f95308ad77e8",
                    "uid": "10462328-493843e9-197f-427e-af06-f95308ad77e8"
                  },
                  {
                    "name": "SHOPEEPAY",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create SHOPEEPAY payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7fcffdc8-8993-4c45-b7d1-14257c8f5d7b"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "     pm.collectionVariables.set('payment_id_for_refund_shopee', response.payment_data.id);",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a71e7a56-1090-406e-a950-1ef1be829d66"
                                }
                              }
                            ],
                            "id": "57dd65b8-4d6b-4104-9bd9-dc40a14c31bc",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-57dd65b8-4d6b-4104-9bd9-dc40a14c31bc"
                          }
                        ],
                        "id": "ca2f6aba-39f0-4f64-860e-1216d954a468",
                        "uid": "10462328-ca2f6aba-39f0-4f64-860e-1216d954a468"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create SHOPEEPAY payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "53901afc-f63f-4444-857e-14b6e1a34e00"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "bc0ac68f-8e28-414b-bd16-2ab23df6affa"
                                }
                              }
                            ],
                            "id": "9ca4f1bc-7ad9-4404-805f-7a20f50fcf8d",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-9ca4f1bc-7ad9-4404-805f-7a20f50fcf8d"
                          }
                        ],
                        "id": "d5e32a43-0d4c-4b06-9aa1-632a0f558a92",
                        "uid": "10462328-d5e32a43-0d4c-4b06-9aa1-632a0f558a92"
                      },
                      {
                        "name": "Refunds",
                        "item": [
                          {
                            "name": "Create ShopeePay Refund",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var moment = require('moment');",
                                    "pm.variables.set(\"request_time\", moment().toISOString());",
                                    "",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                                    "",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ab34e565-e1d4-4e9b-a351-1a1cff45ef32"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "   ",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "  ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "078080f3-b907-4752-9376-8cdc20cd0a39"
                                }
                              }
                            ],
                            "id": "bf14c561-ee0e-455a-9e52-78301a539c98",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund_shopee}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "refunds"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-bf14c561-ee0e-455a-9e52-78301a539c98"
                          }
                        ],
                        "id": "e8917e4c-a1ca-47b9-8199-b2d1793eea4a",
                        "uid": "10462328-e8917e4c-a1ca-47b9-8199-b2d1793eea4a"
                      }
                    ],
                    "id": "b31eb802-b15d-4177-9847-71949924a126",
                    "uid": "10462328-b31eb802-b15d-4177-9847-71949924a126"
                  },
                  {
                    "name": "QRIS",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create QRIS payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "21c669b8-11b9-4fdb-8dfd-757d9594464c"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.collectionVariables.set('payment_id_for_refund_qris', response.payment_data.id);",
                                    "});",
                                    " "
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4b20eb02-90db-40b1-91eb-b074e04144a3"
                                }
                              }
                            ],
                            "id": "6ef57cb6-03c9-45a3-b4fc-d6d3736b3520",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"QRIS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-6ef57cb6-03c9-45a3-b4fc-d6d3736b3520"
                          }
                        ],
                        "id": "5338024c-d1c9-4365-9329-d84f4ecda340",
                        "uid": "10462328-5338024c-d1c9-4365-9329-d84f4ecda340"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create QRIS payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "3c6f5347-9202-4a93-892a-a6d4b0b7577e"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5a667038-8ad2-434c-9677-0b251f4920a8"
                                }
                              }
                            ],
                            "id": "173bca37-a928-4ea6-b838-f3663b831ab5",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"QRIS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-173bca37-a928-4ea6-b838-f3663b831ab5"
                          }
                        ],
                        "id": "8e92266c-139b-4836-8640-9127ab3fefc7",
                        "uid": "10462328-8e92266c-139b-4836-8640-9127ab3fefc7"
                      },
                      {
                        "name": "Refunds",
                        "item": [
                          {
                            "name": "Create QRIS Refund",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var moment = require('moment');",
                                    "pm.variables.set(\"request_time\", moment().toISOString());",
                                    "",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                                    "",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f3c3a4b5-6544-4452-a3a4-1ba9370de4ed"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "   ",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "  ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a4ef0710-a8a2-478a-a7d7-2a140f1fd737"
                                }
                              }
                            ],
                            "id": "48c42d8b-907c-40d8-867d-ca78d41def18",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund_qris}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "refunds"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-48c42d8b-907c-40d8-867d-ca78d41def18"
                          }
                        ],
                        "id": "8d32e3fc-616f-4d4a-bb0a-30fa67612def",
                        "uid": "10462328-8d32e3fc-616f-4d4a-bb0a-30fa67612def"
                      }
                    ],
                    "id": "42e09bbf-16a6-47de-b0cf-506dd742981e",
                    "uid": "10462328-42e09bbf-16a6-47de-b0cf-506dd742981e"
                  },
                  {
                    "name": "PANINVA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create PANINVA payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8a2ca35c-db48-446e-837b-4e423558602e"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b8ed9be7-a86d-4792-91c8-1251b0ff3043"
                                }
                              }
                            ],
                            "id": "721601fe-555f-4302-9e0f-b6b72430dc43",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PANINVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-721601fe-555f-4302-9e0f-b6b72430dc43"
                          }
                        ],
                        "id": "206085ff-9c99-48a2-874c-9ecf16f24997",
                        "uid": "10462328-206085ff-9c99-48a2-874c-9ecf16f24997"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create PANINVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ebb7ebd2-e505-44bc-9986-d7c87c4b3d53"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7b542826-2ad9-4104-953f-6556a0be0825"
                                }
                              }
                            ],
                            "id": "f18619c5-f81f-4cfc-9c97-70d9a321bb7d",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PANINVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-f18619c5-f81f-4cfc-9c97-70d9a321bb7d"
                          }
                        ],
                        "id": "9ce28ed4-e939-4be0-a12c-910a00347df2",
                        "uid": "10462328-9ce28ed4-e939-4be0-a12c-910a00347df2"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create PANINVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4f087c1b-8f8d-4b2d-a3b4-c4f95141e11c"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f380ce1a-413a-48d1-94d3-d8abcd25e7a8"
                                }
                              }
                            ],
                            "id": "23061bc5-e4a0-4dc5-8a10-63c0ab78cbd9",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PANINVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-23061bc5-e4a0-4dc5-8a10-63c0ab78cbd9"
                          }
                        ],
                        "id": "d0f61665-8b15-497d-ab1b-1336c442ab61",
                        "uid": "10462328-d0f61665-8b15-497d-ab1b-1336c442ab61"
                      }
                    ],
                    "id": "f1d42e7f-fa21-48ec-b55b-bbd17a46f615",
                    "uid": "10462328-f1d42e7f-fa21-48ec-b55b-bbd17a46f615"
                  },
                  {
                    "name": "DANAWALLET",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create danawallet payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8c4941e5-4436-4d55-b9fb-88ab72aceb16"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d0959d19-0898-4a92-bcbe-4b24c98de7ba"
                                }
                              }
                            ],
                            "id": "a2044463-6d72-470d-9561-75d4a649d2d7",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"danawallet\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-a2044463-6d72-470d-9561-75d4a649d2d7"
                          }
                        ],
                        "id": "834f89bf-40a4-4c35-bbc9-f979a0b4652f",
                        "uid": "10462328-834f89bf-40a4-4c35-bbc9-f979a0b4652f"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create danawallet payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a65004c8-b595-43f0-a648-e0cdf0dea537"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2c7c4da0-decf-477d-bc90-9058015e0c7a"
                                }
                              }
                            ],
                            "id": "26d2c973-a7cb-4568-b91a-e587db3eb295",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"danawallet\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-26d2c973-a7cb-4568-b91a-e587db3eb295"
                          }
                        ],
                        "id": "43d91dca-ee40-4080-b20b-db99565de16e",
                        "uid": "10462328-43d91dca-ee40-4080-b20b-db99565de16e"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create danawallet payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c784990e-39cd-441d-9aae-68a9d193026c"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "3085ae45-fb61-440f-b40d-3cc51bd71d24"
                                }
                              }
                            ],
                            "id": "7d9d1da2-2d1b-43a0-b612-7654877448f0",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"danawallet\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-7d9d1da2-2d1b-43a0-b612-7654877448f0"
                          }
                        ],
                        "id": "1ddaf636-2c45-490b-9899-8a19abdaa928",
                        "uid": "10462328-1ddaf636-2c45-490b-9899-8a19abdaa928"
                      }
                    ],
                    "id": "93fee0df-80ac-4d1b-af34-be903d2a085e",
                    "uid": "10462328-93fee0df-80ac-4d1b-af34-be903d2a085e"
                  },
                  {
                    "name": "BTPN",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BTPNVA payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "19346fb0-e151-4b22-92e2-ac08c952226c"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "77635a33-142f-4849-91f4-07c6c32554ce"
                                }
                              }
                            ],
                            "id": "cd672963-79c8-4d8f-8e4b-bf1dd66ff903",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BTPNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-cd672963-79c8-4d8f-8e4b-bf1dd66ff903"
                          }
                        ],
                        "id": "8d46f426-8d38-406e-9083-6afb43411daa",
                        "uid": "10462328-8d46f426-8d38-406e-9083-6afb43411daa"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BTPNVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a6a5f8c9-e2a2-492d-8c12-7133bdff989d"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "cc272c45-548f-43a6-91c8-2e689f62a396"
                                }
                              }
                            ],
                            "id": "817ff523-cbb4-48cd-b458-3da6d22f6ecf",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BTPNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-817ff523-cbb4-48cd-b458-3da6d22f6ecf"
                          }
                        ],
                        "id": "c5ac3941-e033-4ae5-8276-aa5f8802d47b",
                        "uid": "10462328-c5ac3941-e033-4ae5-8276-aa5f8802d47b"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BTPNVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7b49dde8-cc20-4ebe-b778-4a74655889c2"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7cb7312d-5d66-404e-8639-e00d90f9dc73"
                                }
                              }
                            ],
                            "id": "a996d071-ae91-4d53-a77f-0fbe98b49b0f",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BTPNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-a996d071-ae91-4d53-a77f-0fbe98b49b0f"
                          }
                        ],
                        "id": "c0978dd2-03a2-4846-9ba3-7f037222507d",
                        "uid": "10462328-c0978dd2-03a2-4846-9ba3-7f037222507d"
                      }
                    ],
                    "id": "34ec70ac-3120-498f-b77c-3703e916f24c",
                    "uid": "10462328-34ec70ac-3120-498f-b77c-3703e916f24c"
                  },
                  {
                    "name": "BCA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BCAVA payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d0237028-cbd7-41e5-85f2-1a0d54c08d45"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b7d149c0-c5a8-4674-8343-1fa7b4525636"
                                }
                              }
                            ],
                            "id": "64aa6965-6a58-4641-8462-f4f65f7c3fc1",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BCAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-64aa6965-6a58-4641-8462-f4f65f7c3fc1"
                          }
                        ],
                        "id": "12407698-7c24-4323-8a0f-e26a9c966141",
                        "uid": "10462328-12407698-7c24-4323-8a0f-e26a9c966141"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BCAVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "3ce418f5-3d7a-45f0-813d-57fd8739b497"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5f21463d-b655-46b3-9786-96916c898019"
                                }
                              }
                            ],
                            "id": "b95bbe7e-8181-4bdc-8f68-e01de80baafc",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BCAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-b95bbe7e-8181-4bdc-8f68-e01de80baafc"
                          }
                        ],
                        "id": "5192f37e-99ed-45a4-840a-7a13949cdb04",
                        "uid": "10462328-5192f37e-99ed-45a4-840a-7a13949cdb04"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BCAVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "185c7b19-0efb-4036-aeac-9d793fe5d078"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "9d096669-8a0c-4515-9917-4b3a8cf95287"
                                }
                              }
                            ],
                            "id": "06a273dc-0a57-48fc-9626-e4cd75e42118",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BCAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-06a273dc-0a57-48fc-9626-e4cd75e42118"
                          }
                        ],
                        "id": "accf23a4-2bd0-46fc-a85a-de01009dd4ab",
                        "uid": "10462328-accf23a4-2bd0-46fc-a85a-de01009dd4ab"
                      }
                    ],
                    "id": "0559fa6d-42fa-4c2a-92aa-3293b0bfe56e",
                    "uid": "10462328-0559fa6d-42fa-4c2a-92aa-3293b0bfe56e"
                  }
                ],
                "id": "ce226f03-bc11-4c5c-862a-0b1f22157e6f",
                "uid": "10462328-ce226f03-bc11-4c5c-862a-0b1f22157e6f"
              },
              {
                "name": "Singapore",
                "item": [
                  {
                    "name": "Shopeepay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "fb4e33e1-ed8a-4263-a139-46f2d56bd352"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7c7652c4-5fcb-4ece-a56a-eb78f9f46604"
                                }
                              }
                            ],
                            "id": "f15e4b61-e327-42c2-b7f5-34ce742e68c4",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"SGD\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"651234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-f15e4b61-e327-42c2-b7f5-34ce742e68c4"
                          }
                        ],
                        "id": "96a7517c-9f24-42a3-92a6-4e6a560b351e",
                        "uid": "10462328-96a7517c-9f24-42a3-92a6-4e6a560b351e"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c588d600-e334-4aec-9f22-1fd5b94f37ab"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "878557f0-55a7-432f-95c6-81bcb9c6bf0c"
                                }
                              }
                            ],
                            "id": "bfdf5a00-3b11-43e6-9d58-e98110cac75c",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"SGD\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"651234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-bfdf5a00-3b11-43e6-9d58-e98110cac75c"
                          }
                        ],
                        "id": "37bc8e59-318e-4d87-a0de-bd138a363557",
                        "uid": "10462328-37bc8e59-318e-4d87-a0de-bd138a363557"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create Shopeepay payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4462190d-8c85-4e40-96a5-b652749eb921"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2261e3df-b84f-4374-bfaa-cff9ff43db87"
                                }
                              }
                            ],
                            "id": "c129f70c-0cdd-42b4-9b26-f18e10be43a2",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"SGD\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"651234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-c129f70c-0cdd-42b4-9b26-f18e10be43a2"
                          }
                        ],
                        "id": "96c95e89-3bb2-4a25-9fa8-8eef4e833b6b",
                        "uid": "10462328-96c95e89-3bb2-4a25-9fa8-8eef4e833b6b"
                      }
                    ],
                    "id": "f04bc63c-530e-40c0-9a79-e29d37e069c7",
                    "uid": "10462328-f04bc63c-530e-40c0-9a79-e29d37e069c7"
                  }
                ],
                "id": "341c7aec-9d2c-4672-97ca-764b38619a9f",
                "uid": "10462328-341c7aec-9d2c-4672-97ca-764b38619a9f"
              }
            ],
            "id": "bc002da9-c9a9-43bb-9c43-6628c68f4099",
            "uid": "10462328-bc002da9-c9a9-43bb-9c43-6628c68f4099"
          },
          {
            "name": "Latin America",
            "item": [
              {
                "name": "Convenience Store",
                "item": [
                  {
                    "name": "Colombia",
                    "item": [
                      {
                        "name": "Acyvalores",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create Acyvalores payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "5076f544-b20e-4958-aa38-590b6bc5fc30"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "dfc76201-c41c-42c5-b721-a512677f5ca3"
                                    }
                                  }
                                ],
                                "id": "8c48eeae-b33c-408a-9fec-41800c6deb9a",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"acyvalores\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-8c48eeae-b33c-408a-9fec-41800c6deb9a"
                              }
                            ],
                            "id": "8ad98499-4b95-4969-a124-c070851ee8e3",
                            "uid": "10462328-8ad98499-4b95-4969-a124-c070851ee8e3"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create Acyvalores payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "87505d50-58cd-449c-9aaa-9f42ffdd9bed"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "ef1e111d-ccbc-461f-9698-62a07f44c85e"
                                    }
                                  }
                                ],
                                "id": "5aff9f39-9e37-4433-abd6-91824b772581",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"acyvalores\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-5aff9f39-9e37-4433-abd6-91824b772581"
                              }
                            ],
                            "id": "e5de6f0f-28f6-4daf-8991-29e200feecb5",
                            "uid": "10462328-e5de6f0f-28f6-4daf-8991-29e200feecb5"
                          }
                        ],
                        "id": "a5dc79f1-a5e5-449b-9edc-f74be66f91f4",
                        "uid": "10462328-a5dc79f1-a5e5-449b-9edc-f74be66f91f4"
                      },
                      {
                        "name": "Daviplata",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create daviplata payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "ff35281f-a80b-46eb-92a8-b79b70d04814"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "b1bdcca2-9ca5-4599-9dd5-9dc289b4a1c1"
                                    }
                                  }
                                ],
                                "id": "d4d9e402-d216-4d30-8070-8e98329de570",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"daviplata\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-d4d9e402-d216-4d30-8070-8e98329de570"
                              }
                            ],
                            "id": "c8bc5bca-caa4-4cb9-a180-fab3e8df22f4",
                            "uid": "10462328-c8bc5bca-caa4-4cb9-a180-fab3e8df22f4"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create daviplata payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "996c1f2a-9bdb-4d0f-a0a9-061f3a169a4e"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "4f3a6f71-e517-419b-8d0a-909ffc4b172f"
                                    }
                                  }
                                ],
                                "id": "9fde3165-0925-4d6f-a94a-13fe364e4ae3",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"daviplata\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-9fde3165-0925-4d6f-a94a-13fe364e4ae3"
                              }
                            ],
                            "id": "2e876215-5549-402f-9c08-fbd51a997e18",
                            "uid": "10462328-2e876215-5549-402f-9c08-fbd51a997e18"
                          }
                        ],
                        "id": "f8c0f222-0536-401b-8b72-e83ee0ebc602",
                        "uid": "10462328-f8c0f222-0536-401b-8b72-e83ee0ebc602"
                      },
                      {
                        "name": "Fullcarga",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create fullcarga payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "dd23b484-8d34-44f0-a92a-fd25d012c0ad"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "ba9055dd-8b63-4c1e-8666-5523b0996cc2"
                                    }
                                  }
                                ],
                                "id": "cbbf0e61-e275-4294-870c-e1e9a3396ba5",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"fullcarga\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-cbbf0e61-e275-4294-870c-e1e9a3396ba5"
                              }
                            ],
                            "id": "40f23850-081a-44e0-bb94-ec0382728b94",
                            "uid": "10462328-40f23850-081a-44e0-bb94-ec0382728b94"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create fullcarga payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "e0eefb81-5a11-4cae-911c-62be473ceab6"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "5a026bf9-0803-49e5-a9ad-e69d94f9915e"
                                    }
                                  }
                                ],
                                "id": "3c9b24b5-ebec-47d3-859c-6cd8a66e049e",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"fullcarga\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-3c9b24b5-ebec-47d3-859c-6cd8a66e049e"
                              }
                            ],
                            "id": "30f1a12b-be36-4b98-a079-91cb054e446c",
                            "uid": "10462328-30f1a12b-be36-4b98-a079-91cb054e446c"
                          }
                        ],
                        "id": "15406abc-7027-4a5a-ad3c-7767e1c9b324",
                        "uid": "10462328-15406abc-7027-4a5a-ad3c-7767e1c9b324"
                      },
                      {
                        "name": "Refacil",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create refacil payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "4fceea0d-87b4-436d-b97c-47cecf08c9a0"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "b344c611-ba5a-4aac-94dc-3fa5a6dd3f7c"
                                    }
                                  }
                                ],
                                "id": "70806fb6-282f-4864-8f20-0ee5cde14575",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"fullcarga\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-70806fb6-282f-4864-8f20-0ee5cde14575"
                              }
                            ],
                            "id": "07e875b9-e375-4344-b55e-d7cec8df798f",
                            "uid": "10462328-07e875b9-e375-4344-b55e-d7cec8df798f"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create refacil  payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "c98a2b55-7b7c-4fa8-99e5-e81f3fa6c94e"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "8c625049-dbf5-4425-a1d6-5acc586974ce"
                                    }
                                  }
                                ],
                                "id": "c12506de-075f-4d06-abde-512f3ee737ef",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"refacil\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-c12506de-075f-4d06-abde-512f3ee737ef"
                              }
                            ],
                            "id": "cae25197-f47f-42b9-a9bf-e5df8f0c294e",
                            "uid": "10462328-cae25197-f47f-42b9-a9bf-e5df8f0c294e"
                          }
                        ],
                        "id": "8f0b8b46-5099-49d7-94a8-25627dc19728",
                        "uid": "10462328-8f0b8b46-5099-49d7-94a8-25627dc19728"
                      }
                    ],
                    "id": "27f318c5-8cb3-4bda-b720-f83b6a6e2e29",
                    "uid": "10462328-27f318c5-8cb3-4bda-b720-f83b6a6e2e29"
                  },
                  {
                    "name": "Costa Rica",
                    "item": [
                      {
                        "name": "Paysera",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create payser payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "903e572d-9ab2-45fd-810f-088dcc352f7a"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "86172f07-ff2e-46ff-8278-d2edfb37e25b"
                                    }
                                  }
                                ],
                                "id": "2f7b6cae-589f-4349-a09b-c564c103a8de",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payser\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-2f7b6cae-589f-4349-a09b-c564c103a8de"
                              }
                            ],
                            "id": "dd18eba6-1e2a-45df-be0f-890bf2630496",
                            "uid": "10462328-dd18eba6-1e2a-45df-be0f-890bf2630496"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create payser payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "f1d959db-3d3f-4390-8f2a-ff4a8c4cc87b"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "cf9e0c73-5194-4722-ba6e-fee4502a26e4"
                                    }
                                  }
                                ],
                                "id": "14a95931-06d7-4260-804c-1eb7365b2cc4",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payser\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-14a95931-06d7-4260-804c-1eb7365b2cc4"
                              }
                            ],
                            "id": "c6ed4cc0-4258-4e97-bcad-e1f0732ccaf7",
                            "uid": "10462328-c6ed4cc0-4258-4e97-bcad-e1f0732ccaf7"
                          }
                        ],
                        "id": "eae34e42-59f8-4f93-9572-2d47afa42015",
                        "uid": "10462328-eae34e42-59f8-4f93-9572-2d47afa42015"
                      },
                      {
                        "name": "Puntoshey",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create PUNTOSHEY payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "b5bdf983-c4de-4aab-9d46-9851fc597ae3"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "ad0a04c8-bff3-40ad-a124-a1d20fdc4559"
                                    }
                                  }
                                ],
                                "id": "128da1dd-610e-44a0-954d-c70f124bcd7e",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PUNTOSHEY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-128da1dd-610e-44a0-954d-c70f124bcd7e"
                              }
                            ],
                            "id": "533e1310-e10e-4a1b-9ce3-75b26eb7000a",
                            "uid": "10462328-533e1310-e10e-4a1b-9ce3-75b26eb7000a"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create PUNTOSHEY payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "69cf6ca9-f390-4112-8272-68316eec79a0"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "7be028f9-6cb5-4776-8384-5e503e2c60ce"
                                    }
                                  }
                                ],
                                "id": "c6a8a9d4-f5f0-48a7-b82f-c14c5e69b73c",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PUNTOSHEY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-c6a8a9d4-f5f0-48a7-b82f-c14c5e69b73c"
                              }
                            ],
                            "id": "8d460ae1-87c5-4c6c-924c-94492be450f3",
                            "uid": "10462328-8d460ae1-87c5-4c6c-924c-94492be450f3"
                          }
                        ],
                        "id": "700708bc-83a9-4691-9b28-bd24ccea2fda",
                        "uid": "10462328-700708bc-83a9-4691-9b28-bd24ccea2fda"
                      }
                    ],
                    "id": "f559e489-70be-48f4-96d8-1049fbafff50",
                    "uid": "10462328-f559e489-70be-48f4-96d8-1049fbafff50"
                  },
                  {
                    "name": "Ecuador",
                    "item": [
                      {
                        "name": "Farmacias 911",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create farm911 payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "38779a5f-9cf9-4c83-ba65-55e3f486893b"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "b09ee984-9408-4763-9b3f-d55c5f73a407"
                                    }
                                  }
                                ],
                                "id": "f65598a7-c4fd-4549-994f-e3d3a85ca4da",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farm911\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-f65598a7-c4fd-4549-994f-e3d3a85ca4da"
                              }
                            ],
                            "id": "1f09d996-9a75-4285-a6c0-b71a3bf0066a",
                            "uid": "10462328-1f09d996-9a75-4285-a6c0-b71a3bf0066a"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create farm911 payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "829293d3-a2ca-4c09-93d6-3e23d88949eb"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "3436393f-9a6d-4727-a378-af3f2f59144b"
                                    }
                                  }
                                ],
                                "id": "9f1eea5f-fc3c-45a0-ace0-4c6ca39bc305",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farm911\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-9f1eea5f-fc3c-45a0-ace0-4c6ca39bc305"
                              }
                            ],
                            "id": "e8b2332a-6eb0-4ee3-931b-af3b7c9fd07c",
                            "uid": "10462328-e8b2332a-6eb0-4ee3-931b-af3b7c9fd07c"
                          }
                        ],
                        "id": "7a844956-a99c-49ff-8128-1f0488342c16",
                        "uid": "10462328-7a844956-a99c-49ff-8128-1f0488342c16"
                      },
                      {
                        "name": "Farmacias Economicas",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create farmeconomicas payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "0ed9c771-8f3b-498f-a35b-b934aef4634a"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "c8b686f0-5eab-41f4-a05d-4005c52d3471"
                                    }
                                  }
                                ],
                                "id": "1c4e1e08-4ad2-4ff9-8e3e-4eb114c82406",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmeconomicas\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-1c4e1e08-4ad2-4ff9-8e3e-4eb114c82406"
                              }
                            ],
                            "id": "02dfdd08-2405-4df8-bba4-a709b819dee3",
                            "uid": "10462328-02dfdd08-2405-4df8-bba4-a709b819dee3"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create farmeconomicaspayment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "669dea99-4226-48c7-b7e1-acfce07cdd78"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "2c353fa6-a922-4096-9115-01df07fa2a61"
                                    }
                                  }
                                ],
                                "id": "48a723bf-af1c-427b-b6b2-7c04d8f3a3f3",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmeconomicas\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-48a723bf-af1c-427b-b6b2-7c04d8f3a3f3"
                              }
                            ],
                            "id": "ce451cf5-8264-4b4b-bd48-9f6dc8aa9059",
                            "uid": "10462328-ce451cf5-8264-4b4b-bd48-9f6dc8aa9059"
                          }
                        ],
                        "id": "90cd97e2-653e-4668-9cc8-0746aa91754e",
                        "uid": "10462328-90cd97e2-653e-4668-9cc8-0746aa91754e"
                      },
                      {
                        "name": "Farmacias Medicity",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create farmmedicity payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "3f4f9071-c8d9-4882-a46c-a6af4df66df9"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "c9a5b0ed-7f66-4aa4-9dcd-0277c50e45a8"
                                    }
                                  }
                                ],
                                "id": "ccad7e0f-0c9f-4638-90af-8b053ecfc9f3",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmmedicity\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-ccad7e0f-0c9f-4638-90af-8b053ecfc9f3"
                              }
                            ],
                            "id": "b86186ae-ecda-42a9-b6b6-d394ef55b483",
                            "uid": "10462328-b86186ae-ecda-42a9-b6b6-d394ef55b483"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create farmmedicity (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "5728ed83-e336-425f-ba52-b0cfaa02086f"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "67dda669-38a6-4bfe-8bcd-cd781325fa75"
                                    }
                                  }
                                ],
                                "id": "3e9363f1-8155-4124-aa74-a9727e75bc18",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmmedicity\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-3e9363f1-8155-4124-aa74-a9727e75bc18"
                              }
                            ],
                            "id": "71396ce7-eca8-4fca-b347-4cf45bc46ced",
                            "uid": "10462328-71396ce7-eca8-4fca-b347-4cf45bc46ced"
                          }
                        ],
                        "id": "92ab886f-89f7-4e91-8303-8e6e4857c860",
                        "uid": "10462328-92ab886f-89f7-4e91-8303-8e6e4857c860"
                      },
                      {
                        "name": "Rianxeira",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create rianxeira payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "29580cde-66ad-4e49-b047-31967925b4ac"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "14f8a78b-3794-43b5-8c81-b89c4d1ac5e4"
                                    }
                                  }
                                ],
                                "id": "cbd6f3af-165b-44f5-ab9e-1aca246dda1e",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"rianxeira\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-cbd6f3af-165b-44f5-ab9e-1aca246dda1e"
                              }
                            ],
                            "id": "16900214-9166-4c5c-815f-fc65dad1ebe5",
                            "uid": "10462328-16900214-9166-4c5c-815f-fc65dad1ebe5"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create rianxeira (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "351ac555-f8f4-4258-8a1e-de993842cc79"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "942851ed-1f70-4bf9-8b07-74736361176f"
                                    }
                                  }
                                ],
                                "id": "0fd1ddd7-e9cb-4fec-9f3f-5a98877122cb",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"rianxeira\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-0fd1ddd7-e9cb-4fec-9f3f-5a98877122cb"
                              }
                            ],
                            "id": "5bacd717-5db9-4fba-a350-b65bb310cd12",
                            "uid": "10462328-5bacd717-5db9-4fba-a350-b65bb310cd12"
                          }
                        ],
                        "id": "f69e812e-b05b-46ba-a6da-c2a86b6de835",
                        "uid": "10462328-f69e812e-b05b-46ba-a6da-c2a86b6de835"
                      },
                      {
                        "name": "Western Union",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create westernunion payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "78091971-fe2c-4041-911e-2e3836548b74"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "71cdffd0-a713-45fe-90ec-ea99d5eba272"
                                    }
                                  }
                                ],
                                "id": "4edc24d0-45e1-42c4-902d-da825faaec1a",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"westernunion\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-4edc24d0-45e1-42c4-902d-da825faaec1a"
                              }
                            ],
                            "id": "ec62f54b-a724-437d-88a8-d8e44b180c19",
                            "uid": "10462328-ec62f54b-a724-437d-88a8-d8e44b180c19"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create westernunion (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "4e4c22d1-0f77-431f-af11-b10c65f35268"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "11fd6c4e-c1c2-4072-b6a6-06fca6bb2f31"
                                    }
                                  }
                                ],
                                "id": "342fb36c-e0b1-4c10-b8be-7c65d4d314de",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"westernunion\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-342fb36c-e0b1-4c10-b8be-7c65d4d314de"
                              }
                            ],
                            "id": "3f696617-efdb-4e71-af69-d7bb93e2c792",
                            "uid": "10462328-3f696617-efdb-4e71-af69-d7bb93e2c792"
                          }
                        ],
                        "id": "b732ce05-eea7-4b2d-80db-ff7fb9b9f50e",
                        "uid": "10462328-b732ce05-eea7-4b2d-80db-ff7fb9b9f50e"
                      }
                    ],
                    "id": "9da4686e-95a8-422b-abd5-8adf0f33f9e2",
                    "uid": "10462328-9da4686e-95a8-422b-abd5-8adf0f33f9e2"
                  },
                  {
                    "name": "Guatemala",
                    "item": [
                      {
                        "name": "Bam",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create bam payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "98c6633b-18f6-47cb-9eed-d6b65bb059f4"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "56aea9c8-eabb-4f9c-92bb-1a837168ac6b"
                                    }
                                  }
                                ],
                                "id": "9906a7ac-a0d8-4238-a0cb-97de569fefe6",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"bam\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"GTQ\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-9906a7ac-a0d8-4238-a0cb-97de569fefe6"
                              }
                            ],
                            "id": "26ca9ed4-9789-4d06-9085-18f7fe5d0aa3",
                            "uid": "10462328-26ca9ed4-9789-4d06-9085-18f7fe5d0aa3"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create bam (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "c6c9e7e0-7edb-4576-a072-9b0276634a60"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "ad6bf3c8-26de-46dc-bc6a-1c767b64aa70"
                                    }
                                  }
                                ],
                                "id": "1abaf794-5b55-4b0f-a095-6a1f259d498d",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"bam\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"GTQ\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-1abaf794-5b55-4b0f-a095-6a1f259d498d"
                              }
                            ],
                            "id": "92d33dff-ed49-4508-a2d2-a7b345d85960",
                            "uid": "10462328-92d33dff-ed49-4508-a2d2-a7b345d85960"
                          }
                        ],
                        "id": "6ad2e3f1-135a-43b7-8a55-3ff5626b20d8",
                        "uid": "10462328-6ad2e3f1-135a-43b7-8a55-3ff5626b20d8"
                      },
                      {
                        "name": "Banco Continental",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "431fb724-f4f7-4e0f-9883-b98e29c69d3a",
                            "uid": "10462328-431fb724-f4f7-4e0f-9883-b98e29c69d3a"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "4e01bb75-2ddb-4cf7-9ee2-e375ca8411bd",
                            "uid": "10462328-4e01bb75-2ddb-4cf7-9ee2-e375ca8411bd"
                          }
                        ],
                        "id": "4e119df5-d012-45c1-9c0f-031c96f20b9f",
                        "uid": "10462328-4e119df5-d012-45c1-9c0f-031c96f20b9f"
                      }
                    ],
                    "id": "884f5359-801d-4433-bb72-b3244531d9c2",
                    "uid": "10462328-884f5359-801d-4433-bb72-b3244531d9c2"
                  },
                  {
                    "name": "Mexico",
                    "item": [
                      {
                        "name": "Bancomer",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create BANCOMER payment (Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "ce9a1ba4-8add-47ee-b205-1d449b0e4931"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "f6236f05-2d94-469f-b1c3-f4b82af5e82d"
                                    }
                                  }
                                ],
                                "id": "fa5be58c-cb26-44f3-85ba-b2f3710556c9",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCOMER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-fa5be58c-cb26-44f3-85ba-b2f3710556c9"
                              }
                            ],
                            "id": "7d1a7624-781d-4aab-85b3-a3dffccb02ee",
                            "uid": "10462328-7d1a7624-781d-4aab-85b3-a3dffccb02ee"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create BANCOMER payment (payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "f9183844-11ea-4b3e-8222-00636616204e"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "b770862e-5deb-4da3-860f-34797ea2e348"
                                    }
                                  }
                                ],
                                "id": "6d734857-5142-4079-adcb-737930241cff",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCOMER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-6d734857-5142-4079-adcb-737930241cff"
                              }
                            ],
                            "id": "db35b58d-17e6-46de-a496-dcb4a9846972",
                            "uid": "10462328-db35b58d-17e6-46de-a496-dcb4a9846972"
                          }
                        ],
                        "id": "6e231207-8972-4afe-9bf0-fa2276bf83c6",
                        "uid": "10462328-6e231207-8972-4afe-9bf0-fa2276bf83c6"
                      },
                      {
                        "name": "Banorte",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "fb83e187-cfc2-4763-918f-709b7e49e97f",
                            "uid": "10462328-fb83e187-cfc2-4763-918f-709b7e49e97f"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "180bf2af-ec10-4fe1-88cb-eeb8a3436c1e",
                            "uid": "10462328-180bf2af-ec10-4fe1-88cb-eeb8a3436c1e"
                          }
                        ],
                        "id": "7af1845e-6e2d-4051-abc6-f610b05cd3c3",
                        "uid": "10462328-7af1845e-6e2d-4051-abc6-f610b05cd3c3"
                      },
                      {
                        "name": "Bodega Aurrera",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "592b9735-5485-4234-beff-d8abacdaa965",
                            "uid": "10462328-592b9735-5485-4234-beff-d8abacdaa965"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "38bc6e64-62fb-4512-9443-109fc35c8b54",
                            "uid": "10462328-38bc6e64-62fb-4512-9443-109fc35c8b54"
                          }
                        ],
                        "id": "5c1692c2-09c1-4a69-bc83-3cb6d0cf6c19",
                        "uid": "10462328-5c1692c2-09c1-4a69-bc83-3cb6d0cf6c19"
                      },
                      {
                        "name": "Calimax",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "e8d7e87e-14d9-410d-8ac3-c67374faf66e",
                            "uid": "10462328-e8d7e87e-14d9-410d-8ac3-c67374faf66e"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "63ed01b8-f84f-4efe-ad80-58df0a9aecac",
                            "uid": "10462328-63ed01b8-f84f-4efe-ad80-58df0a9aecac"
                          }
                        ],
                        "id": "cbee200c-720e-4105-aa68-ef9d7c2ef80b",
                        "uid": "10462328-cbee200c-720e-4105-aa68-ef9d7c2ef80b"
                      },
                      {
                        "name": "Delahorro",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create delahorro payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "a211d101-4416-4020-a7b6-747dce53a587"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "1e05e072-98e8-4a44-a736-26503a604135"
                                    }
                                  }
                                ],
                                "id": "67debf73-8276-4e38-bcee-caf32755c993",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"delahorro\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-67debf73-8276-4e38-bcee-caf32755c993"
                              }
                            ],
                            "id": "00c77407-0dbe-4184-ae0f-b165eefda08b",
                            "uid": "10462328-00c77407-0dbe-4184-ae0f-b165eefda08b"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create Delahorro payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "54409024-9a94-4780-8602-3b1d655be731"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "1b48bd4b-9afa-4b7f-a3f3-5eba5cdceaf4"
                                    }
                                  }
                                ],
                                "id": "5354ceac-e824-4fe7-a707-47516b7ba2fd",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"delahorro\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-5354ceac-e824-4fe7-a707-47516b7ba2fd"
                              }
                            ],
                            "id": "b4a1d452-2149-4f2a-9f32-abc1cfa61155",
                            "uid": "10462328-b4a1d452-2149-4f2a-9f32-abc1cfa61155"
                          }
                        ],
                        "id": "fa6ec6a0-b7f4-493c-87f2-62900649226c",
                        "uid": "10462328-fa6ec6a0-b7f4-493c-87f2-62900649226c"
                      },
                      {
                        "name": "7 Eleven",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create 7ELEVEN payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "ea20658c-e996-443a-8bf1-714383c3e6a2"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "7d085e7d-20fd-4a66-888f-a99646550bab"
                                    }
                                  }
                                ],
                                "id": "7703ac23-f71b-4cf0-a534-cf79c7bf8ca8",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"7ELEVEN\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-7703ac23-f71b-4cf0-a534-cf79c7bf8ca8"
                              }
                            ],
                            "id": "3cf48e6c-6620-41d5-b2ae-9b07cee3c075",
                            "uid": "10462328-3cf48e6c-6620-41d5-b2ae-9b07cee3c075"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create 7ELEVEN payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "67c5b88d-ad1a-4168-9313-6d184fd8a775"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "41b6dc34-bd46-4f84-bfa5-5136c78b780d"
                                    }
                                  }
                                ],
                                "id": "d2ba95b5-0653-4960-9899-3bbba6671073",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"7ELEVEN\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-d2ba95b5-0653-4960-9899-3bbba6671073"
                              }
                            ],
                            "id": "80a3471c-6d66-4206-9032-96f193a9f37a",
                            "uid": "10462328-80a3471c-6d66-4206-9032-96f193a9f37a"
                          }
                        ],
                        "id": "276e9939-4072-4f66-909f-7b55fdb65209",
                        "uid": "10462328-276e9939-4072-4f66-909f-7b55fdb65209"
                      }
                    ],
                    "id": "1385ddfe-3f16-4157-8b30-0b9944901900",
                    "uid": "10462328-1385ddfe-3f16-4157-8b30-0b9944901900"
                  },
                  {
                    "name": "Panama",
                    "item": [],
                    "id": "9ff7b0e4-5129-4b9c-825b-447001556df4",
                    "uid": "10462328-9ff7b0e4-5129-4b9c-825b-447001556df4"
                  },
                  {
                    "name": "Peru",
                    "item": [],
                    "id": "c69c3159-131d-44c8-b713-f671f1f5a58d",
                    "uid": "10462328-c69c3159-131d-44c8-b713-f671f1f5a58d"
                  }
                ],
                "id": "472d1f13-852c-4d34-85fb-77b30a6cc74e",
                "uid": "10462328-472d1f13-852c-4d34-85fb-77b30a6cc74e"
              },
              {
                "name": "Boleto",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create BOLETO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "87aa9206-f503-4cab-827f-6b31fc7b9d60"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b3dcf49e-92be-4656-8ed1-d05fdea480cf"
                            }
                          }
                        ],
                        "id": "a9859f67-67d5-4684-babf-8c9e08f0a1e3",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\",\n        \"shipping_address\": {\n            \"zip\": \"12345678\"\n        }\n    },\n    \"payment_method\": \"BOLETO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a9859f67-67d5-4684-babf-8c9e08f0a1e3"
                      }
                    ],
                    "id": "631eafc5-0700-46e4-8f71-df50f96fe0d9",
                    "uid": "10462328-631eafc5-0700-46e4-8f71-df50f96fe0d9"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create BOLETO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "03f81f28-c4bf-4948-821d-cf8a2735b3dc"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "65aaebeb-005d-41ff-83dc-1252e2b1760c"
                            }
                          }
                        ],
                        "id": "3b4398e6-b2d3-4c5a-bd9c-5d37d00d16ce",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"BOLETO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-3b4398e6-b2d3-4c5a-bd9c-5d37d00d16ce"
                      }
                    ],
                    "id": "ddf60b05-1c54-4a03-8bc6-953df807dbfd",
                    "uid": "10462328-ddf60b05-1c54-4a03-8bc6-953df807dbfd"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create BOLETO payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "81161613-2645-49e1-b70d-131d9234adb6"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ce59866e-7a12-494d-8d4a-24afd99a765c"
                            }
                          }
                        ],
                        "id": "052e3f1e-3d0c-41aa-9e62-6f60cf14a554",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\",\n        \"shipping_address\": {\n            \"zip\": \"12345678\"\n        }\n    },\n    \"payment_method\": \"BOLETO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-052e3f1e-3d0c-41aa-9e62-6f60cf14a554"
                      }
                    ],
                    "id": "c6551103-355d-407b-8782-dd4752a31b54",
                    "uid": "10462328-c6551103-355d-407b-8782-dd4752a31b54"
                  }
                ],
                "id": "f1060988-e89d-4175-b298-57ce8dfca954",
                "uid": "10462328-f1060988-e89d-4175-b298-57ce8dfca954"
              },
              {
                "name": "Efecty",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create EFECTY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6dbef92e-2ed8-4a37-8f25-1b761771a94c"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "12e8111e-48de-4b46-802c-244f269cea84"
                            }
                          }
                        ],
                        "id": "1e9f3358-9079-489b-9082-4040cfd1e14b",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",    \n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"EFECTY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-1e9f3358-9079-489b-9082-4040cfd1e14b"
                      }
                    ],
                    "id": "f77ed534-cb4d-43d9-a5de-7eef23fee55c",
                    "uid": "10462328-f77ed534-cb4d-43d9-a5de-7eef23fee55c"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create EFECTY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "804d1074-9511-46f1-8414-0491e28632b6"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f1660073-9917-4b46-bfb5-b693def3f2af"
                            }
                          }
                        ],
                        "id": "9580350f-fdd7-4e94-a3bb-f2f139e76eb1",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",    \n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"EFECTY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-9580350f-fdd7-4e94-a3bb-f2f139e76eb1"
                      }
                    ],
                    "id": "37e181f8-4f61-47e0-bac8-6359c672a851",
                    "uid": "10462328-37e181f8-4f61-47e0-bac8-6359c672a851"
                  }
                ],
                "id": "60e1391c-8002-4deb-bbc2-011f9e510ef0",
                "uid": "10462328-60e1391c-8002-4deb-bbc2-011f9e510ef0"
              },
              {
                "name": "OXXO",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create OXXO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "20a185e2-a6b0-48f1-96b9-cb0b89dacb2f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "     pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "dcb8daaf-5e85-409d-8a0b-71ffd8fbef56"
                            }
                          }
                        ],
                        "id": "afaa119c-3e5f-4c70-b71c-7e94073e1b06",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OXXO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-afaa119c-3e5f-4c70-b71c-7e94073e1b06"
                      }
                    ],
                    "id": "de3f58ef-dffd-4ba5-96c4-9870dd951db4",
                    "uid": "10462328-de3f58ef-dffd-4ba5-96c4-9870dd951db4"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create OXXO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5c99b93b-5dab-415f-8240-c0be58d5d633"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "507f4b7d-bbaf-475a-a399-7338a49671bf"
                            }
                          }
                        ],
                        "id": "b6721d32-9341-4b6b-8a68-dc9f34f4a07d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OXXO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b6721d32-9341-4b6b-8a68-dc9f34f4a07d"
                      }
                    ],
                    "id": "bc169faf-77cb-4725-8359-f9603f6edb9f",
                    "uid": "10462328-bc169faf-77cb-4725-8359-f9603f6edb9f"
                  }
                ],
                "id": "f404813c-7182-414e-93af-acd06580a262",
                "uid": "10462328-f404813c-7182-414e-93af-acd06580a262"
              },
              {
                "name": "SPEI",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create SPEI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "de0e2f3c-e251-4806-b92b-f6358c5a5672"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "229736ca-2f03-4f21-acce-9ae4e4dd2e32"
                            }
                          }
                        ],
                        "id": "7457d858-03ef-44ab-833b-8b24136cc74e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-7457d858-03ef-44ab-833b-8b24136cc74e"
                      }
                    ],
                    "id": "ecf2163d-289a-4167-b1a2-35496670c96b",
                    "uid": "10462328-ecf2163d-289a-4167-b1a2-35496670c96b"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create SPEI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "764a504c-bdb4-4887-993e-03d205575f32"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "77405039-b231-484c-b257-d6f96fe489b4"
                            }
                          }
                        ],
                        "id": "a36e9f78-bacc-4b4a-abb5-8a32bd37d56d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a36e9f78-bacc-4b4a-abb5-8a32bd37d56d"
                      }
                    ],
                    "id": "f011263f-9750-40b5-bbcf-9f69bd6357be",
                    "uid": "10462328-f011263f-9750-40b5-bbcf-9f69bd6357be"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create SPEI payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6df2fe82-7354-46ec-a22c-3b99c9d9c89d"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5d56f46e-68f4-4fe0-b9c6-02105e378c6c"
                            }
                          }
                        ],
                        "id": "438598c9-5571-42a2-9061-f911827c6e56",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-438598c9-5571-42a2-9061-f911827c6e56"
                      }
                    ],
                    "id": "6c3d4e40-3080-4afb-8bb1-2f97cf98e2ef",
                    "uid": "10462328-6c3d4e40-3080-4afb-8bb1-2f97cf98e2ef"
                  }
                ],
                "id": "700981a4-1465-46d2-98ac-1fb3b68ce3fc",
                "uid": "10462328-700981a4-1465-46d2-98ac-1fb3b68ce3fc"
              },
              {
                "name": "Davivienda",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create davivienda payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "db2de2ea-0f16-4d0e-8fa6-5d4a5ee5339f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "aa90247b-ae2f-40b7-b563-5e6f824ed123"
                            }
                          }
                        ],
                        "id": "bcf5b9e0-999d-4f11-bdf6-0469e2b90f2d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"davivienda\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"123456789\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-bcf5b9e0-999d-4f11-bdf6-0469e2b90f2d"
                      }
                    ],
                    "id": "90860a04-6f51-45ea-8570-49e18c11e577",
                    "uid": "10462328-90860a04-6f51-45ea-8570-49e18c11e577"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create davivienda payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "dd052c51-18fb-4271-99c4-14f5a9dbf147"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c38ebd6a-55ec-4f70-8c50-94d777442277"
                            }
                          }
                        ],
                        "id": "2834c9b5-9bc2-4a21-b1c3-5da0647ba130",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"davivienda\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"123456789\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2834c9b5-9bc2-4a21-b1c3-5da0647ba130"
                      }
                    ],
                    "id": "f84f1f97-7d80-4db9-b93d-dd1e52e38435",
                    "uid": "10462328-f84f1f97-7d80-4db9-b93d-dd1e52e38435"
                  }
                ],
                "id": "95655b1d-508a-462b-9c30-398916e4d49d",
                "uid": "10462328-95655b1d-508a-462b-9c30-398916e4d49d"
              },
              {
                "name": "DiMo",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Dimo payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3f85e719-73fc-46b5-8046-2e9c421f0eaf"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fa8f8349-ac2b-4af0-8443-5bb525c16264"
                            }
                          }
                        ],
                        "id": "a3c40be1-caad-4f6d-9c39-9b077fca691b",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a3c40be1-caad-4f6d-9c39-9b077fca691b"
                      }
                    ],
                    "id": "edba5bc0-0b99-4625-839c-3394f7372016",
                    "uid": "10462328-edba5bc0-0b99-4625-839c-3394f7372016"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Dimo payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fef41cd7-192e-4ba0-8293-b51123fc3790"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ffd2d5ca-5939-4870-8c6a-e896e9ae2962"
                            }
                          }
                        ],
                        "id": "61a0f9e1-4ae8-4123-abdc-fb079edf457b",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-61a0f9e1-4ae8-4123-abdc-fb079edf457b"
                      }
                    ],
                    "id": "4134f9d5-5111-416a-a5e6-3f87820870ee",
                    "uid": "10462328-4134f9d5-5111-416a-a5e6-3f87820870ee"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Dimo payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f774f9cd-265d-463b-b73a-97f86a8b318c"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d46cfb01-ac4d-4fe3-bcfe-d70de7a37527"
                            }
                          }
                        ],
                        "id": "c642e475-ea36-4004-8b33-a298356dacee",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c642e475-ea36-4004-8b33-a298356dacee"
                      }
                    ],
                    "id": "77a30beb-39e2-47d8-9479-51ebd12451c7",
                    "uid": "10462328-77a30beb-39e2-47d8-9479-51ebd12451c7"
                  }
                ],
                "id": "ce41eb80-8372-430d-b80c-1077b622edfc",
                "uid": "10462328-ce41eb80-8372-430d-b80c-1077b622edfc"
              },
              {
                "name": "PIX",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PIX payment(gateway)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f1e532b8-2f4d-4853-bbb6-86744bc21f85"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "29a3f211-1417-4c4e-8a9c-d35f6a2de5f3"
                            }
                          }
                        ],
                        "id": "00cddd2a-fa17-4d0f-be1e-22fd6ebab4a3",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"PIX\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-00cddd2a-fa17-4d0f-be1e-22fd6ebab4a3"
                      }
                    ],
                    "id": "4085b574-fbdf-4f00-b0cb-39c4698226f9",
                    "uid": "10462328-4085b574-fbdf-4f00-b0cb-39c4698226f9"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PIX payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "56aa7bd8-941b-417c-a38e-8d71a47f0698"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "be2fdd90-eee1-48e9-9a43-b3c5af51a0f8"
                            }
                          }
                        ],
                        "id": "26169a97-15e9-4ba4-bb11-fb00b0c9ae48",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"PIX\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-26169a97-15e9-4ba4-bb11-fb00b0c9ae48"
                      }
                    ],
                    "id": "a996772b-5f90-4d7c-88b0-b73425bcc147",
                    "uid": "10462328-a996772b-5f90-4d7c-88b0-b73425bcc147"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create PIX payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "0623eb6f-1718-48a8-bd2a-23437d8963bc"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "34d30037-aefc-4197-87c7-796d46c3e3b1"
                            }
                          }
                        ],
                        "id": "0143ac6d-69e5-4424-8d99-3ac6eded0580",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"PIX\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-0143ac6d-69e5-4424-8d99-3ac6eded0580"
                      }
                    ],
                    "id": "64219f2f-b353-4db5-bba6-1f47384e9bf3",
                    "uid": "10462328-64219f2f-b353-4db5-bba6-1f47384e9bf3"
                  }
                ],
                "id": "a155064f-ac3d-407e-b6e9-31dc3973681d",
                "uid": "10462328-a155064f-ac3d-407e-b6e9-31dc3973681d"
              },
              {
                "name": "QR code PicPay",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PICPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "69ed9d0f-b4c8-4751-97bf-ad6e8d36fa8a"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "53a81f4d-85e8-4cf6-a9ee-6b685dfaf547"
                            }
                          }
                        ],
                        "id": "466fe80f-3763-4208-9581-34a4d81fa48e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PICPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n       \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-466fe80f-3763-4208-9581-34a4d81fa48e"
                      }
                    ],
                    "id": "721a1266-ec49-4cb9-87eb-d50c70695f1a",
                    "uid": "10462328-721a1266-ec49-4cb9-87eb-d50c70695f1a"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PICPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6f3a81c3-d3a6-43d6-a659-1d4bb5a32ec9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "673681e5-edac-4065-b428-a8823166f694"
                            }
                          }
                        ],
                        "id": "49166252-bf03-4d3f-89ca-b9b9924e6326",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PICPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n       \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-49166252-bf03-4d3f-89ca-b9b9924e6326"
                      }
                    ],
                    "id": "fcb3033a-992b-4ab3-8c28-4dcd0168b6a5",
                    "uid": "10462328-fcb3033a-992b-4ab3-8c28-4dcd0168b6a5"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create PICPAY payment(ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9373a35b-6bcf-47fc-a836-f87538e26bd2"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4d642f3b-09b5-46c1-bbfc-72d8eb261055"
                            }
                          }
                        ],
                        "id": "27c0b054-d3a1-402f-b1bc-1f050513a7d2",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PICPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n       \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-27c0b054-d3a1-402f-b1bc-1f050513a7d2"
                      }
                    ],
                    "id": "13f27d73-8010-444b-8cb9-129d8cb2ed83",
                    "uid": "10462328-13f27d73-8010-444b-8cb9-129d8cb2ed83"
                  }
                ],
                "id": "aaf8fc8e-d5ae-4cb7-a000-bbd61d7a2552",
                "uid": "10462328-aaf8fc8e-d5ae-4cb7-a000-bbd61d7a2552"
              },
              {
                "name": "Codi",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create CODI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fbd7906d-d113-49f8-bbe3-b3df7017c6e3"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "62a2bd43-0f33-4da5-ae9d-3a70108eb111"
                            }
                          }
                        ],
                        "id": "1904cad6-73fa-4e31-8320-0eb9961e69e3",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CODI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-1904cad6-73fa-4e31-8320-0eb9961e69e3"
                      }
                    ],
                    "id": "b45b98db-f50e-4300-acc1-7b7c1d0ced17",
                    "uid": "10462328-b45b98db-f50e-4300-acc1-7b7c1d0ced17"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create CODI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4615b391-c5c2-4b35-bea0-8c390d75e05b"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "43792e79-fb7e-4d86-a1aa-dd58da0d1bcd"
                            }
                          }
                        ],
                        "id": "7854a3cb-bccd-4376-b638-6aaecbd8753c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CODI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-7854a3cb-bccd-4376-b638-6aaecbd8753c"
                      }
                    ],
                    "id": "a9eb6f17-e39f-4e29-8352-21c69aa5cb6c",
                    "uid": "10462328-a9eb6f17-e39f-4e29-8352-21c69aa5cb6c"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create CODI payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "98aec3a9-8406-4a20-bf4e-42972f05c329"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "11ff1445-8626-4496-b212-40804d856428"
                            }
                          }
                        ],
                        "id": "cac623b3-aa1c-4783-a682-50fbaa7a0c86",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CODI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-cac623b3-aa1c-4783-a682-50fbaa7a0c86"
                      }
                    ],
                    "id": "fa1dbb33-deec-4ecb-a17a-71617b10cf20",
                    "uid": "10462328-fa1dbb33-deec-4ecb-a17a-71617b10cf20"
                  }
                ],
                "id": "27a444a7-9a3e-4a0a-a25c-5559ed0d8138",
                "uid": "10462328-27a444a7-9a3e-4a0a-a25c-5559ed0d8138"
              },
              {
                "name": "PSE",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PSE payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2fc9e94a-62ce-4163-a0c4-e0c912e1a70b"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "af75ed48-02e6-496f-ab8f-71a2a2359165"
                            }
                          }
                        ],
                        "id": "3153042f-c3bd-43a1-bf0d-71854d22d408",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PSE\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"bank_code\": \"1032\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"3051234567\",\n        \"document_type\": \"TID\",\n        \"identity\": \"401.162.304-01\",\n        \"living_address\": {\n            \"address\": \"1600 Pennsylvania Ave NW\"\n        }\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-3153042f-c3bd-43a1-bf0d-71854d22d408"
                      }
                    ],
                    "id": "3f29bb6b-c728-42cd-9c83-7eb2f51a306b",
                    "uid": "10462328-3f29bb6b-c728-42cd-9c83-7eb2f51a306b"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PSE payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b39e91c8-5ba0-4e24-815a-17d923df5324"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b2c241f5-94ce-4c79-aaf2-8cfd8ebe8d85"
                            }
                          }
                        ],
                        "id": "00b98fd2-13b7-4879-947b-fdb3ad634a92",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PSE\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"bank_code\": \"1032\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"3051234567\",\n        \"document_type\": \"TID\",\n        \"identity\": \"401.162.304-01\",\n        \"living_address\": {\n            \"address\": \"1600 Pennsylvania Ave NW\"\n        }\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-00b98fd2-13b7-4879-947b-fdb3ad634a92"
                      }
                    ],
                    "id": "f260a753-695c-42f7-8093-63a66b54adc4",
                    "uid": "10462328-f260a753-695c-42f7-8093-63a66b54adc4"
                  }
                ],
                "id": "822e4b14-c638-4d2e-8b1c-f0e4dfecf84d",
                "uid": "10462328-822e4b14-c638-4d2e-8b1c-f0e4dfecf84d"
              },
              {
                "name": "NuPay",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create NUPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "20b40056-0767-486c-bebc-8091e927bcb9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5a243f8f-bcb4-43a4-81d1-1aa43c9da81a"
                            }
                          }
                        ],
                        "id": "292dc8ab-e182-48a3-9a0e-8ecee056cdb5",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"count\": 1,\n                \"description\": \"test\",\n                \"name\": \"apple\",\n                \"price\": 1\n            }\n        ]\n    },\n    \"payment_method\": \"NUPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"67753423657\",\n        \"phone\": \"5501234567890\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-292dc8ab-e182-48a3-9a0e-8ecee056cdb5"
                      }
                    ],
                    "id": "cc9d4ffa-98e8-4409-84dd-25e14616b2b6",
                    "uid": "10462328-cc9d4ffa-98e8-4409-84dd-25e14616b2b6"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create NUPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ae373e45-3d7b-4885-adb0-d646c4eb9ea6"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ac7c01d8-537b-4754-b51e-82dfc947c7c2"
                            }
                          }
                        ],
                        "id": "1cc3bde3-161a-4471-8c95-7299a78c2d8a",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"count\": 1,\n                \"description\": \"test\",\n                \"name\": \"apple\",\n                \"price\": 1\n            }\n        ]\n    },\n    \"payment_method\": \"NUPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"67753423657\",\n        \"phone\": \"5501234567890\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-1cc3bde3-161a-4471-8c95-7299a78c2d8a"
                      }
                    ],
                    "id": "34b96513-70ab-4752-928a-dbd18ad9d68e",
                    "uid": "10462328-34b96513-70ab-4752-928a-dbd18ad9d68e"
                  }
                ],
                "id": "cb3148dc-f9de-42cd-b8c5-9a8b28f98c20",
                "uid": "10462328-cb3148dc-f9de-42cd-b8c5-9a8b28f98c20"
              },
              {
                "name": "Pago Efectivo",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PAGOEFECTIVO payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6cee0cc1-deae-4d70-9750-800934924f21"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "deb995f4-a191-47e6-bf3a-948132f92216"
                            }
                          }
                        ],
                        "id": "9796206d-4503-4660-b34b-f5f3a7df847c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAGOEFECTIVO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"document_type\": \"DNI\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"phone\":\"123456789\",\n        \"identity\": \"12345678\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-9796206d-4503-4660-b34b-f5f3a7df847c"
                      }
                    ],
                    "id": "6307bec6-ee55-44e1-be81-ae608a0f0eac",
                    "uid": "10462328-6307bec6-ee55-44e1-be81-ae608a0f0eac"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PAGOEFECTIVO payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c1c7f12b-4c54-42e5-bca7-84c2d90167ce"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "67e8bb91-0b47-4b94-b0e6-f3796a81357a"
                            }
                          }
                        ],
                        "id": "3255a783-c983-479d-b485-ce301366201f",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAGOEFECTIVO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-3255a783-c983-479d-b485-ce301366201f"
                      }
                    ],
                    "id": "fc9c4cdf-5134-4b6b-aa4c-f9528da1a42c",
                    "uid": "10462328-fc9c4cdf-5134-4b6b-aa4c-f9528da1a42c"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create PAGOEFECTIVO payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b5460ee4-4ef3-46f4-a7a9-5de831a42604"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "391deed3-d33f-428e-a6ce-0db69e227d22"
                            }
                          }
                        ],
                        "id": "dec6f341-4286-4f7d-8229-876406c80e0d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAGOEFECTIVO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"document_type\": \"DNI\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"phone\":\"123456789\",\n        \"identity\": \"12345678\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-dec6f341-4286-4f7d-8229-876406c80e0d"
                      }
                    ],
                    "id": "a01c2a31-8ee1-40ec-b29c-cf505a0aa9de",
                    "uid": "10462328-a01c2a31-8ee1-40ec-b29c-cf505a0aa9de"
                  }
                ],
                "id": "e68046b5-89f0-4726-9ee9-9ff9b464b847",
                "uid": "10462328-e68046b5-89f0-4726-9ee9-9ff9b464b847"
              },
              {
                "name": "Mercado Pago",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Mercado Pago payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a5fcd5c4-e1ba-41f3-ae51-bda47f6bd7c5"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "64d4b15b-d517-4f61-8f16-18c095636c21"
                            }
                          }
                        ],
                        "id": "ba6274bc-a21a-43d6-bca1-b212e61bae6c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"id\": \"123456789\",\n                \"name\": \"Apple\",\n                \"description\": \"Testing apple\"\n            }\n        ]\n    },\n    \"payment_method\": \"MERCADOPAGO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ba6274bc-a21a-43d6-bca1-b212e61bae6c"
                      }
                    ],
                    "id": "9b8dde13-1000-426a-9bfb-f1d1f7cab678",
                    "uid": "10462328-9b8dde13-1000-426a-9bfb-f1d1f7cab678"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Mercado Pago payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "bc1868e0-6f56-4fbf-9de3-44913713eff0"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "96eef205-4b02-4932-ab14-6ffa6ddc1370"
                            }
                          }
                        ],
                        "id": "0de3cbe1-9beb-4277-a7fd-ea77bc585ebb",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"id\": \"123456789\",\n                \"name\": \"Apple\",\n                \"description\": \"Testing apple\"\n            }\n        ]\n    },\n    \"payment_method\": \"MERCADOPAGO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-0de3cbe1-9beb-4277-a7fd-ea77bc585ebb"
                      }
                    ],
                    "id": "9b2cfedb-f72c-4afa-bb7a-d90f5286f8f8",
                    "uid": "10462328-9b2cfedb-f72c-4afa-bb7a-d90f5286f8f8"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Mercado Pago payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ee1b3a36-cd58-49ea-bb71-07c1d3b35efc"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3a327f4b-d22c-4a4a-b809-76ebfaf35fab"
                            }
                          }
                        ],
                        "id": "66709a21-e212-4a89-8f2a-488e3f3f5d05",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"id\": \"123456789\",\n                \"name\": \"Apple\",\n                \"description\": \"Testing apple\"\n            }\n        ]\n    },\n    \"payment_method\": \"MERCADOPAGO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-66709a21-e212-4a89-8f2a-488e3f3f5d05"
                      }
                    ],
                    "id": "b5e26294-9606-48dc-8a63-de5d017beb34",
                    "uid": "10462328-b5e26294-9606-48dc-8a63-de5d017beb34"
                  }
                ],
                "id": "7f8e0227-b8da-404c-be2e-3a049ce48b84",
                "uid": "10462328-7f8e0227-b8da-404c-be2e-3a049ce48b84"
              }
            ],
            "id": "444bcc95-f840-4409-be66-0e88e1ef2e0c",
            "uid": "10462328-444bcc95-f840-4409-be66-0e88e1ef2e0c"
          },
          {
            "name": "India",
            "item": [
              {
                "name": "Netbanking  (Internet Banking India)",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create netbankinginr payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD_IND');\r",
                                "\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c3f8ada7-379e-4e84-ba62-74762a9bb665"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "51e666ae-1d66-4050-91e8-fecc6d72885d"
                            }
                          }
                        ],
                        "id": "7ccef255-3014-46bb-930e-222f05f35851",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"netbankinginr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n \"ewallet_account\":\n    {\n        \"bank_code\": \"INB1111\"\n}\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-7ccef255-3014-46bb-930e-222f05f35851"
                      }
                    ],
                    "id": "cbab0357-1018-4f56-bb98-aaf4d487409f",
                    "uid": "10462328-cbab0357-1018-4f56-bb98-aaf4d487409f"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create netbankinginr payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "876d7ef2-4d27-450a-a60d-f4f3d59dd3a1"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a7aa2297-ecf1-4398-bc98-9ae6f73b18b2"
                            }
                          }
                        ],
                        "id": "28231f09-a4cd-4c17-b865-a93032f2c010",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"netbankinginr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-28231f09-a4cd-4c17-b865-a93032f2c010"
                      }
                    ],
                    "id": "5bed48da-4391-45f7-9d90-229e0eb004ad",
                    "uid": "10462328-5bed48da-4391-45f7-9d90-229e0eb004ad"
                  }
                ],
                "id": "bfa1ccb2-794b-4b02-b044-b059923fe6f3",
                "uid": "10462328-bfa1ccb2-794b-4b02-b044-b059923fe6f3"
              },
              {
                "name": "UPI (Unified Payments Interface)",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create upi payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f8853565-0934-4e3d-ab10-dbcf23b04fa8"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8d7750fb-4612-4f75-b092-ade7b97cdd0b"
                            }
                          }
                        ],
                        "id": "a72b8b3d-cf1c-4c80-a362-ac594c5d1a48",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"UPI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a72b8b3d-cf1c-4c80-a362-ac594c5d1a48"
                      }
                    ],
                    "id": "3c286c5f-4893-4bc7-bfb1-20d625dbb2c5",
                    "uid": "10462328-3c286c5f-4893-4bc7-bfb1-20d625dbb2c5"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create upi payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "aa69a94c-34a4-4927-9dd7-29536b8d78e9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f104e590-09c8-4bd2-8566-8bd5ac5a81d1"
                            }
                          }
                        ],
                        "id": "82371d1b-a4c8-47e7-8217-2d55232b9e56",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"upi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-82371d1b-a4c8-47e7-8217-2d55232b9e56"
                      }
                    ],
                    "id": "8e47750c-2a88-4ba5-b6c9-3a6c9d89cfd8",
                    "uid": "10462328-8e47750c-2a88-4ba5-b6c9-3a6c9d89cfd8"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create upi payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP_IND');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP_IND');\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b03d762e-8796-4761-9567-251c566c521a"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f5cde062-d132-4ac5-9654-769afc4cb261"
                            }
                          }
                        ],
                        "id": "387631ef-0dea-4433-ba03-939bb6418788",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"upi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-387631ef-0dea-4433-ba03-939bb6418788"
                      }
                    ],
                    "id": "7fdb7388-2f40-4645-be6f-f82874a54b46",
                    "uid": "10462328-7fdb7388-2f40-4645-be6f-f82874a54b46"
                  }
                ],
                "id": "2a793628-3996-4066-a417-4072ba951d8d",
                "uid": "10462328-2a793628-3996-4066-a417-4072ba951d8d"
              },
              {
                "name": "VpaUPI",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create vpaupi payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "583a30f8-1640-405f-bdc6-b63530c2a520"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d588d283-d049-43d3-a63b-560f8c113ca6"
                            }
                          }
                        ],
                        "id": "b1145666-997c-463c-85f8-9052e37f7dfb",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"vpaupi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"user123@bank\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b1145666-997c-463c-85f8-9052e37f7dfb"
                      }
                    ],
                    "id": "96e5fae5-c022-47cb-86de-776997a3b189",
                    "uid": "10462328-96e5fae5-c022-47cb-86de-776997a3b189"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create vpaupi payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f6640be4-3b6d-449d-8984-538553ed2cf2"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5459e809-057d-4311-8b70-9f75acdffe33"
                            }
                          }
                        ],
                        "id": "c2fda297-f966-42e9-8643-fb5a691d923b",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"vpaupi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    }\n\n\n    \n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c2fda297-f966-42e9-8643-fb5a691d923b"
                      }
                    ],
                    "id": "86153ce8-5c54-41b5-be8c-996fdd19b358",
                    "uid": "10462328-86153ce8-5c54-41b5-be8c-996fdd19b358"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create vpaupi payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP_IND');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP_IND');\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1f66757a-b956-4ee6-b3f9-967762e2041e"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "20ffe701-e5c4-4a39-9910-2fcf2dd9d256"
                            }
                          }
                        ],
                        "id": "a813a9a7-9c74-40bc-94a6-c782e197963e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"vpaupi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"user123@bank\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a813a9a7-9c74-40bc-94a6-c782e197963e"
                      }
                    ],
                    "id": "9dfba94a-8886-4089-89e5-198cff16dc84",
                    "uid": "10462328-9dfba94a-8886-4089-89e5-198cff16dc84"
                  }
                ],
                "id": "935b0ed6-9c00-48ba-90dc-d6a28c7e9f7d",
                "uid": "10462328-935b0ed6-9c00-48ba-90dc-d6a28c7e9f7d"
              },
              {
                "name": "Indian wallets",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create walletsinr payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD_IND');\r",
                                "\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e997d455-ecc3-42d4-81c4-b1ea83d3af8e"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "70c04e89-81cc-4518-ac71-fd17135fccda"
                            }
                          }
                        ],
                        "id": "5769748c-2c3c-4f8e-8931-281d8e3f48d1",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"walletsinr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"ewallet_account\":\n    {\n        \"bank_code\": \"PHONEPE\",\n        \"id\":\"+911234567890\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-5769748c-2c3c-4f8e-8931-281d8e3f48d1"
                      }
                    ],
                    "id": "033a392f-f300-452a-b23e-e244059c7685",
                    "uid": "10462328-033a392f-f300-452a-b23e-e244059c7685"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create walletsinr payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5b8a41a8-cc51-42b1-aecd-dc9597445da1"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9fb9d957-1082-43cf-a0f1-31ca71caaeb4"
                            }
                          }
                        ],
                        "id": "382d4e26-7cf4-4607-8502-2c05ca5701f8",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"walletsinr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-382d4e26-7cf4-4607-8502-2c05ca5701f8"
                      }
                    ],
                    "id": "147dc03c-1efb-4cbd-ac94-a28ae522135d",
                    "uid": "10462328-147dc03c-1efb-4cbd-ac94-a28ae522135d"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create walletsinr payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP_IND');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP_IND');\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a733105a-dbd9-4fd2-9f73-d07c570fc339"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5adb66df-20ab-4d6e-aebf-d003a7dcc597"
                            }
                          }
                        ],
                        "id": "769bf936-a688-428d-99fe-956dc2c51478",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"walletsinr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"ewallet_account\":\n    {\n        \"bank_code\": \"PHONEPE\",\n        \"id\":\"+911234567890\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-769bf936-a688-428d-99fe-956dc2c51478"
                      }
                    ],
                    "id": "d92eefa8-93e6-4a91-b1fa-af1a66e51a45",
                    "uid": "10462328-d92eefa8-93e6-4a91-b1fa-af1a66e51a45"
                  }
                ],
                "id": "5823f62e-964a-487e-abe5-2cb2fcd2a4eb",
                "uid": "10462328-5823f62e-964a-487e-abe5-2cb2fcd2a4eb"
              }
            ],
            "id": "9c49c156-2a1c-4909-a855-e48bcb128f52",
            "uid": "10462328-9c49c156-2a1c-4909-a855-e48bcb128f52"
          }
        ],
        "id": "8c9cd6c4-2747-48be-9443-5d1ab9f71805",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "97796789-bdb5-4695-964a-298798251db2"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ],
              "id": "ef29b999-14b7-4739-b974-aa515c28dcfe"
            }
          }
        ],
        "uid": "10462328-8c9cd6c4-2747-48be-9443-5d1ab9f71805"
      },
      {
        "name": "Refunds",
        "item": [
          {
            "name": "Create refund",
            "item": [
              {
                "name": "Create payment for refund",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "439967a2-eb53-4a22-96d3-803ba1188414",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    pm.collectionVariables.set('payment_id_for_refund', response.payment_data.id);",
                        "    ",
                        "    postman.setNextRequest('Create refund');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "047d6fbf-5f79-418e-87cc-9f7add8223ad",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "efa231dd-b96e-4684-a81e-cd352814bef2",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-efa231dd-b96e-4684-a81e-cd352814bef2"
              },
              {
                "name": "Create refund",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "652b3dda-68c6-4e69-9f04-69720fdf7507",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "pm.expect(pm.collectionVariables.get('payment_id_for_refund')).to.not.be.undefined;",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22fa845c-7db7-4750-ac63-2779b355ef18",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('last_refund_id', response.refund_data.id);",
                        "    ",
                        "    postman.setNextRequest('Get refund by merchant order id');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "305d38e9-bb7f-45b7-8061-d5bf6f289f87",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-305d38e9-bb7f-45b7-8061-d5bf6f289f87"
              }
            ],
            "id": "89c6c15e-16e7-4962-83d5-a9cefd77462d",
            "description": "- Merchant makes POST request in JSON format to create new refund to endpoint **/api/refunds**, [see more](https://integration.unlimit.com/#createRefund)\n- Merchant can create new refund only after successfully creation of payment or recurring payment\n- Merchant must have payment id (or recurring id) and send it in refund request\n- Merchant receives response with created transaction result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "736d32a9-ae1d-4a9a-bb64-178c72c67657"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "1b06ecd6-4613-489d-918d-f64ed7d3848c"
                }
              }
            ],
            "uid": "10462328-89c6c15e-16e7-4962-83d5-a9cefd77462d"
          },
          {
            "name": "Get refunds list",
            "item": [
              {
                "name": "Get refund by merchant order id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94036c54-21a9-43c1-9152-5b0b15c3946e",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3038d06-8b79-4299-8bbc-62b102a69088",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('data');",
                        "    ",
                        "    pm.collectionVariables.set('last_refund_id', response.data[0].refund_data.id);",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "b72b7820-d8de-497e-a112-0559105ee0a1",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "merchant_order_id",
                        "value": "{{last_merchant_order_id}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-b72b7820-d8de-497e-a112-0559105ee0a1"
              },
              {
                "name": "Get refunds information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e13d68ad-2fbb-4de8-be72-b8707ec8fcf3",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9751bd07-007e-47aa-960c-23c68340caca",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('data');",
                        "    pm.expect(response).to.have.property('has_more');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "81d19863-e77b-49ee-926d-e47c584db63e",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "max_count",
                        "value": "5"
                      },
                      {
                        "key": "currency",
                        "value": "{{TERMINAL_CURRENCY}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-81d19863-e77b-49ee-926d-e47c584db63e"
              }
            ],
            "id": "20572cd4-53c7-4ead-8291-d4bfd3ba00ff",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/refunds) to get information about refunds list, [see more](https://integration.unlimit.com/#getRefunds)\n- Merchant receives GET response about transactions (refunds list)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "f2b6c88b-ed63-4b2c-9347-1b345217a49c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "6ffa5fc5-ca83-4836-b353-d37a2303ec72"
                }
              }
            ],
            "uid": "10462328-20572cd4-53c7-4ead-8291-d4bfd3ba00ff"
          },
          {
            "name": "Get refund by refund id",
            "item": [
              {
                "name": "Get refund by refund id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fc155dc-6c6e-4c9e-a2d0-b722030e2faa",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_refund_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f6ac27b-2b6b-43a7-b674-f17eebae63c2",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('refund_data');",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    pm.expect(response.refund_data.id).to.equal(pm.collectionVariables.get('last_refund_id'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "340b526a-29c9-4514-9e07-3f01acd04188",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/{{last_refund_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      "{{last_refund_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-340b526a-29c9-4514-9e07-3f01acd04188"
              }
            ],
            "id": "dbb5f766-4f23-42c0-8481-37e968a3330f",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/refunds/{refund_id}) to get information about refund by refund id, [see more](https://integration.unlimit.com/#getRefund)\n- Merchant receives GET response about transaction result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "904fa291-9995-4633-8d24-95ba3385328d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "a26ce88e-5b00-4a2f-a1da-a6d4e1e07e15"
                }
              }
            ],
            "uid": "10462328-dbb5f766-4f23-42c0-8481-37e968a3330f"
          },
          {
            "name": "Reverse refund (void)",
            "item": [
              {
                "name": "Create payment for reversed refund",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37d86847-67be-485e-bc1f-dc12888fecb6",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "595e0f50-890e-4a8a-b470-c68b8961c2ff",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    pm.collectionVariables.set('payment_id_for_reversed_refund', response.payment_data.id);",
                        "    ",
                        "    postman.setNextRequest('Create refund to reverse');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "822046ba-e15a-4fc1-a9b9-4016b3dc54e2",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-822046ba-e15a-4fc1-a9b9-4016b3dc54e2"
              },
              {
                "name": "Create refund to reverse",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f670d238-7d95-4898-89bf-35185dfbddfe",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_for_reversed_refund')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ca25b2a-a671-4c9f-8edf-7d1281be2f7e",
                      "exec": [
                        "pm.test(\"Request success\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('refund_id_to_reverse', response.refund_data.id);",
                        "    ",
                        "    postman.setNextRequest('Reverse refund');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "dfa62066-f3c3-410d-8003-f7cd2fd2ce54",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_reversed_refund}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-dfa62066-f3c3-410d-8003-f7cd2fd2ce54"
              },
              {
                "name": "Reverse refund",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd1e9e20-fb01-4105-80e0-af68670cd473",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('refund_id_to_reverse')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "afed9bdc-0205-4563-8291-a88cd2c35017",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    pm.expect(response.refund_data).to.have.property('status');",
                        "    pm.expect(response.refund_data.status).to.equal('VOIDED');",
                        "})",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "f4bdbcdf-f88d-4cb0-94c2-6704de1848f0",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"refund_data\": {\n        \"status_to\": \"REVERSE\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/{{refund_id_to_reverse}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      "{{refund_id_to_reverse}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-f4bdbcdf-f88d-4cb0-94c2-6704de1848f0"
              }
            ],
            "id": "ef56d748-1195-4ecc-97b9-9df899bce19c",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/refunds** to create new refund, [see more](https://integration.unlimit.com/#createRefund)\n- Merchant makes PATCH request in JSON format with refund id and refund_data.status_to='REVERSE' to **/api/refunds/{refund_id}** for reverse (void) refund - refund void possibility must be enabled by Unlimit manager, [see more](https://integration.unlimit.com/#updateRefund)\n- Merchant receives response with update result information (status='VOIDED')",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "id": "d29f0a45-3795-47e4-8077-c5bf44e8fd8c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "c96a911e-2d4e-4f28-926c-6ed0c7c425fc"
                }
              }
            ],
            "uid": "10462328-ef56d748-1195-4ecc-97b9-9df899bce19c"
          }
        ],
        "id": "91329739-a060-432e-9aff-0e4dc692bacf",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "d4fdecfe-8dfb-4211-8191-7edc00289a2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "4d1473a3-7182-4fc5-97c3-86461df087dd"
            }
          }
        ],
        "uid": "10462328-91329739-a060-432e-9aff-0e4dc692bacf"
      },
      {
        "name": "Payouts (cards)",
        "item": [
          {
            "name": "Create payout",
            "item": [
              {
                "name": "Create payout",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e121e80-1189-44b3-b403-a64500548ab7",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1565a53-2dd4-4176-b464-fa049952b4e7",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                        "    ",
                        "    postman.setNextRequest('Get payout by merchant order id');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "aa03d6eb-acd4-478e-8157-f3b6a49d2c92",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payout_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"expiration\": \"{{expiration}}\"\n        },\n        \"recipient_info\": \"{{$randomUUID}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-aa03d6eb-acd4-478e-8157-f3b6a49d2c92"
              }
            ],
            "id": "0dbf3207-26cb-4c04-a514-f19b74bda6b1",
            "description": "- Merchant makes POST request in JSON format to create new payout to endpoint (/api/payouts), [see more](https://integration.unlimit.com/#createPayout)\n- Merchant receives response with transaction (payout) result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "96517514-af6c-4baf-bd9e-a3249eccee41"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "3202831b-8381-4d9f-9a66-68cd35fffdf1"
                }
              }
            ],
            "uid": "10462328-0dbf3207-26cb-4c04-a514-f19b74bda6b1"
          },
          {
            "name": "Get payouts list",
            "item": [
              {
                "name": "Get payout by merchant order id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e01b29a0-b1b4-4ae8-88c5-1a7702d7a7f8",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2139f70c-e245-4f20-a9fd-cc85934f8c81",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "6ee4313b-0965-4922-8237-9d0d88223264",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "merchant_order_id",
                        "value": "{{last_merchant_order_id}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-6ee4313b-0965-4922-8237-9d0d88223264"
              },
              {
                "name": "Get payouts information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41ce5e0b-ffc7-4251-9330-805b22ed7522",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fdc8259-c14c-4b64-b942-676e6f31831d",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('data');",
                        "    pm.expect(response).to.have.property('has_more');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "30ef93f3-ed16-4776-b6fc-b57f78a9877d",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "max_count",
                        "value": "5"
                      },
                      {
                        "key": "currency",
                        "value": "{{TERMINAL_CURRENCY}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-30ef93f3-ed16-4776-b6fc-b57f78a9877d"
              }
            ],
            "id": "e1952186-3c02-45f7-8421-278af1ec9af1",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payouts) to get information about payouts, [see more](https://integration.unlimit.com/#getPayout)\n- Merchant receives GET response about transactions (payouts list)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "2fcd86ab-0616-4024-856c-ef7aaabffd5f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "8cbb76a9-5110-43d4-8c6f-3a6deb349ce6"
                }
              }
            ],
            "uid": "10462328-e1952186-3c02-45f7-8421-278af1ec9af1"
          },
          {
            "name": "Get payout by payout id",
            "item": [
              {
                "name": "Get payout by payout id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd6a5a50-a090-41f7-b565-6e9b97c3af27",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_payout_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd314900-9f2a-47a1-afa8-d62c31219fc3",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payout_data');",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    pm.expect(response.payout_data.id).to.equal(pm.collectionVariables.get('last_payout_id'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "11f5ad09-50dd-4f11-9b40-7cc073f15960",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/{{last_payout_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      "{{last_payout_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-11f5ad09-50dd-4f11-9b40-7cc073f15960"
              }
            ],
            "id": "fcb1fba4-ea04-43d6-a29f-3b1f74aaf529",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payouts/{payout_id}) to get information about payout by payout id, [see more](https://integration.unlimit.com/#getPayout)\n- Merchant receives GET response about transaction result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "9a072f30-4b7b-49dc-b631-456596c15b9b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "37ffc903-c146-4629-82e7-143101f77756"
                }
              }
            ],
            "uid": "10462328-fcb1fba4-ea04-43d6-a29f-3b1f74aaf529"
          },
          {
            "name": "Reverse payout (void)",
            "item": [
              {
                "name": "Create payout to reverse",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc46f486-eea2-4722-a36d-b8123b6b45c2",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d86d3f7c-3c99-48bd-9957-c14d898743c1",
                      "exec": [
                        "pm.test(\"Request success\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('payout_id_to_reverse', response.payout_data.id);",
                        "    ",
                        "    postman.setNextRequest('Reverse payout');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "6ceb2767-dbd1-4678-b202-ed8c9d3191e0",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payout_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        },\n        \"recipient_info\": \"{{$randomUUID}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-6ceb2767-dbd1-4678-b202-ed8c9d3191e0"
              },
              {
                "name": "Reverse payout",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1949a29-9cfd-474c-b631-1a53bd7a03f8",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payout_id_to_reverse')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d6bf636-307c-44e8-ba44-9b120263da00",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    pm.expect(response.payout_data).to.have.property('status');",
                        "    pm.expect(response.payout_data.status).to.equal('VOIDED');",
                        "       ",
                        "    postman.setNextRequest('Create one-click payment');",
                        "})",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "28595bae-7741-45e7-9aee-e0de3d15f4f4",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payout_data\": {\n        \"status_to\": \"REVERSE\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/{{payout_id_to_reverse}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      "{{payout_id_to_reverse}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-28595bae-7741-45e7-9aee-e0de3d15f4f4"
              }
            ],
            "id": "d4d3f6d4-373c-43a6-9696-27319c808e78",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payouts** to create new payout, [see more](https://integration.unlimit.com/#createPayout)\n- Merchant receives callback with transaction result information (with payout id)\n- Merchant makes PATCH request in JSON format with payout id and payout_data.status_to='REVERSE' to **/api/payouts/{payout_id}** for reverse (void) payout - payout void possibility must be enabled by Unlimit manager, [see more](https://integration.unlimit.com/#updatePayout)\n- Merchant receives response with update result information (status='VOIDED')",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "id": "d441654d-7ae0-40da-a4c0-48caa8f63ba5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "57310607-cfd1-438f-b6c2-c5e9a9e585dd"
                }
              }
            ],
            "uid": "10462328-d4d3f6d4-373c-43a6-9696-27319c808e78"
          }
        ],
        "id": "cd280bea-591d-411a-8b93-253f8cb0d581",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "4cffb8ba-eaa8-4749-bcfd-521f9b5ad406"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "f79468ca-59f8-4e92-9863-5d319ffd1795"
            }
          }
        ],
        "uid": "10462328-cd280bea-591d-411a-8b93-253f8cb0d581"
      },
      {
        "name": "Payouts (APMs)",
        "item": [
          {
            "name": "Asia",
            "item": [
              {
                "name": "South Korea",
                "item": [
                  {
                    "name": "Bank transfer South Korea",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "BANKTRANSFERKRW payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "033cd4ce-343b-4373-8cc2-5ef84ab79f3b"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0a717a32-50ea-4515-9634-e18d199b1bea"
                                }
                              }
                            ],
                            "id": "eea48e99-f7d6-401e-a2b4-5d24b6516a6f",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"BANKTRANSFERKRW\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"KRW\"\n    },\n     \"ewallet_account\": {\n        \"bank_code\": \"67\",\n        \"id\": \"1234567890\"\n    },\n    \"customer\": {\n        \"phone\":\"827123456789\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-eea48e99-f7d6-401e-a2b4-5d24b6516a6f"
                          }
                        ],
                        "id": "d77241d9-3207-48d2-831e-342416c9e24e",
                        "uid": "10462328-d77241d9-3207-48d2-831e-342416c9e24e"
                      }
                    ],
                    "id": "4f251315-64ec-422e-bf1b-6975bba20600",
                    "uid": "10462328-4f251315-64ec-422e-bf1b-6975bba20600"
                  }
                ],
                "id": "4d005c3a-8c0f-436b-b191-5f8a753f09ab",
                "uid": "10462328-4d005c3a-8c0f-436b-b191-5f8a753f09ab"
              },
              {
                "name": "Indonesia",
                "item": [
                  {
                    "name": "BANKTRANSFERSIDR",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create Indonesia Bank Transfer payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "68050832-8796-4680-b3af-8bb2e855d7c4"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "04c0c242-022d-4c84-a75d-4b24ef0ee0c4"
                                }
                              }
                            ],
                            "id": "ab8a516b-4f17-4f3e-977f-77e2a63babe8",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKTRANSFERSIDR\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ab8a516b-4f17-4f3e-977f-77e2a63babe8"
                          }
                        ],
                        "id": "b0e762cb-4a8f-49b5-b663-59bac879a6d1",
                        "uid": "10462328-b0e762cb-4a8f-49b5-b663-59bac879a6d1"
                      }
                    ],
                    "id": "47c9e1d4-1218-4dd5-9a81-008de232640b",
                    "uid": "10462328-47c9e1d4-1218-4dd5-9a81-008de232640b"
                  },
                  {
                    "name": "OVO",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVO payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "388e79aa-6a8c-4413-bbd2-5893caedb9d3"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8a31cf7c-2893-4728-a023-ff464e85b13d"
                                }
                              }
                            ],
                            "id": "7f0f1714-3d96-4d1d-856c-fb3502b959da",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVO\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-7f0f1714-3d96-4d1d-856c-fb3502b959da"
                          }
                        ],
                        "id": "85e1f04d-12fb-4820-afb9-461be3de45bb",
                        "uid": "10462328-85e1f04d-12fb-4820-afb9-461be3de45bb"
                      }
                    ],
                    "id": "aeaf8630-cc0a-4700-a16f-99e725fcc098",
                    "uid": "10462328-aeaf8630-cc0a-4700-a16f-99e725fcc098"
                  },
                  {
                    "name": "ShopeePay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create ShopeePay Mobile payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "eedec755-ae42-4b15-8cfb-5d0d5455519c"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "561a554a-fe12-411b-9886-356b408a018d"
                                }
                              }
                            ],
                            "id": "ac2eb49c-079c-481d-a0f3-ce0cbd15029e",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ac2eb49c-079c-481d-a0f3-ce0cbd15029e"
                          }
                        ],
                        "id": "fe06132c-a095-4665-9139-2cfddb53e11e",
                        "uid": "10462328-fe06132c-a095-4665-9139-2cfddb53e11e"
                      }
                    ],
                    "id": "618a12ce-fcaf-4a61-8f11-c7b92c844b13",
                    "uid": "10462328-618a12ce-fcaf-4a61-8f11-c7b92c844b13"
                  },
                  {
                    "name": "LINKAJA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create LINKAJA payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "774260af-409c-409b-b320-b7b42faf84e3"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4abd5306-51f9-4fb3-bb00-240c0b2df581"
                                }
                              }
                            ],
                            "id": "29615679-4fce-4253-aeee-b9b47dd4fd81",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"LINKAJA\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-29615679-4fce-4253-aeee-b9b47dd4fd81"
                          }
                        ],
                        "id": "306e2edc-ca99-4f72-838e-db31fea3c02a",
                        "uid": "10462328-306e2edc-ca99-4f72-838e-db31fea3c02a"
                      }
                    ],
                    "id": "d53758db-a91e-4e2c-914c-36bd3c4957b9",
                    "uid": "10462328-d53758db-a91e-4e2c-914c-36bd3c4957b9"
                  },
                  {
                    "name": "DANAWALLET",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DANA Indonesia Digital payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a94d49f5-79e9-4c5e-b69a-7457d12bf848"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "544a9382-d435-4b2d-a784-a157c8380d7f"
                                }
                              }
                            ],
                            "id": "0d625061-41b3-4ef5-b008-d4d6633968e0",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"DANAWALLET\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 10000,\n        \"currency\": \"IDR\"\n    },\n     \"ewallet_account\": {\n        \"bank_code\": \"67\",\n        \"id\": \"1234567890\"\n    },\n    \"customer\": {\n        \"phone\":\"827123456789\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-0d625061-41b3-4ef5-b008-d4d6633968e0"
                          }
                        ],
                        "id": "f97cdc84-98bf-4e4e-ae54-259de427097a",
                        "uid": "10462328-f97cdc84-98bf-4e4e-ae54-259de427097a"
                      }
                    ],
                    "id": "0c2f85bd-8df9-469a-b557-d31ac101eb4c",
                    "uid": "10462328-0c2f85bd-8df9-469a-b557-d31ac101eb4c"
                  }
                ],
                "id": "80454f47-1418-4717-8b2a-a3d74bfe2cf9",
                "uid": "10462328-80454f47-1418-4717-8b2a-a3d74bfe2cf9"
              },
              {
                "name": "Republic of the Philippines",
                "item": [
                  {
                    "name": "InstaPay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "InstaPay payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6895b940-e2b0-48e3-b6e6-e1b09059d290"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "   ",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0a73bab2-97ef-4536-ac34-0a202fd4195b"
                                }
                              }
                            ],
                            "id": "b673dc10-fdda-4224-b9a8-c7de39d0920d",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"instaph\",\n    \"payout_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\"\n    },\n        \"ewallet_account\": {\n            \"bank_code\":\"aub\",\n            \"id\": \"0123456789\"\n        }\n    }"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-b673dc10-fdda-4224-b9a8-c7de39d0920d"
                          }
                        ],
                        "id": "9a31ad96-9157-4fa8-9cea-fcaf325355f5",
                        "uid": "10462328-9a31ad96-9157-4fa8-9cea-fcaf325355f5"
                      }
                    ],
                    "id": "c69da16a-ea5c-452a-81bf-9f8ab2f6442f",
                    "uid": "10462328-c69da16a-ea5c-452a-81bf-9f8ab2f6442f"
                  },
                  {
                    "name": "Bank Transfer Philippines",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Bank Transfer Philippines  payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "1f64b51a-11d4-4519-9635-c4545c97a797"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "   ",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0e84c7c3-4c4f-4d44-8f8e-acdb005adbd9"
                                }
                              }
                            ],
                            "id": "8bd3494e-2762-4d7d-b32f-3e497b2a2f12",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"banktransfersphp\",\n    \"payout_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\"\n    },\n        \"ewallet_account\": {\n            \"bank_code\":\"guinobatan\",\n            \"id\": \"0123456789\"\n        }\n    }"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-8bd3494e-2762-4d7d-b32f-3e497b2a2f12"
                          }
                        ],
                        "id": "6536d7bc-30e2-4359-aef0-6f4c7acf74ab",
                        "uid": "10462328-6536d7bc-30e2-4359-aef0-6f4c7acf74ab"
                      }
                    ],
                    "id": "912eca9f-a504-4fd2-8c64-6bd356aec3d2",
                    "uid": "10462328-912eca9f-a504-4fd2-8c64-6bd356aec3d2"
                  }
                ],
                "id": "268deca7-9420-4fea-bcc9-8a00727fc575",
                "uid": "10462328-268deca7-9420-4fea-bcc9-8a00727fc575"
              },
              {
                "name": "Bank transfer Vietnam",
                "item": [
                  {
                    "name": "Bank transfer Vietnam",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "BANKTRANSFERVND payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0a4b8d6e-0542-43ed-9b5e-b6827df709da"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e828115c-e366-4ab8-8add-fbab6c7ce0eb"
                                }
                              }
                            ],
                            "id": "155d6bbc-67d1-4b2e-8a78-f0a209b92da2",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"BANKTRANSFERVND\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": \"20000\",\n        \"currency\": \"VND\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"BIDVVNVX\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-155d6bbc-67d1-4b2e-8a78-f0a209b92da2"
                          }
                        ],
                        "id": "97863546-4525-4c65-b7af-cbe41df046ad",
                        "uid": "10462328-97863546-4525-4c65-b7af-cbe41df046ad"
                      }
                    ],
                    "id": "a98bf26e-910d-4c5e-823d-c596e6b6640e",
                    "uid": "10462328-a98bf26e-910d-4c5e-823d-c596e6b6640e"
                  }
                ],
                "id": "3b43d452-cb38-4dbd-9f54-636cb3049eea",
                "uid": "10462328-3b43d452-cb38-4dbd-9f54-636cb3049eea"
              }
            ],
            "id": "87d189bd-7d55-41fe-be9b-80ab141956fe",
            "uid": "10462328-87d189bd-7d55-41fe-be9b-80ab141956fe"
          },
          {
            "name": "Africa",
            "item": [
              {
                "name": "OPAY",
                "item": [
                  {
                    "name": "Create OPAY payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "4ed68fc4-3ae0-475e-afba-40e52840dc47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "ad8e47d5-4f5e-4f1e-9f81-dde048d0d56a"
                        }
                      }
                    ],
                    "id": "578d460f-942f-4f2d-8d43-3b79fa5a586c",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"OPAY\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\":\n    {\n        \"id\": \"2341111111111\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-578d460f-942f-4f2d-8d43-3b79fa5a586c"
                  }
                ],
                "id": "2e84125b-9de7-4bbc-9e6c-6ffdbb387064",
                "uid": "10462328-2e84125b-9de7-4bbc-9e6c-6ffdbb387064"
              },
              {
                "name": "Direct Banking Nigeria",
                "item": [
                  {
                    "name": "Create Direct Banking Nigeria payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "dc3476e5-4015-42e8-aa61-1591b72eea54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "9f962986-82c4-4c26-89ba-70e90e415ff3"
                        }
                      }
                    ],
                    "id": "5f87872f-d27e-4e7d-9466-40b2e5cbbc9e",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"DIRECTBANKINGNGA\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"NGN\"\n    },\n     \"ewallet_account\": {\n        \"bank_code\": \"1003\",\n        \"id\": \"1111111111\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-5f87872f-d27e-4e7d-9466-40b2e5cbbc9e"
                  }
                ],
                "id": "c03d701a-9f75-4a2e-bce4-045d3f5d5fcd",
                "uid": "10462328-c03d701a-9f75-4a2e-bce4-045d3f5d5fcd"
              },
              {
                "name": "FCMB",
                "item": [
                  {
                    "name": "Create banktransfersngn payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "5ae88e59-7fbf-4f14-90f0-c48cea7630b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "720c2b98-7438-49f9-bcf9-cb8c21b5cffd"
                        }
                      }
                    ],
                    "id": "407116f9-1028-4fa1-a10b-78a2ddfb3e71",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"banktransfersngn\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Post ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-407116f9-1028-4fa1-a10b-78a2ddfb3e71"
                  }
                ],
                "id": "14e2c7e6-403d-4603-8ad1-999803ef9fb3",
                "uid": "10462328-14e2c7e6-403d-4603-8ad1-999803ef9fb3"
              },
              {
                "name": "M-Pesa",
                "item": [
                  {
                    "name": "Create M-Pesa payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "ba447f92-b3cd-4825-8f5e-49b7d0a19caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "9b84e0dd-1c9c-40a1-9f15-a7c22215dc21"
                        }
                      }
                    ],
                    "id": "90fa02ea-5637-450e-8f22-5894fd83c4f8",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"MPESA\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254123456789\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-90fa02ea-5637-450e-8f22-5894fd83c4f8"
                  }
                ],
                "id": "ad9403c3-e1fe-4e1d-b268-55bd402f6291",
                "uid": "10462328-ad9403c3-e1fe-4e1d-b268-55bd402f6291"
              },
              {
                "name": "Pesalink transfer to account",
                "item": [
                  {
                    "name": "Create Pesalink account payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "256daf44-0a4b-4b53-8970-0b81d5a04368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "7b4bca7b-51bb-4aa5-a021-f8f92162ec97"
                        }
                      }
                    ],
                    "id": "817bae1f-6aa6-4b7b-87ed-45fb5f77e557",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"pesalinkaccount\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-817bae1f-6aa6-4b7b-87ed-45fb5f77e557"
                  }
                ],
                "id": "124b22fa-7241-486e-be4d-5184b1dd6e15",
                "uid": "10462328-124b22fa-7241-486e-be4d-5184b1dd6e15"
              },
              {
                "name": "Pesalink transfer to wallet",
                "item": [
                  {
                    "name": "Create Pesalink wallet payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "46351f33-a58f-417f-87a8-40304e05f8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "0db0adcd-d501-4239-91f7-123b3549d4db"
                        }
                      }
                    ],
                    "id": "fc0211a2-529a-483c-9a57-2ba9dc81195a",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PESALINKWALLET\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-fc0211a2-529a-483c-9a57-2ba9dc81195a"
                  }
                ],
                "id": "0077203a-5f93-4059-9f01-231a97b1e34e",
                "uid": "10462328-0077203a-5f93-4059-9f01-231a97b1e34e"
              },
              {
                "name": "Pesalink transfer to phone",
                "item": [
                  {
                    "name": "Create Pesalink phone payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "192da042-fc93-4073-8a66-67ee56e1f015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "b8391910-df69-44b4-aaaa-9ab71b51f2ee"
                        }
                      }
                    ],
                    "id": "93111d48-013a-427e-823f-7029af7eaaad",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"pesalinkphone\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-93111d48-013a-427e-823f-7029af7eaaad"
                  }
                ],
                "id": "7a545201-3268-4e91-b8cb-d74a6276e455",
                "uid": "10462328-7a545201-3268-4e91-b8cb-d74a6276e455"
              },
              {
                "name": "Tigopesa Tanzania",
                "item": [
                  {
                    "name": "Create Tigopesa Tanzania payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "c918aabc-abec-48b3-b53c-7d6adcc42948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "a8087026-96f1-4944-a828-eea0c81aaaef"
                        }
                      }
                    ],
                    "id": "cbf28d14-fc5f-4534-98e1-17c30a90b624",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"TIGOPESA\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255123456789\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-cbf28d14-fc5f-4534-98e1-17c30a90b624"
                  }
                ],
                "id": "a0e9ed31-0809-4fe8-877b-77c2a2db0114",
                "uid": "10462328-a0e9ed31-0809-4fe8-877b-77c2a2db0114"
              },
              {
                "name": "M-Pesa Tanzania",
                "item": [
                  {
                    "name": "Create M-Pesa Tanzania payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "65a3cf0c-8569-413e-bb5e-df90467cc1fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "d48edcb9-be79-454d-b401-030acae92063"
                        }
                      }
                    ],
                    "id": "a659280a-31cf-4e86-b1ee-7ae32a6e91cb",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"MPESATZS\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order\"\n    },\n    \"payout_data\": {\n        \"amount\": 200,\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"+255123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-a659280a-31cf-4e86-b1ee-7ae32a6e91cb"
                  }
                ],
                "id": "1e5cfb81-61e3-4fb6-a0ea-3089e407d093",
                "uid": "10462328-1e5cfb81-61e3-4fb6-a0ea-3089e407d093"
              },
              {
                "name": "Airtel Tanzania",
                "item": [
                  {
                    "name": "Create Airtel Tanzania payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "5bca3986-c7c5-4153-8ccc-ab0aa6f61346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "29692a53-a2a4-460a-aad4-f5718c8a0c46"
                        }
                      }
                    ],
                    "id": "5c53ee59-2bad-4d0d-a64c-9dec0288f8ee",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"AIRTELTZS\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255740123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-5c53ee59-2bad-4d0d-a64c-9dec0288f8ee"
                  }
                ],
                "id": "7c5fd7b4-434a-4234-83d7-073be260f648",
                "uid": "10462328-7c5fd7b4-434a-4234-83d7-073be260f648"
              },
              {
                "name": "Airtel",
                "item": [
                  {
                    "name": "Create Airtel payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "b187e505-1b55-4e59-9fc9-efdb6084854d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "c650e308-9ea9-48b5-ac08-59dc6f4684b5"
                        }
                      }
                    ],
                    "id": "9f4355d9-77ae-437e-b28f-b6690a7bb725",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"AIRTEL\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254100123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-9f4355d9-77ae-437e-b28f-b6690a7bb725"
                  }
                ],
                "id": "5efb82b6-0403-44b6-92f7-5c9ad79e0ff4",
                "uid": "10462328-5efb82b6-0403-44b6-92f7-5c9ad79e0ff4"
              }
            ],
            "id": "96b43b40-00d3-480e-869c-e7304eb4a875",
            "uid": "10462328-96b43b40-00d3-480e-869c-e7304eb4a875"
          },
          {
            "name": "Europe",
            "item": [
              {
                "name": "SEPA Instant",
                "item": [
                  {
                    "name": "Create SEPATRANSFER  payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "d87a938d-cea8-4c3a-8dd6-5d38787fc444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "36ce2209-4db2-47b6-8922-a5662dc13165"
                        }
                      }
                    ],
                    "id": "37c5f56b-c66b-4e75-8c72-94285e2f25af",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"SEPATRANSFER\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"PL12123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"living_address\": {\n            \"country\": \"PL\",\n            \"address\": \"test address\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-37c5f56b-c66b-4e75-8c72-94285e2f25af"
                  }
                ],
                "id": "1b070503-7fc2-4a8e-9e32-fa6c21e6927d",
                "uid": "10462328-1b070503-7fc2-4a8e-9e32-fa6c21e6927d"
              }
            ],
            "id": "af6d46af-fb79-4be4-a416-3d6a1760ff75",
            "uid": "10462328-af6d46af-fb79-4be4-a416-3d6a1760ff75"
          },
          {
            "name": "Latin America",
            "item": [
              {
                "name": "Davivienda",
                "item": [
                  {
                    "name": "Create Davivienda bank payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "04a94e16-0585-4a7f-ba40-759678409c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "2d5302b5-d236-49d4-95ac-54da2787a095"
                        }
                      }
                    ],
                    "id": "dea22d4e-a404-464a-b1d2-66d023c2045e",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"daviviendabank\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"016704402001\",\n        \"bank_code\": \"000007\",\n        \"type\": \"CС\"\n    },\n    \"customer\": {\n        \"identity\": \"79845632\",\n        \"document_type\": \"02\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-dea22d4e-a404-464a-b1d2-66d023c2045e"
                  }
                ],
                "id": "2f43d6db-7f5a-4822-96d0-c95aa089bfed",
                "uid": "10462328-2f43d6db-7f5a-4822-96d0-c95aa089bfed"
              },
              {
                "name": "transfiya",
                "item": [
                  {
                    "name": "Create transfiya payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "9609eb1d-1b7e-4e06-9e69-dbe79516e2ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "be5246c2-1627-45c4-89ca-2bf2251843ec"
                        }
                      }
                    ],
                    "id": "4daecf17-f1a0-40f8-936e-d376364f1ea1",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"transfiya\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-4daecf17-f1a0-40f8-936e-d376364f1ea1"
                  }
                ],
                "id": "8a4b4d68-977a-46b9-96d9-f3b87a842994",
                "uid": "10462328-8a4b4d68-977a-46b9-96d9-f3b87a842994"
              },
              {
                "name": "SPEI",
                "item": [
                  {
                    "name": "Create SPEI payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "c781e15e-dd3c-46af-ba06-4ee9b59e3dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "461ad01a-c6ff-431a-bcee-4ca2d42a3c59"
                        }
                      }
                    ],
                    "id": "0781a4b2-9cec-487f-a10c-e576000f0961",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"MXN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"123456789012345689\"\n    },\n    \"customer\":{\n        \"full_name\":\"{{$randomFullName}}\"\n\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-0781a4b2-9cec-487f-a10c-e576000f0961"
                  }
                ],
                "id": "ba70da5c-a3a7-40c1-9d21-d5c8eef07139",
                "uid": "10462328-ba70da5c-a3a7-40c1-9d21-d5c8eef07139"
              },
              {
                "name": "DiMo",
                "item": [
                  {
                    "name": "Create Dimo payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "7bd91f1c-089d-4568-9301-df355e610144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "1cc3f0c9-dd3c-4c60-bf9f-d164ba4f9828"
                        }
                      }
                    ],
                    "id": "00a75463-53a5-4421-a906-eed094fa0944",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payout_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n \n    },\n        \"ewallet_account\": {\n            \"id\": \"123456789012345678\",\n            \"bank_code\": \"40002\"\n\n        }\n    }\n"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-00a75463-53a5-4421-a906-eed094fa0944"
                  }
                ],
                "id": "43562c7b-8954-4877-b6fd-5536d2c9ff8d",
                "uid": "10462328-43562c7b-8954-4877-b6fd-5536d2c9ff8d"
              },
              {
                "name": "Bank transfer Colombia",
                "item": [
                  {
                    "name": "Create Bank transfer Colombia payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "75f3298b-ccb8-454c-b68e-6007b75f228a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "2d9ec1e9-d2ee-4783-8907-0c850930d5fb"
                        }
                      }
                    ],
                    "id": "09317316-15d1-4f08-bfd6-156c76989758",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"BANKTRANSFERSCOP\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1859642039681735\",\n        \"bank_code\": \"1001\",\n        \"type\": \"cc\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"document_type\": \"cc\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-09317316-15d1-4f08-bfd6-156c76989758"
                  }
                ],
                "id": "abbcf66d-b184-4285-97c5-0ee7926291a5",
                "uid": "10462328-abbcf66d-b184-4285-97c5-0ee7926291a5"
              },
              {
                "name": "Pix",
                "item": [
                  {
                    "name": "Regular Payout",
                    "item": [
                      {
                        "name": "Create PIX regular payout",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');",
                                "",
                                "var merchant_order_id = uuid.v4();",
                                "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e630523e-bfb0-4459-a4d6-5757f0109e29"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.have.status(201);",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response.payout_data).to.have.property('id');",
                                "    ",
                                "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                " ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2037c4cc-cdd1-412f-99e7-2145c715c02c"
                            }
                          }
                        ],
                        "id": "bdfed6f5-fe9b-486e-a6f6-a126e820d6ab",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PIX\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"BRL\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1859642039681735\",\n        \"bank_code\": \"001\",\n        \"bank_branch\": \"1234\",\n        \"type\": \"SVGS\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payouts"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-bdfed6f5-fe9b-486e-a6f6-a126e820d6ab"
                      }
                    ],
                    "id": "fdf82005-69a0-4be9-93ac-0d96626319ac",
                    "uid": "10462328-fdf82005-69a0-4be9-93ac-0d96626319ac"
                  },
                  {
                    "name": "Payout by CPF",
                    "item": [
                      {
                        "name": "Create PIX payout by CPF",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');",
                                "",
                                "var merchant_order_id = uuid.v4();",
                                "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "846ca829-2bbf-4ac8-a823-efdc49437978"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.have.status(201);",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response.payout_data).to.have.property('id');",
                                "    ",
                                "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                " ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "57a6665d-aba8-4001-9c66-a95143c2eb5b"
                            }
                          }
                        ],
                        "id": "47dc3d14-b3af-486b-8f1b-35d0cde47fca",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PIX\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"BRL\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"401.162.304-01\",\n        \"type\": \"CPF\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payouts"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-47dc3d14-b3af-486b-8f1b-35d0cde47fca"
                      }
                    ],
                    "id": "60a966df-f1b0-4a51-b618-782e05991742",
                    "uid": "10462328-60a966df-f1b0-4a51-b618-782e05991742"
                  },
                  {
                    "name": "Payout by Phone",
                    "item": [
                      {
                        "name": "Create PIX payout by Phone",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');",
                                "",
                                "var merchant_order_id = uuid.v4();",
                                "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ea060a7b-b31e-4229-acc8-97b309ad021f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.have.status(201);",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response.payout_data).to.have.property('id');",
                                "    ",
                                "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                " ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8fdebdb7-9ebd-4812-a004-1aac6793835d"
                            }
                          }
                        ],
                        "id": "70cf1397-0ae2-4793-9b22-4b0e29b31a58",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PIX\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"BRL\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"+550012345678\",\n        \"type\": \"PHONE\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payouts"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-70cf1397-0ae2-4793-9b22-4b0e29b31a58"
                      }
                    ],
                    "id": "a5f65c9b-a9b9-498f-9886-38688a84f965",
                    "uid": "10462328-a5f65c9b-a9b9-498f-9886-38688a84f965"
                  },
                  {
                    "name": "Payout by Email",
                    "item": [
                      {
                        "name": "Create PIX payout by Email",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');",
                                "",
                                "var merchant_order_id = uuid.v4();",
                                "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "02c16e58-8f27-4101-99f2-bce7c082576f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.have.status(201);",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response.payout_data).to.have.property('id');",
                                "    ",
                                "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                " ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "31637e46-c79d-4448-b4e6-51d29b1167eb"
                            }
                          }
                        ],
                        "id": "53a314be-e69b-4860-bb04-7758069de0f0",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PIX\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"BRL\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"{{CUSTOMER_EMAIL}}\",\n        \"type\": \"EMAIL\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payouts"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-53a314be-e69b-4860-bb04-7758069de0f0"
                      }
                    ],
                    "id": "19250ed6-0268-4a22-a40f-75ca846b7268",
                    "uid": "10462328-19250ed6-0268-4a22-a40f-75ca846b7268"
                  },
                  {
                    "name": "Payout by EVP (random key)",
                    "item": [
                      {
                        "name": "Create PIX payout by EVP (random key)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');",
                                "",
                                "var merchant_order_id = uuid.v4();",
                                "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b958a5d1-162b-4fcd-b7c9-803f61b8dbcb"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.have.status(201);",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response.payout_data).to.have.property('id');",
                                "    ",
                                "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                " ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ec2a5d8c-86c2-48ec-9f38-a5a31c1d4b9f"
                            }
                          }
                        ],
                        "id": "231bf988-2549-4e91-bdd8-1427dbef1fd3",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PIX\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"BRL\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"f4n7kC2a-9Jp1-5sVb-8rT3-xZ1mN2pQ3rY9\",\n        \"type\": \"EVP\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payouts"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-231bf988-2549-4e91-bdd8-1427dbef1fd3"
                      }
                    ],
                    "id": "59db12e3-d11f-499c-9fad-21627c6f5386",
                    "uid": "10462328-59db12e3-d11f-499c-9fad-21627c6f5386"
                  }
                ],
                "id": "6e0d09b6-6d8a-4f7f-bced-10a2d36c1bed",
                "uid": "10462328-6e0d09b6-6d8a-4f7f-bced-10a2d36c1bed"
              },
              {
                "name": "Bank transfer Chile",
                "item": [
                  {
                    "name": "Create Bank transfer Chile payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "bc868d65-0045-4b4c-9be2-137f1b059dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "d5ebce42-c7a0-4dd9-a513-d06efcac1ff8"
                        }
                      }
                    ],
                    "id": "df8b3540-bb76-4443-abe5-821bf7bcea68",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"banktransfersclp\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1000,\n        \"currency\": \"CLP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"123465789\",\n        \"type\": \"checking_account\",\n        \"bank_code\": \"cl_banco_ripley\"\n    },\n    \"customer\":{\n        \"full_name\":\"{{$randomFullName}}\",\n        \"identity\":\"12345678K\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-df8b3540-bb76-4443-abe5-821bf7bcea68"
                  }
                ],
                "id": "602d9b8d-e93a-46ee-8bdf-ec9021c5d050",
                "uid": "10462328-602d9b8d-e93a-46ee-8bdf-ec9021c5d050"
              }
            ],
            "id": "a9f6f5a9-391b-4306-b2b2-52e92504ca77",
            "uid": "10462328-a9f6f5a9-391b-4306-b2b2-52e92504ca77"
          }
        ],
        "id": "f47018cb-6b8e-4951-b944-b45910a93c60",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "b178dffd-41e8-4e6f-b732-f43e61bef2df"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ],
              "id": "cd29c84c-c683-4f15-ac46-8afa6e455071"
            }
          }
        ],
        "uid": "10462328-f47018cb-6b8e-4951-b944-b45910a93c60"
      },
      {
        "name": "Recurrings",
        "item": [
          {
            "name": "One-click payments",
            "item": [
              {
                "name": "Create one-click payment",
                "item": [
                  {
                    "name": "Create one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('last_recurring_one_click_id', response.recurring_data.id);",
                            "    postman.setNextRequest('Get recurring by first recurring id');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "a9a1fba0-a0bf-450a-a214-ac1d65ebbf8b",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-a9a1fba0-a0bf-450a-a214-ac1d65ebbf8b"
                  }
                ],
                "id": "749896d6-8f06-4e4d-a217-31c2d3af8a0d",
                "description": "- Merchant makes POST request in JSON format to endpoint **/api/recurrings** ([see more](https://integration.unlimit.com/#createRecurring)) to create new one-click payment (with 'initiator'='cit' in request) with card tokenization for recurrent payments\n- One-click payment is created in the system and redirect URL is returned to Merchant in JSON format (payment page URL)\n- Merchant redirects Customer to the payment page (Unlimit or Merchant site) with provided URL\n- Merchant can use filing.id (from the callback or get response) in the next one-click transactions using saved (tokenized) card",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "5e842ef4-9511-487e-8523-37aa845e71f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "baa4541c-7ac3-4c90-936b-9937ad31c86f"
                    }
                  }
                ],
                "uid": "10462328-749896d6-8f06-4e4d-a217-31c2d3af8a0d"
              },
              {
                "name": "Create next one-click payment",
                "item": [
                  {
                    "name": "Get recurring by first recurring id",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f786fc-381d-4e66-be6f-4d8fb64d5e81",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_recurring_one_click_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a70ddd4-3d57-4d77-a63a-a7504a4a17b2",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_recurring_one_click_id'));",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_filing_id', response.recurring_data.filing.id);",
                            "    ",
                            "    postman.setNextRequest('Create next one-click payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "48efc365-1f0f-4e22-b250-e611d82bd66f",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_recurring_one_click_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{last_recurring_one_click_id}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-48efc365-1f0f-4e22-b250-e611d82bd66f"
                  },
                  {
                    "name": "Create next one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac460958-2ceb-48b1-98d3-624c5c17c876",
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "pm.expect(pm.collectionVariables.get('last_filing_id')).to.not.be.undefined;",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11346c71-8220-4a06-8f44-4f2af3722ddc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data.filing.id).to.equal(pm.collectionVariables.get('last_filing_id'));",
                            "",
                            "    // emulate customer behaviour, performing GET request to redirect url",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    postman.setNextRequest('Get recurring by merchant order id');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "63332ffa-16bc-4e1f-bf56-e990daf5a738",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"filing\": {\n            \"id\": \"{{last_filing_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-63332ffa-16bc-4e1f-bf56-e990daf5a738"
                  }
                ],
                "id": "8baff04a-bb1e-4e28-8e6f-74508f28fe53",
                "description": "* Merchant makes POST request in JSON format to endpoint **/api/recurrings**, to create new one-click payment (with 'initiator'='cit', filing.id from previous one-click in request) \n* Upon authentication completion, one-click payment is processed. Customer gets payment result page (redirect URL)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "a83c135c-01f6-4522-88ff-0a0409e91d95"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "c41c2bc5-63db-4aa1-a3af-25c27fc2e16d"
                    }
                  }
                ],
                "uid": "10462328-8baff04a-bb1e-4e28-8e6f-74508f28fe53"
              },
              {
                "name": "Create pre-authorized one-click payment",
                "item": [
                  {
                    "name": "Create pre-authorized one-click payment to complete",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f302e4-f929-4c41-a1b3-d9f2edf029dd",
                          "exec": [
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64b086f-127a-420b-b5ed-8887db6c9381",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('recurring_one_click_id_to_complete', response.recurring_data.id);",
                            "    postman.setNextRequest('Complete pre-authorized one-click payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "ea8478dc-82cf-4a2b-af69-2c0215f141a1",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-ea8478dc-82cf-4a2b-af69-2c0215f141a1"
                  },
                  {
                    "name": "Complete pre-authorized one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b04ebd3-99e9-461c-af4c-3414972802c9",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('recurring_one_click_id_to_complete')).to.not.be.undefined;",
                            "",
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbcfe2c-56d8-479e-89b6-cdb8d86a6da0",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok",
                            "    pm.response.to.have.jsonBody()",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('status');",
                            "    pm.expect(response.recurring_data.status).to.equal('COMPLETED');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "6076b896-d511-408c-a303-62d9d78a6631",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"recurring_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{recurring_one_click_id_to_complete}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{recurring_one_click_id_to_complete}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-6076b896-d511-408c-a303-62d9d78a6631"
                  }
                ],
                "id": "b0395574-4ec2-4f9a-898c-ca914fb99e1f",
                "description": "- Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create new one-click payment with parameter preauth='true', [see more](https://integration.unlimit.com/#createRecurring)\n- Pre-authorized one-click payment is created in the system and redirect URL is returned to Merchant in JSON format\n- Merchant redirects Customer to the payment page with provided URL\n- Merchant can complete or reverse (void) pre-authorized one-click payment using PATCH request in JSON format with payment id and recurring_data.status_to='REVERSE' or \"COMPLETE\" to **/api/recurrings/{recurring_id}**\n- Merchant receives response with update one-click payment result information (status=\"VOIDED\" or \"COMPLETED\")\n- If merchant doesn't send complete or reverse request ([see more](https://integration.unlimit.com/#updateRecurring)), one-click payment will be completed automatically in 7 calendar days\n- Amount in completion update request can be less, equal or more than preauthorized amount in first request",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "8106993f-acbb-46a9-a889-955f53c65674"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "08c3f1d1-90ba-42cd-9a06-abaaa49d8237"
                    }
                  }
                ],
                "uid": "10462328-b0395574-4ec2-4f9a-898c-ca914fb99e1f"
              },
              {
                "name": "Reverse one-click payment (void)",
                "item": [
                  {
                    "name": "Create pre-authorized one-click payment to reverse",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc9ebef-d3eb-4bc3-bdaf-37ef83512243",
                          "exec": [
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ca1014-67ac-4f6d-b3e1-1a6102709207",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('recurring_one_click_id_to_reverse', response.recurring_data.id);",
                            "    postman.setNextRequest('Reverse pre-authorized one-click payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "7ba19668-081a-4764-bf6d-612827b9eccc",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-7ba19668-081a-4764-bf6d-612827b9eccc"
                  },
                  {
                    "name": "Reverse pre-authorized one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39562bc-1e5f-42ed-bd62-e1e9fd9185b6",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('recurring_one_click_id_to_reverse')).to.not.be.undefined;",
                            "",
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e373b2-ca70-49ea-98ab-2d470649f089",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok",
                            "    pm.response.to.have.jsonBody()",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('status');",
                            "    pm.expect(response.recurring_data.status).to.equal('VOIDED');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "abd75e83-38c5-47d0-a00b-dd93b69e390a",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"recurring_data\": {\n    \"status_to\": \"REVERSE\"\n  }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{recurring_one_click_id_to_reverse}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{recurring_one_click_id_to_reverse}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-abd75e83-38c5-47d0-a00b-dd93b69e390a"
                  }
                ],
                "id": "9fdb0e69-97e7-40a7-a979-f3daba6999e4",
                "description": "- Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create new one-click payment, [see more](https://integration.unlimit.com/#createRecurring)\n- Merchant receives callback with transaction result information (with recurring id)\n- Merchant makes PATCH request in JSON format with recurring id and recurring_data.status_to='REVERSE' to **/api/recurrings{recurring_id}** to reverse (void) one-click payment, [see more](https://integration.unlimit.com/#updateRecurring)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "23fbebf3-bb1d-4c92-8ff1-c749f14d3e9a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "fbd66f89-0adb-436a-a4e4-f0b64981a20c"
                    }
                  }
                ],
                "uid": "10462328-9fdb0e69-97e7-40a7-a979-f3daba6999e4"
              },
              {
                "name": "Get recurring payments list",
                "item": [
                  {
                    "name": "Get recurring by merchant order id",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1e1ae4-33a9-47ca-862a-e05d05e35378",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caed047b-7076-44fb-b12a-2fe5d7e7de1a",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('data');",
                            "    pm.collectionVariables.set('last_recurring_id', response.data[0].recurring_data.id);",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "75d2acbf-6837-4f7d-8cf1-807917653f2f",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          ""
                        ],
                        "query": [
                          {
                            "key": "request_id",
                            "value": "{{$guid}}"
                          },
                          {
                            "key": "merchant_order_id",
                            "value": "{{last_merchant_order_id}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-75d2acbf-6837-4f7d-8cf1-807917653f2f"
                  },
                  {
                    "name": "Get recurrings information",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4031b1-03a4-40d0-8143-20e9de17dbdc",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5409455c-d6be-4ec3-b254-00e26aa46ceb",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "        ",
                            "    pm.expect(response).to.have.property('data');",
                            "    pm.expect(response).to.have.property('has_more');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "42ee25ee-6a75-4191-b8a5-42f4db1fae0c",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          ""
                        ],
                        "query": [
                          {
                            "key": "request_id",
                            "value": "{{$guid}}"
                          },
                          {
                            "key": "max_count",
                            "value": "5"
                          },
                          {
                            "key": "currency",
                            "value": "{{TERMINAL_CURRENCY}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-42ee25ee-6a75-4191-b8a5-42f4db1fae0c"
                  }
                ],
                "id": "9a8eace6-3abf-4b64-9ba9-e0476852fe94",
                "description": "- Merchant makes GET request in JSON format to endpoint **/api/recurrings** to get information about payments list, [see more](https://integration.unlimit.com/#getRecurrings)\n- Merchant receives GET response about transactions (recurrings list)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "a9df04f0-2004-4f61-b13d-38898eaef220"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "a52d809f-a866-43ef-a9af-698311aef109"
                    }
                  }
                ],
                "uid": "10462328-9a8eace6-3abf-4b64-9ba9-e0476852fe94"
              },
              {
                "name": "Get recurring payment by recurring id",
                "item": [
                  {
                    "name": "Get recurring by recurring id",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cc9f85-9028-4f3c-8380-289e6445d78c",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_recurring_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672f9e5c-5fcf-4144-8a22-55874b43170b",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_recurring_one_click_id'));",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "00c1a390-447a-4557-8663-11ef242b8d56",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_recurring_one_click_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{last_recurring_one_click_id}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-00c1a390-447a-4557-8663-11ef242b8d56"
                  }
                ],
                "id": "9a007542-bd86-4a87-80e2-83acb871c441",
                "description": "- Merchant makes GET request in JSON format to endpoint **/api/recurrings/{recurring_id}** to get information about one-click payment by recurring id, [see more](https://integration.unlimit.com/#getRecurring)\n- Merchant receives GET response about transaction result information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "942865da-244c-4b24-b162-6f4de62dc828"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "21e8f799-7ceb-4387-80d6-e4d92e7c9592"
                    }
                  }
                ],
                "uid": "10462328-9a007542-bd86-4a87-80e2-83acb871c441"
              }
            ],
            "id": "da754610-8dda-471f-8e72-516d74565e21",
            "uid": "10462328-da754610-8dda-471f-8e72-516d74565e21"
          },
          {
            "name": "Scheduled payments",
            "item": [
              {
                "name": "Sсheduled by Acquirer (SA)",
                "item": [
                  {
                    "name": "Main flow for SA recurring payments",
                    "item": [
                      {
                        "name": "Create plan for SA payments",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan_data');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('plan_id', response.plan_data.id);",
                                "    postman.setNextRequest('Create first SA payment');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "d65bb587-55dd-4143-9415-053a88998ed0",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"plan_data\": {\n        \"amount\": \"100\",\n        \"interval\":1,\n        \"name\":\"{{$randomWord}}\",\n        \"period\": \"month\",\n        \"retries\": 3,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d65bb587-55dd-4143-9415-053a88998ed0"
                      },
                      {
                        "name": "Create first SA payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('last_sa_recurring_id', response.recurring_data.id);",
                                "    pm.collectionVariables.set('last_subscription_id', response.subscription.id);",
                                "    postman.setNextRequest('Get subscription info');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "8b9e6964-f08e-4ea8-aa70-d2a72c99dbca",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"scheduled_type\": \"SA\",\n        \"plan\": {\n            \"id\": \"{{plan_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8b9e6964-f08e-4ea8-aa70-d2a72c99dbca"
                      }
                    ],
                    "id": "b21f5c7a-2b93-4ca3-b3f1-92784af073bf",
                    "description": "A new scheduled subscription can be created in order to initiate a chain of payments that are automatically repeated based on a schedule set by the plan. A first payment in a subscription is always CIT while all following are MIT only. The value 'SA' in parameter scheduled_type must be sent. The next payment is created automatically based on the schedule set in the first request.\n\n*   Merchant makes POST request in JSON format to endpoint **/api/recurring_plans** to create plan\n*   Merchant receives response with plan.id\n*   Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create first payment.",
                    "uid": "10462328-b21f5c7a-2b93-4ca3-b3f1-92784af073bf"
                  },
                  {
                    "name": "Subscription management",
                    "item": [
                      {
                        "name": "Get subscription info",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan');",
                                "    pm.expect(response.plan).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "",
                                "    postman.setNextRequest('Update subscription');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "974a1c3a-fac4-44be-a7a3-1ed938c55048",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "GET",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": ""
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_subscriptions/{{last_subscription_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_subscriptions",
                              "{{last_subscription_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-974a1c3a-fac4-44be-a7a3-1ed938c55048"
                      },
                      {
                        "name": "Update subscription",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('subscription_data');",
                                "    pm.expect(response.subscription_data).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "",
                                "    postman.setNextRequest('Create plan');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "dd43fb24-d525-4d39-904c-0aae949270a2",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "PATCH",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"CHANGE_STATUS\",\n    \"subscription_data\": {\n        \"status_to\": \"INACTIVE\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_subscriptions/{{last_subscription_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_subscriptions",
                              "{{last_subscription_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-dd43fb24-d525-4d39-904c-0aae949270a2"
                      }
                    ],
                    "id": "fe62a775-0d24-4d3a-a8d3-b3481aac7838",
                    "description": "Cancelling a subscription cancels all future scheduled payments of that subscription. A subscription can be cancelled up until the day before the next scheduled payment, in order **Customer** not to be charged.\n\n*   Merchant makes GET request to endpoint **/api/recurring_subscriptions/{subscription_id}** to get information about subscription payments by subscription id\n*   Merchant makes PATCH request in JSON format to endpoint **/api/recurring_subscriptions/{subscription_id}** to cancel subscription",
                    "uid": "10462328-fe62a775-0d24-4d3a-a8d3-b3481aac7838"
                  },
                  {
                    "name": "Plan management",
                    "item": [
                      {
                        "name": "Create plan",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan_data');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('plan_change_id', response.plan_data.id);",
                                "    postman.setNextRequest('Update plan');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "28cf9044-6322-4823-8a11-88b50eddab38",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"plan_data\": {\n        \"amount\": \"100\",\n        \"interval\": 1,\n        \"name\":\"{{$randomAlphaNumeric}}\",\n        \"period\": \"month\",\n        \"retries\": 3,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-28cf9044-6322-4823-8a11-88b50eddab38"
                      },
                      {
                        "name": "Update plan",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan_data');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('plan_id', response.plan_data.id);",
                                "    postman.setNextRequest('Delete plan');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "aec28264-5972-4209-84dc-722bcb067c3f",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "PATCH",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"RENAME\",\n    \"plan_data\": {\n        \"name_to\":\"{{$randomWord}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans/{{plan_change_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans",
                              "{{plan_change_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-aec28264-5972-4209-84dc-722bcb067c3f"
                      },
                      {
                        "name": "Delete plan",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    postman.setNextRequest('Create first SM payment (Mexico)');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "b9a66aa3-69e5-43c8-aea2-43f91adbe35f",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "DELETE",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": ""
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans/{{plan_change_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans",
                              "{{plan_change_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b9a66aa3-69e5-43c8-aea2-43f91adbe35f"
                      }
                    ],
                    "id": "173cba06-1ef4-4686-83bd-a377dff85c1c",
                    "description": "A **Scheduled by Unlimit** subscription cannot be created without a subscription plan. A subscription plan is a set of parameters and recurrence schedule that become a basis for each new subscription. In other words - a subscription plan is a draft used for new subscription creation. Each plan has its own id and can be used multiple times to create various subscriptions. Plans can exist without subscriptions, but subscriptions cannot exist without plans.\n\n*   Merchant makes POST request in JSON format to endpoint **/api/recurring_plans** to create plan\n*   Merchant makes PATCH request in JSON format to endpoint **/api/recurring_plans/{plan_id}** to update plan\n*   Merchant makes DELETE request in JSON format to endpoint **/api/recurring_plans/{plan_id}** to delete plan",
                    "uid": "10462328-173cba06-1ef4-4686-83bd-a377dff85c1c"
                  }
                ],
                "id": "5c566f8d-cc08-49e6-af84-07601ec8b1aa",
                "uid": "10462328-5c566f8d-cc08-49e6-af84-07601ec8b1aa"
              },
              {
                "name": "Sсheduled by Merchant (SM)",
                "item": [
                  {
                    "name": "Mexico SM payments",
                    "item": [
                      {
                        "name": "Create first SM payment (Mexico)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('last_sm_recurring_id', response.recurring_data.id);",
                                "    postman.setNextRequest('Get first SM payment (Mexico)');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "b8dc0dcb-dd13-4bf9-a16d-e5b0d80a7066",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"contract_number\": \"{{$randomInt}\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b8dc0dcb-dd13-4bf9-a16d-e5b0d80a7066"
                      },
                      {
                        "name": "Get first SM payment (Mexico)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "11f786fc-381d-4e66-be6f-4d8fb64d5e81",
                              "exec": [
                                "pm.expect(pm.collectionVariables.get('last_sm_recurring_id')).to.not.be.undefined;"
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "1a70ddd4-3d57-4d77-a63a-a7504a4a17b2",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_sm_recurring_id'));",
                                "    ",
                                "    pm.expect(response.recurring_data).to.have.property('filing');",
                                "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                                "    ",
                                "    pm.collectionVariables.set('last_sm_filing_id', response.recurring_data.filing.id);",
                                "    ",
                                "    postman.setNextRequest('Create next SM payment (Mexico)');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "e276f6af-16a8-40c1-9944-f043ef7ee1ad",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "GET",
                          "header": [],
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_sm_recurring_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings",
                              "{{last_sm_recurring_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-e276f6af-16a8-40c1-9944-f043ef7ee1ad"
                      },
                      {
                        "name": "Create next SM payment (Mexico)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "ac460958-2ceb-48b1-98d3-624c5c17c876",
                              "exec": [
                                "var uuid = require('uuid');",
                                "",
                                "pm.expect(pm.collectionVariables.get('last_sm_filing_id')).to.not.be.undefined;",
                                "",
                                "var merchant_order_id = uuid.v4();",
                                "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "11346c71-8220-4a06-8f44-4f2af3722ddc",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "    ",
                                "    pm.expect(response.recurring_data).to.have.property('filing');",
                                "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                                "    ",
                                "    pm.expect(response.recurring_data.filing.id).to.equal(pm.collectionVariables.get('last_sm_filing_id'));",
                                "",
                                "    // emulate customer behaviour, performing GET request to redirect url",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    postman.setNextRequest('Create first SM payment');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "77455cd7-c953-47c5-9529-68ed5ab0ecaa",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"mit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"contract_number\": \"{{$randomInt}}\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"filing\": {\n            \"id\": \"{{last_sm_filing_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-77455cd7-c953-47c5-9529-68ed5ab0ecaa"
                      }
                    ],
                    "id": "539deca4-0b2f-4460-b294-fb0ded4b71ef",
                    "description": "Mexican recurring payments must include parameter recurring_data.contract_number. It is contract number between customer and merchant about proceeding recurring payments.\n\nSA and SM recurring payments are available for Mexican merchants.",
                    "uid": "10462328-539deca4-0b2f-4460-b294-fb0ded4b71ef"
                  },
                  {
                    "name": "Create first SM payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('last_sm_recurring_id', response.recurring_data.id);",
                            "    postman.setNextRequest('Get first SM payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "df5be6f4-f9e3-4ad0-9093-c19da050c783",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-df5be6f4-f9e3-4ad0-9093-c19da050c783"
                  },
                  {
                    "name": "Get first SM payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f786fc-381d-4e66-be6f-4d8fb64d5e81",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_sm_recurring_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a70ddd4-3d57-4d77-a63a-a7504a4a17b2",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_sm_recurring_id'));",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_sm_filing_id', response.recurring_data.filing.id);",
                            "    ",
                            "    postman.setNextRequest('Create next SM payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "5f8bd733-9609-482a-9062-6a7641431a00",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_sm_recurring_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{last_sm_recurring_id}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-5f8bd733-9609-482a-9062-6a7641431a00"
                  },
                  {
                    "name": "Create next SM payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac460958-2ceb-48b1-98d3-624c5c17c876",
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "pm.expect(pm.collectionVariables.get('last_sm_filing_id')).to.not.be.undefined;",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11346c71-8220-4a06-8f44-4f2af3722ddc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data.filing.id).to.equal(pm.collectionVariables.get('last_sm_filing_id'));",
                            "",
                            "    // emulate customer behaviour, performing GET request to redirect url",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    postman.setNextRequest('Get limits for refunds and payouts');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "bdbc73e9-b3ce-44e9-a226-82a9070d3fa3",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"mit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"filing\": {\n            \"id\": \"{{last_sm_filing_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-bdbc73e9-b3ce-44e9-a226-82a9070d3fa3"
                  }
                ],
                "id": "bc35de95-fc10-4c36-b5d3-8f7d682c16ab",
                "description": "Scheduled by **Merchant** payment have a subscription management (subscription data, **Customer** notifications, subscription schedule) on **Merchant** side. All scheduled payments by **Merchant** (first - CIT, all continue payments - MIT) must be initiated by **Merchant** API request. First and continue scheduled by **Merchant** payments must be separated in request by recurring_data. initiator parameter (CIT or MIT) in request.\n\n*   Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create the first recurring payment (with 'initiator'='cit' in request)\n*   Merchant makes GET request to endpoint **/api/recurrings/{recurring_id}** to get filing id for next payments\n*   Merchant makes POST request in JSON format to endpoint **/api/recurrings**, to create the next recurring payment (with 'initiator'='mit', filing.id from previous request)\n    \n\nPCI DSS compliant **Merchants** can store the card data on their own side and make payments with card data (without filing.id). Merchants must provide recurring_data.network_trans_id for recurring payments in this case. Merchant can ask his Unlimit manager to enable this option.",
                "uid": "10462328-bc35de95-fc10-4c36-b5d3-8f7d682c16ab"
              }
            ],
            "id": "cf45aca2-17fb-49ee-8a90-7701880d857b",
            "description": "Scheduled payments are a type of **credentials-on-file (COF)** payments designed for **Merchant**s that sell goods and services to **Customers** on an ongoing basis and bill them periodically. These can be payments for online content or for access to services. **Merchant** sets up a payment schedule specifying an amount, currency and recurrence.\n\nScheduled payments are divided into two types:\n\n*   **SA** (scheduled by Unlimit). Unlimit is responsible for managing schedule (deducts funds, retry logic etc.)\n*   **SM** (scheduled by Merchant). Merchant stores the schedule of the recurring payments and sends API requests in accordance with it.",
            "uid": "10462328-cf45aca2-17fb-49ee-8a90-7701880d857b"
          }
        ],
        "id": "6d73faf0-92b3-4de4-8895-904de8408861",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "380806e6-cf61-4810-ac28-1137fa8a370b"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "b62fc149-ae9a-4b06-b37f-e6c8f6d3c873"
            }
          }
        ],
        "uid": "10462328-6d73faf0-92b3-4de4-8895-904de8408861"
      },
      {
        "name": "Limits",
        "item": [
          {
            "name": "Get limits for refunds and payouts",
            "item": [
              {
                "name": "Get limits for refunds and payouts",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aedabcce-11d1-45a4-85cc-194d25a649de",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37d3b638-1341-4e10-9cea-ed197433e851",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('remaining_limits');",
                        "    pm.expect(response.remaining_limits).to.have.property(pm.environment.get(\"TERMINAL_CURRENCY\"));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "1179b036-116c-4708-9597-49539806d687",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/limits/?request_id={{$guid}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "limits",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-1179b036-116c-4708-9597-49539806d687"
              }
            ],
            "id": "a61204f1-ee95-421d-92eb-d96fd43d1c21",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/limits) to get available refunds and payouts limits, [see more](https://integration.unlimit.com/#limits)\n- Available withdrawal balance for refunds and payouts by all the currencies linked to the terminal_code from merchant authorization context.\n- When NULL for specific currency is returned - withdrawal balance for this currency is disabled\n- When 0 for specific currency is returned - remaining withdrawal balance for this currency is 0\n- Service returns previous limits value (cache value with life time - 1 second) in case when from one merchant was received more than 1 GET request per 1 second. Only successfully authorized merchant can make this kind of request.",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "c12ab5eb-9add-40c2-a62c-f9237c3a4602"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "0bd9e9fa-798b-4bf8-b4fe-316bb90adcd6"
                }
              }
            ],
            "uid": "10462328-a61204f1-ee95-421d-92eb-d96fd43d1c21"
          }
        ],
        "id": "af6cbcaf-cdcb-47cc-8247-9988a5745ce3",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "6041cac0-9086-40b2-8da5-da1b092b6f36"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "d9c98208-8c8e-4232-a1a5-b4b278b560ce"
            }
          }
        ],
        "uid": "10462328-af6cbcaf-cdcb-47cc-8247-9988a5745ce3"
      },
      {
        "name": "Reports",
        "item": [
          {
            "name": "Get reports",
            "item": [
              {
                "name": "Initiate the reports’ preparation",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7025d28-923a-4a63-84f1-a97bae6797b2",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "pm.variables.set(\"request_time\", new Date());",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fcd1b6d-2700-44a0-ad90-9ade88da6fc2",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "        try {",
                        "        pm.response.to.have.jsonBody();",
                        "        var response = pm.response.json();",
                        "        pm.expect(response).to.have.property('sample_id');",
                        "        pm.collectionVariables.set('reports_sample_id', response.sample_id);",
                        "        pm.execution.setNextRequest('Get a list of reports');",
                        "    } catch (a) {",
                        "        pm.collectionVariables.set('reports_sample_id', \"{{$guid}}\");",
                        "        pm.execution.setNextRequest('Get a list of reports');",
                        "    }",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "12c0dcac-0451-457c-ba04-719fe70de271",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"reports_data\": {\n        \"start_date\": \"2022-03-01\",\n        \"end_date\": \"2022-03-07\",\n        \"report_type\": [\"regular_settlement\",\"icpp_settlement\"]\n    }\n}\n\n"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/reports",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "reports"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-12c0dcac-0451-457c-ba04-719fe70de271"
              },
              {
                "name": "Get a list of reports",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8471460e-9ea5-4c38-9c18-56474556ac33",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('reports_sample_id')).to.not.be.undefined;",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bb3c294-0d95-43d5-ae8a-b429ab034b9b",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    try {",
                        "        pm.response.to.be.ok;",
                        "        pm.response.to.have.jsonBody();",
                        "        var response = pm.response.json();",
                        "        pm.response.to.be.ok;",
                        "        pm.expect(response).to.have.property('sample_id');",
                        "        pm.collectionVariables.set('reports_sample_id', response.sample_id);",
                        "        postman.setNextRequest('Download report file');",
                        "    } catch(err) {",
                        "        postman.setNextRequest('Download report file');",
                        "    }",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "5682360c-5799-42a1-8f88-d51294881692",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/reports/{{reports_sample_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "reports",
                      "{{reports_sample_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-5682360c-5799-42a1-8f88-d51294881692"
              },
              {
                "name": "Download report file",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "849eb8c8-8715-47dd-afdc-0d2395f392dd",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('reports_sample_id')).to.not.be.undefined;",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f956c45d-fb7b-4150-8806-f72bd68beddb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    try {",
                        "        pm.response.to.be.ok;",
                        "    } catch(err) {",
                        "",
                        "    }",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "42679f8a-d156-43c8-88fa-366e204e2147",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    },
                    {
                      "key": "Accept",
                      "value": "application/octet-stream",
                      "type": "text"
                    }
                  ],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/reports/download/{{reports_sample_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "reports",
                      "download",
                      "{{reports_sample_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-42679f8a-d156-43c8-88fa-366e204e2147"
              }
            ],
            "id": "d409c8ad-81f3-404a-b020-bafda61553d0",
            "description": "*   Merchant makes POST request in JSON format to endpoint (/api/reports) to initiate preparation of reports files\n*   Only successfully authorized merchant can make this kind of request\n*   If files of reports according to POST request's parameters are not found, then the empty array is returned in response to POST request\n*   Merchant makes GET request in JSON format to endpoint (/api/reports/{sample_id}) to get a list of reports with links to files' downloading\n*   Merchant makes GET request in JSON format to endpoint (/api/reports/download/{id}) to download files of report’s\n*   All report files (in archive) or single report file can be downloaded\n*   To download report file the request header 'Accept' must be set to 'application/octet-stream'",
            "uid": "10462328-d409c8ad-81f3-404a-b020-bafda61553d0"
          }
        ],
        "id": "fd09d877-69f4-48e5-8014-21c78281a62a",
        "uid": "10462328-fd09d877-69f4-48e5-8014-21c78281a62a"
      },
      {
        "name": "Invoices",
        "item": [
          {
            "name": "Create invoice (single-use)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c07165e8-1fc5-4149-a9cc-1c56675d3cb6",
                  "exec": [
                    "",
                    "var today = new Date();",
                    "var tomorrow = new Date(today);",
                    "tomorrow.setDate(tomorrow.getDate() + 2);",
                    "pm.collectionVariables.set('invoice_end_date', tomorrow.toISOString().split('.')[0]+ 'Z');"
                  ],
                  "type": "text/javascript"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad38ca0d-8c08-4798-b2d5-5d6e28d72e48",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    pm.expect(response).to.have.property('invoice_url');",
                    "});",
                    "pm.collectionVariables.set('invoice_id', pm.response.json().invoice_data.id);"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "id": "6c48878e-5af7-453d-8a05-898a2256afae",
            "protocolProfileBehavior": {
              "followAuthorizationHeader": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json",
                  "type": "text"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"invoice_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"expire_at\": \"{{invoice_end_date}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"items\": [\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"10\",\n                \"count\": 1\n            },\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"2.34\",\n                \"count\": 1\n            }\n        ]\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"payment_methods\": [\n        \"BANKCARD\"\n    ]\n}\n"
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices"
                ]
              },
              "description": "*   Merchant makes POST request in JSON format to endpoint **/api/invoice** to create a new invoice\n*   Merchant receives a response with invoice URL, merchant can provide URL via email, any messenger, sms or other way to a cardholder for payment.\n*   Merchant makes GET request in JSON format to endpoint (/api/invoices/{invoice_id}) for getting information about invoice by invoice id\n*   Merchant receives GET response about invoice result information"
            },
            "response": [],
            "uid": "10462328-6c48878e-5af7-453d-8a05-898a2256afae"
          },
          {
            "name": "Get invoice by invoice id (single-use)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f30e1ea-8670-4817-b4da-8e4aa9c7d54a",
                  "exec": [
                    "pm.expect(pm.collectionVariables.get('invoice_id')).to.not.be.undefined;",
                    "",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04b2a808-aa5b-46a0-bba9-b632938bdfd8",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "",
                    "    var response = pm.response.json();",
                    "",
                    "    pm.expect(response).to.have.property('invoice_data');",
                    "    pm.expect(response.invoice_data).to.have.property('id');",
                    "    pm.expect(response.invoice_data.id).to.equal(pm.collectionVariables.get('invoice_id'));",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "id": "0573e7b6-2479-42ca-8ade-354ea1851083",
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "type": "string",
                      "value": "{{access_token}}"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices/{{invoice_id}}",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices",
                  "{{invoice_id}}"
                ]
              }
            },
            "response": [],
            "uid": "10462328-0573e7b6-2479-42ca-8ade-354ea1851083"
          },
          {
            "name": "Create invoice (re-usable)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c07165e8-1fc5-4149-a9cc-1c56675d3cb6",
                  "exec": [
                    "",
                    "var today = new Date();",
                    "var tomorrow = new Date(today);",
                    "tomorrow.setDate(tomorrow.getDate() + 2);",
                    "pm.collectionVariables.set('invoice_end_date', tomorrow.toISOString().split('.')[0]+ 'Z');"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad38ca0d-8c08-4798-b2d5-5d6e28d72e48",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    pm.expect(response).to.have.property('invoice_url');",
                    "});",
                    "pm.collectionVariables.set('invoice_id_reuse', pm.response.json().invoice_data.id);"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              }
            ],
            "id": "6f585c16-9349-4ec9-beff-e993a2c9fe5a",
            "protocolProfileBehavior": {
              "followAuthorizationHeader": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "type": "text"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"invoice_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"expire_at\": \"{{invoice_end_date}}\",\n        \"reusable\": true,\n        \"reuse_count\": \"5\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"items\": [\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"10\",\n                \"count\": 1\n            },\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"2.34\",\n                \"count\": 1\n            }\n        ]\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"payment_methods\": [\n        \"BANKCARD\", \"BOLETO\", \"AIRTELTZ\",\"MPESA\", \"IDEAL\", \"SPEI\"\n    ]\n}"
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices"
                ]
              },
              "description": "*   Merchant makes POST request in JSON format to endpoint **/api/invoice** to create a new invoice\n*   Merchant receives a response with invoice URL, merchant can provide URL via email, any messenger, sms or other way to a cardholder for payment.\n*   Merchant makes GET request in JSON format to endpoint (/api/invoices/{invoice_id}) for getting information about invoice by invoice id\n*   Merchant receives GET response about invoice result information"
            },
            "response": [],
            "uid": "10462328-6f585c16-9349-4ec9-beff-e993a2c9fe5a"
          },
          {
            "name": "Get invoice by invoice id (re-usable)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f30e1ea-8670-4817-b4da-8e4aa9c7d54a",
                  "exec": [
                    "pm.expect(pm.collectionVariables.get('invoice_id')).to.not.be.undefined;",
                    "",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04b2a808-aa5b-46a0-bba9-b632938bdfd8",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "",
                    "    var response = pm.response.json();",
                    "",
                    "    pm.expect(response).to.have.property('invoice_data');",
                    "    pm.expect(response.invoice_data).to.have.property('id');",
                    "    pm.expect(response.invoice_data.id).to.equal(pm.collectionVariables.get('invoice_id_reuse'));",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              }
            ],
            "id": "c3f9f151-d6b9-4388-8741-763788a66d4e",
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "type": "string",
                      "value": "{{access_token}}"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices/{{invoice_id_reuse}}",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices",
                  "{{invoice_id_reuse}}"
                ]
              }
            },
            "response": [],
            "uid": "10462328-c3f9f151-d6b9-4388-8741-763788a66d4e"
          }
        ],
        "id": "1f54d238-1bee-437a-b9c6-6e1462b63d04",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "0a62195c-1c47-4ee1-b650-7488f6022a40"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "b5b40044-c877-490e-853e-edc541ab13b6"
            }
          }
        ],
        "uid": "10462328-1f54d238-1bee-437a-b9c6-6e1462b63d04"
      },
      {
        "name": "Payment authentication",
        "item": [
          {
            "name": "Server-to-server mode",
            "item": [
              {
                "name": "Frictionless flow",
                "item": [
                  {
                    "name": "Create authentication with 3-D secure (frictionless flow)",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb41ef1-729c-4586-93c0-f3f8b4c8a015",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6634c58c-32e0-4e13-8b74-626f310499de",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('authentication_data');",
                            "    pm.expect(response.authentication_data).to.have.property('id');",
                            "  ",
                            "    postman.setNextRequest('Create authentication with 3-D secure (challenge flow)');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "8e4a818e-a284-4b90-ba38-a434e94015d6",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_FRICTIONLESS_CONFIRMED}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_PA\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "authentication"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-8e4a818e-a284-4b90-ba38-a434e94015d6"
                  }
                ],
                "id": "9625bec4-3b26-448e-8d15-73c062606e1c",
                "uid": "10462328-9625bec4-3b26-448e-8d15-73c062606e1c"
              },
              {
                "name": "Challenge flow",
                "item": [
                  {
                    "name": "Create authentication with 3-D secure (challenge flow)",
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2603fce5-9daa-4ec0-9422-fa16538abe1b",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('CReq');",
                            "    pm.expect(response).to.have.property('id');",
                            "",
                            "    pm.collectionVariables.set('creq', response.CReq);",
                            "    pm.collectionVariables.set('auth_id_to_complete_3ds', response.id);",
                            "",
                            "    pm.execution.setNextRequest('Send CReq to ACS for authentication');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3bfd00-9ccb-4c22-88aa-353d2f8a65c3",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "488fc7b9-7366-4411-92d6-74b28a9c75d6",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_PA\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "authentication"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-488fc7b9-7366-4411-92d6-74b28a9c75d6"
                  },
                  {
                    "name": "Send CReq to ACS for authentication",
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f3d9c6-11dc-41da-9e36-9e8afcdacd34",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    ",
                            "    pm.execution.setNextRequest('Complete authentication with CRes');",
                            "})"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "0bc73ae9-21f2-4a64-aade-e7fd342219c6",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "method": "POST",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/sandbox-emulator/3ds2/browserCReqS2S?creq={{creq}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "sandbox-emulator",
                          "3ds2",
                          "browserCReqS2S"
                        ],
                        "query": [
                          {
                            "key": "creq",
                            "value": "{{creq}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-0bc73ae9-21f2-4a64-aade-e7fd342219c6"
                  },
                  {
                    "name": "Complete authentication with CRes",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c319631-48ce-42d5-a6cf-eb1cee2f0ed1",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cd3c7c-2cef-446e-877d-65af8ceebdfc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    try {",
                            "        pm.response.to.be.ok;",
                            "        pm.response.to.have.jsonBody();",
                            "        ",
                            "        var response = pm.response.json();",
                            "        console.log(response);",
                            "        pm.expect(response).to.have.property('authentication_data');",
                            "        pm.expect(response.authentication_data).to.have.property('id'); ",
                            "    } catch(err) {",
                            "",
                            "    }",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "8fd7795d-3053-4d4f-87aa-7165d96f4e57",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"CONFIRM_3DS\",\n    \"CRes\": \"{{creq}}\"\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{auth_id_to_complete_3ds}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "authentication",
                          "{{auth_id_to_complete_3ds}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-8fd7795d-3053-4d4f-87aa-7165d96f4e57"
                  }
                ],
                "id": "a7956c1c-3d48-4422-910b-6b4aedce8bac",
                "uid": "10462328-a7956c1c-3d48-4422-910b-6b4aedce8bac"
              }
            ],
            "id": "211d29d9-56aa-4abd-bbaf-0311372f7392",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca107f4e-de01-4390-a0d4-1a2f8ab019cc",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                    "var password = pm.environment.get('S2S_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8215f496-47ca-4a36-96c5-b06f09099fd5",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "uid": "10462328-211d29d9-56aa-4abd-bbaf-0311372f7392"
          },
          {
            "name": "Gateway mode",
            "item": [
              {
                "name": "Create 3-D Secure payment authentication (gateway mode)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2603fce5-9daa-4ec0-9422-fa16538abe1b",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_authentication_id', response.authentication_data.id);",
                        "",
                        "",
                        "",
                        "    postman.setNextRequest('Create AVS authentication (gateway mode)');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "2305c58c-5db7-493b-b9b2-1a35f47b1649",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{$randomEmail}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_PA\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-2305c58c-5db7-493b-b9b2-1a35f47b1649"
              },
              {
                "name": "Create AVS authentication (gateway mode)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2603fce5-9daa-4ec0-9422-fa16538abe1b",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('avs_authentication_id', response.authentication_data.id);",
                        "",
                        "    postman.setNextRequest('Create 3-D Secure non-payment authentication (gateway mode)');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "41f3a0d1-d5a7-4e6e-8605-7232ac0ce620",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        },\n        \"billing_address\": {\n            \"addr_line_1\": \"221b, Baker Street\",\n            \"addr_line_2\": \"\",\n            \"city\": \"London\",\n            \"country\": \"GB\",\n            \"state\": \"\",\n            \"zip\": \"NW1 6XE1\"\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{$randomEmail}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"AVS\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-41f3a0d1-d5a7-4e6e-8605-7232ac0ce620"
              },
              {
                "name": "Create 3-D Secure non-payment authentication (gateway mode)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95ee2f98-087e-410f-ae0e-4683a9255f76",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('non_payment_authentication_id', response.authentication_data.id);",
                        "",
                        "   ",
                        "",
                        "    postman.setNextRequest('Get 3-D Secure payment authentication');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "cd9cd710-434f-4503-b5c0-3fadde650ed8",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{$randomEmail}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_NPA\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"payment_method\": \"BANKCARD\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-cd9cd710-434f-4503-b5c0-3fadde650ed8"
              },
              {
                "name": "Get 3-D Secure payment authentication",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07ec6fc7-becb-4070-8797-96e72aefc202",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('authentication_data');",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "",
                        "",
                        "    postman.setNextRequest('Get AVS authentication');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "b5882fb3-fc2d-4091-b946-e67424622f62",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{payment_authentication_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication",
                      "{{payment_authentication_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-b5882fb3-fc2d-4091-b946-e67424622f62"
              },
              {
                "name": "Get AVS authentication",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07ec6fc7-becb-4070-8797-96e72aefc202",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('authentication_data');",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "  ",
                        "    postman.setNextRequest('Get 3-D Secure non-payment authentication');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "0f4e93a6-6cc4-4490-9ff6-f130ee52c490",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{avs_authentication_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication",
                      "{{avs_authentication_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-0f4e93a6-6cc4-4490-9ff6-f130ee52c490"
              },
              {
                "name": "Get 3-D Secure non-payment authentication",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b37e8a10-c92c-4e8c-a0d5-61289f39a843",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('authentication_data');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebd8a791-f2c1-4e4a-a5fd-4241f611c91a",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "27b57137-8c01-4443-9855-99d7544ad7ba",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{non_payment_authentication_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication",
                      "{{non_payment_authentication_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-27b57137-8c01-4443-9855-99d7544ad7ba"
              }
            ],
            "id": "92307e3b-3248-4a54-a2b8-a0fe80bd4e83",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c72d533-42fb-4997-a482-e885e87c11f6",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c24d077-f26b-4ddb-a2fd-4f1548048b8a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "uid": "10462328-92307e3b-3248-4a54-a2b8-a0fe80bd4e83"
          }
        ],
        "id": "6075afd6-c8d1-4578-8433-568fc87868c5",
        "description": "The authentication service implements three types of authentication to cater to different security needs:\n\n- **3-D Secure Payment Authentication (3DS PA)** - This adds an extra layer of security for online card transactions.\n    \n- **3-D Secure Non-Payment Authentication (3DS NPA)** - This is used for securing non-payment activities that require customer authentication. This method ensures that any sensitive action, such as updating account information, accessing secure areas of a website, or changing customer settings, is performed by the authorized user.\n    \n- **Address Verification System (AVS)** - This system verifies the address provided by the customer during the payment process. It matches the billing address submitted with the address on file at the issuing bank. This helps in detecting and preventing fraudulent transactions.\n    \n\n3DS PA and 3DS NPA are available in Payment page, Gateway, Server-to-server modes. AVS is available in Payment page, Gateway modes",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e76e8db-a4fc-43d0-8fc9-2b5d3a3661f7",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());"
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bf45b25-f79f-4a80-9639-a987d5aceb16",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ]
            }
          }
        ],
        "uid": "10462328-6075afd6-c8d1-4578-8433-568fc87868c5"
      },
      {
        "name": "Account details (APMs)",
        "item": [
          {
            "name": "Get Account details Pix CPF",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "04a3e9aa-ba55-4bfc-baf6-702f957a1ac7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "5627ff6b-7ea7-4acc-9219-6ff5b6029139"
                }
              }
            ],
            "id": "7f56b81a-2f7a-453c-9241-931f08395978",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"account_info\": [\n    {\n      \"type\": \"identity\",\n      \"value\": \"401.162.304-01\"\n    },\n    {\n      \"type\": \"CPF\",\n      \"value\": \"401.162.304-01\"\n    }\n  ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/pix",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "pix"
                ]
              }
            },
            "response": [],
            "uid": "10462328-7f56b81a-2f7a-453c-9241-931f08395978"
          },
          {
            "name": "Get Account details Pix Phone",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "7160cfc8-3b59-48a1-9cc2-a60647d184ff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "a89d15e3-9a47-4bd9-8211-1af2438d308b"
                }
              }
            ],
            "id": "2061b463-2223-4303-a026-2420bd99ad7e",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"account_info\": [\n    {\n      \"type\": \"identity\",\n      \"value\": \"401.162.304-01\"\n    },\n    {\n      \"type\": \"PHONE\",\n      \"value\": \"+550012345678\"\n    }\n  ]\n} ",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/pix",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "pix"
                ]
              }
            },
            "response": [],
            "uid": "10462328-2061b463-2223-4303-a026-2420bd99ad7e"
          },
          {
            "name": "Get Account details Pix Email",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "db3c4569-dd31-4725-a414-2f4d8f59679a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "806ee4b1-f810-4cce-acef-2e8cbca4cfdb"
                }
              }
            ],
            "id": "0945b9b0-3e82-4177-8bdd-a858480c322c",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"account_info\": [\n    {\n      \"type\": \"identity\",\n      \"value\": \"401.162.304-01\"\n    },\n    {\n      \"type\": \"EMAIL\",\n      \"value\": \"email@email.com\"\n    }\n  ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/pix",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "pix"
                ]
              }
            },
            "response": [],
            "uid": "10462328-0945b9b0-3e82-4177-8bdd-a858480c322c"
          },
          {
            "name": "Get Account details Pix EVP (random key)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "b025f738-03b0-4e7c-8ac9-784d7b76e645"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "5e0b853a-7416-4d6d-a275-08fff4fcb6a2"
                }
              }
            ],
            "id": "616ef8e8-7998-4a94-af8b-e498c269bb16",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"account_info\": [\n    {\n      \"type\": \"identity\",\n      \"value\": \"401.162.304-01\"\n    },\n    {\n      \"type\": \"EVP\",\n      \"value\": \"f4n7kC2a-9Jp1-5sVb-8rT3-xZ1mN2pQ3rY9\"\n    }\n  ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/pix",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "pix"
                ]
              }
            },
            "response": [],
            "uid": "10462328-616ef8e8-7998-4a94-af8b-e498c269bb16"
          },
          {
            "name": "Get Account details Dimo",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "dff5cb4f-2608-489e-9e73-f7a120f630d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('customer');",
                    "        pm.expect(response.customer).to.have.property('clabe');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "6dfc4c6b-4a0b-42a1-804e-a5d47994ba3f"
                }
              }
            ],
            "id": "e658db31-a543-4c66-963f-dfed78fb5e30",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"type\": \"phoneNumber\",\n            \"value\": \"998121214\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/dimo",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "dimo"
                ]
              }
            },
            "response": [],
            "uid": "10462328-e658db31-a543-4c66-963f-dfed78fb5e30"
          },
          {
            "name": "Get Account details banktransfersidr",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "ac455f9c-52e3-48e6-b069-c111eb78a206"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "8c0387d1-1be9-43ec-842c-5d55551fc636"
                }
              }
            ],
            "id": "e4baf17c-71a6-44c9-bec2-9c67feb4d1ec",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/banktransfersidr",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "banktransfersidr"
                ]
              }
            },
            "response": [],
            "uid": "10462328-e4baf17c-71a6-44c9-bec2-9c67feb4d1ec"
          },
          {
            "name": "Get Account details danawallet",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "5d4746a2-3687-47fd-91b0-60902e528dcb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "7ebe9985-d418-44f4-b0a6-a3364d496a75"
                }
              }
            ],
            "id": "1068e948-d09c-438a-aef9-bf59e0a57038",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/danawallet",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "danawallet"
                ]
              }
            },
            "response": [],
            "uid": "10462328-1068e948-d09c-438a-aef9-bf59e0a57038"
          },
          {
            "name": "Get Account details ovo",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "0db6af45-0568-41a6-a430-3cfc7fc6c630"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "d9186fb6-50da-472a-9470-d4e3765e8d01"
                }
              }
            ],
            "id": "b36ba33a-accb-4413-83bc-26e4550b9a56",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/ovo",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "ovo"
                ]
              }
            },
            "response": [],
            "uid": "10462328-b36ba33a-accb-4413-83bc-26e4550b9a56"
          },
          {
            "name": "Get Account details linkaja",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "13df8b43-efd6-4f58-9727-955003505703"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "9d03c06a-6994-4953-9a46-4b4b35341b23"
                }
              }
            ],
            "id": "6e5d88bb-a929-41a7-9b03-cd206d6ee82c",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/linkaja",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "linkaja"
                ]
              }
            },
            "response": [],
            "uid": "10462328-6e5d88bb-a929-41a7-9b03-cd206d6ee82c"
          },
          {
            "name": "Get Account details shopeepay",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "978c9436-911e-41c6-ab34-66659818d107"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "1c69b155-b88d-4721-a627-f008c1b34cc1"
                }
              }
            ],
            "id": "8a1d5a6d-6425-4065-b1e3-a7f146bba958",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/shopeepay",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "shopeepay"
                ]
              }
            },
            "response": [],
            "uid": "10462328-8a1d5a6d-6425-4065-b1e3-a7f146bba958"
          },
          {
            "name": "Get Account details banktransfersidr",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "8d6a1794-082b-4f31-8d64-a66043b234dc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "7e2e8c49-e6ec-489c-86fe-0cab69413bb6"
                }
              }
            ],
            "id": "b2b1bb9e-6117-4d54-883b-1ff21142321b",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/banktransfersidr",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "banktransfersidr"
                ]
              }
            },
            "response": [],
            "uid": "10462328-b2b1bb9e-6117-4d54-883b-1ff21142321b"
          },
          {
            "name": "Get Account details danawallet",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "2600f866-6072-48a3-9f7f-5276f4fc49ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "d8dc3ef9-c2d1-4805-8e7a-af36e0fd8b18"
                }
              }
            ],
            "id": "63c4905f-8669-4757-a3c6-5fba4b8806e9",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/danawallet",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "danawallet"
                ]
              }
            },
            "response": [],
            "uid": "10462328-63c4905f-8669-4757-a3c6-5fba4b8806e9"
          },
          {
            "name": "Get Account details ovo",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "58218df0-082b-45d0-9732-05504f509b71"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "cdb73b5b-2b1b-437c-84f1-39bf972b57c3"
                }
              }
            ],
            "id": "89adb5d2-1b5b-46be-8bb1-6bcc614aae66",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/ovo",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "ovo"
                ]
              }
            },
            "response": [],
            "uid": "10462328-89adb5d2-1b5b-46be-8bb1-6bcc614aae66"
          },
          {
            "name": "Get Account details linkaja",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "5fcb138e-c4c7-44c0-9ac5-138589bcdfac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "fc30dcf0-050f-467f-95dd-28a0bb91968f"
                }
              }
            ],
            "id": "7a353007-49a4-496c-ac60-2007a5dfbf02",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/linkaja",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "linkaja"
                ]
              }
            },
            "response": [],
            "uid": "10462328-7a353007-49a4-496c-ac60-2007a5dfbf02"
          },
          {
            "name": "Get Account details shopeepay",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "d50eb5ba-5a88-4461-8984-c598b9459b01"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "b131fff4-4e34-462d-9c5c-31dd4ca1f19a"
                }
              }
            ],
            "id": "9e095595-886c-4a07-8da1-2e911e3eb565",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/shopeepay",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "shopeepay"
                ]
              }
            },
            "response": [],
            "uid": "10462328-9e095595-886c-4a07-8da1-2e911e3eb565"
          }
        ],
        "id": "2b3030ed-e1aa-4e5b-a394-3087ad7c76f8",
        "uid": "10462328-2b3030ed-e1aa-4e5b-a394-3087ad7c76f8"
      },
      {
        "name": "Get banks (APMs)",
        "item": [
          {
            "name": "Banks list. Bank transfer Indonesia. IDR",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "454db083-311f-467c-8a0f-251fa37bf5b0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "41913dc2-d87d-455b-ab7f-03c68773f1ca"
                }
              }
            ],
            "id": "767e56c5-adb5-4e62-b0d0-7f18ce18ef93",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/banktransfersidr/idr",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "banktransfersidr",
                  "idr"
                ]
              }
            },
            "response": [],
            "uid": "10462328-767e56c5-adb5-4e62-b0d0-7f18ce18ef93"
          },
          {
            "name": "Banks list. Bank transfer Colombia. COP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "70fd5300-416c-4ee6-a6ae-019d5ba776ac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "52c14ac8-389d-4520-b25f-54890eae9760"
                }
              }
            ],
            "id": "e5210064-ff5b-4b48-8b94-dffe32303f8f",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/banktransferscop/cop",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "banktransferscop",
                  "cop"
                ]
              }
            },
            "response": [],
            "uid": "10462328-e5210064-ff5b-4b48-8b94-dffe32303f8f"
          },
          {
            "name": "Banks list. Bank Transfer Philippines. PHP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "297409b2-37e7-4ade-a0c4-88f4bffef915"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "5d287377-1edb-48e9-bce0-c2eb31345b52"
                }
              }
            ],
            "id": "c7bdebc3-1c2a-4f0b-b6bb-e49d8dbe528a",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/banktransfersphp/php",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "banktransfersphp",
                  "php"
                ]
              }
            },
            "response": [],
            "uid": "10462328-c7bdebc3-1c2a-4f0b-b6bb-e49d8dbe528a"
          },
          {
            "name": "Banks list. Directbankingnga. NGN",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "d5db3db4-7264-45c4-ada2-12e4f6b8d2f0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "02bd9188-0fe7-4bdd-9181-43648d7ba883"
                }
              }
            ],
            "id": "e4ce78d6-db85-475f-adc8-e0d7623a866d",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/directbankingnga/ngn",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "directbankingnga",
                  "ngn"
                ]
              }
            },
            "response": [],
            "uid": "10462328-e4ce78d6-db85-475f-adc8-e0d7623a866d"
          },
          {
            "name": "Banks list. PSE. COP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "2f1fdc33-3b74-40c5-a6d1-039774d2b2b0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "0f2849a3-5c1d-4d91-aee2-a885c4a6a3d7"
                }
              }
            ],
            "id": "b8a4e569-293c-4cb3-9de0-dff0754d59ad",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/pse/cop",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "pse",
                  "cop"
                ]
              }
            },
            "response": [],
            "uid": "10462328-b8a4e569-293c-4cb3-9de0-dff0754d59ad"
          },
          {
            "name": "Banks list. InstaPay Philippines. PHP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "b326951f-f742-498d-8441-b14ae9278974"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "d1e361c3-dd10-4118-a6df-866e52e55923"
                }
              }
            ],
            "id": "ac685160-8d89-4b7c-9bef-68fe491a8d86",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/instaph/php",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "instaph",
                  "php"
                ]
              }
            },
            "response": [],
            "uid": "10462328-ac685160-8d89-4b7c-9bef-68fe491a8d86"
          },
          {
            "name": "Banks list. P24. EUR",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "93ec68c1-cc43-418f-9080-01fa40c2110f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "137fe46b-e4b3-4a7a-9c6d-ff8cc69985cd"
                }
              }
            ],
            "id": "c54b1505-da5a-4117-8f2b-1a80f704c392",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/p24/eur",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "p24",
                  "eur"
                ]
              }
            },
            "response": [],
            "uid": "10462328-c54b1505-da5a-4117-8f2b-1a80f704c392"
          },
          {
            "name": "Banks list. Openbanking. EUR. Country",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "7d0f800a-291a-49dd-b767-acc2504da73a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "c769e098-2dc1-4263-9445-385870e69705"
                }
              }
            ],
            "id": "699282a0-9dfd-43dd-aea1-7d1fbf7ee37f",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/openbanking/eur?country=de",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "openbanking",
                  "eur"
                ],
                "query": [
                  {
                    "key": "country",
                    "value": "de"
                  }
                ]
              }
            },
            "response": [],
            "uid": "10462328-699282a0-9dfd-43dd-aea1-7d1fbf7ee37f"
          },
          {
            "name": "Banks list. Ideal. EUR",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "1785310e-64e8-4ca6-bd54-a1719636348e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "45e34bd7-b32d-46dc-bf67-673eeabc4517"
                }
              }
            ],
            "id": "e8f739ac-5f52-44c6-bc8e-269a27d83720",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/ideal/eur",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "ideal",
                  "eur"
                ]
              }
            },
            "response": [],
            "uid": "10462328-e8f739ac-5f52-44c6-bc8e-269a27d83720"
          },
          {
            "name": "Banks list. Bank transfer Vietnam. VND",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "5827bd17-9b16-4264-857c-ec819f24f37d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "c407304f-0fd6-4a77-aac8-ca361a6a370e"
                }
              }
            ],
            "id": "ed228cd7-3257-4244-b46f-dad8803b28d7",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/banktransfervnd/VND",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "banktransfervnd",
                  "VND"
                ]
              }
            },
            "response": [],
            "uid": "10462328-ed228cd7-3257-4244-b46f-dad8803b28d7"
          },
          {
            "name": "Banks list. Bank transfer Chile. CLP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "3bd32a80-e5bf-4ee2-a8bc-86e78b40f727"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "70096230-d071-4d40-98fc-f45600ae112e"
                }
              }
            ],
            "id": "4529c6b8-813a-4b19-b05f-aaeb7c4530ff",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/banktransfersclp/CLP",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "banktransfersclp",
                  "CLP"
                ]
              }
            },
            "response": [],
            "uid": "10462328-4529c6b8-813a-4b19-b05f-aaeb7c4530ff"
          }
        ],
        "id": "4743f096-b3b2-48d6-8e0d-4c8f12e73dfd",
        "uid": "10462328-4743f096-b3b2-48d6-8e0d-4c8f12e73dfd"
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "17b1d8f4-be75-4e8b-bf84-1eb00bbd0e9a",
          "type": "text/javascript",
          "exec": [
            "var moment = require('moment');",
            "",
            "pm.variables.set('request_name', pm.info.requestName);",
            "pm.variables.set('expiration', moment().add(1, 'year').format('MM/YYYY'));",
            "pm.variables.set('customer_id', \"{{$randomUserName}}\");",
            "",
            "pm.collectionVariables.set('tokens', '(' + function () {",
            "    return {",
            "        obtain: function (terminal_code, password) {",
            "            var unlimit_api_url = pm.environment.get('UNLIMIT_API_URL');",
            "",
            "            pm.sendRequest({",
            "                url: `${unlimit_api_url}/api/auth/token`,",
            "                method: 'POST',",
            "                header: 'Content-Type:application/x-www-form-urlencoded',",
            "                body: {",
            "                    mode: 'raw',",
            "                    raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`",
            "                }",
            "",
            "            }, (err, res) => {",
            "                if (err || res.code !== 200) {",
            "                    throw new Error('Authentication Error');",
            "                }",
            "",
            "                var response = res.json();",
            "                pm.variables.set('access_token', response.access_token);",
            "            });",
            "        }",
            "    }",
            "} + ')();');"
          ]
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "be56bc81-868c-4fef-82be-365222fba380",
          "type": "text/javascript",
          "exec": [
            ""
          ]
        }
      }
    ]
  }
}
