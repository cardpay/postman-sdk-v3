{
  "collection": {
    "info": {
      "_postman_id": "9dacc77f-6ab0-4094-82b5-d6b2db8b4045",
      "name": "Unlimit REST API (3.0)",
      "description": "## Installation\n\n1. Install Postman 8.5+\n2. Download and import [collection file](https://raw.githubusercontent.com/cardpay/postman-sdk-v3/master/collection.json)\n3. Download and import [environment file](https://raw.githubusercontent.com/cardpay/postman-sdk-v3/master/sandbox.json)\n    \n\n## API usage\n\nExecute any section from Postman collection  \nFor more information about API v3 please visit [documentation web-site](https://integration.unlimit.com).\n\n## Notes\n\n- constants ('UNLIMIT_API_URL', 'PAYMENTPAGE_TERMINAL_CODE' and so on) are [Postman environment variables](https://learning.postman.com/docs/postman/variables-and-environments/variables/), defined for 'sandbox' environment.\n- following variables are defined for collection scope _(click 'Edit' button on 'unlimit-api' collection and see 'Pre-request Script' section)_:\n    - request_name — name of the test that is being executed, using for 'merchant_order.description' field value, in request's 'Body' section\n    - expiration — customer's card expiration date, using for 'card_account.card.expiration' field value, in gateway request 'Body' section. Format: mm/yyyy\n    - tokens — variable with 'obtain' function which is calling in order to get API authorization tokens\n- other variables ('', '', etc) are defined in 'Pre-request Script' and 'Tests' sections for particular request.",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2025-10-06T13:37:40.000Z",
      "createdAt": "2020-02-20T08:17:14.000Z",
      "lastUpdatedBy": "10462328",
      "uid": "10462328-9dacc77f-6ab0-4094-82b5-d6b2db8b4045"
    },
    "item": [
      {
        "name": "Authorization",
        "item": [
          {
            "name": "Get authorization tokens",
            "item": [
              {
                "name": "Get authorization token",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cda8100-43d1-41d1-b96d-9e4c21f27d33",
                      "exec": [
                        "pm.test(\"Successful response\", function () {",
                        "    pm.response.to.have.status(200);",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('access_token');",
                        "    pm.expect(response).to.have.property('refresh_token');",
                        "    pm.expect(response).to.have.property('expires_in');",
                        "    pm.expect(response).to.have.property('refresh_expires_in');",
                        "",
                        "    pm.variables.set('access_token', response.access_token);",
                        "    pm.variables.set('refresh_token', response.refresh_token);",
                        "});",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "216904b4-7bcb-4ccb-bc6c-b38c29e33d71",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/x-www-form-urlencoded"
                    }
                  ],
                  "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                      {
                        "key": "grant_type",
                        "value": "password",
                        "type": "text"
                      },
                      {
                        "key": "terminal_code",
                        "value": "{{PAYMENTPAGE_TERMINAL_CODE}}",
                        "type": "text"
                      },
                      {
                        "key": "password",
                        "value": "{{PAYMENTPAGE_PASSWORD}}",
                        "type": "text"
                      }
                    ]
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/auth/token",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "auth",
                      "token"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-216904b4-7bcb-4ccb-bc6c-b38c29e33d71"
              }
            ],
            "id": "f86c2b90-083b-4486-9174-b8094b1d50b1",
            "description": "## Get authorization tokens for every transaction request\n\n- In order to perform any API call the access token must be obtained.\n- To do this Merchant needs to send POST request to the API token endpoint.\n- As a result Merchant will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values.\n- After receiving access token (one from the pair) merchant should use in one create, update or get transaction information request\n- Merchant can receiving new pair of tokens (access and refresh tokens) for every transaction request and don't use refresh token for tokens pair refreshing\n    \n\n## Get authorization tokens for more than one request\n\n- After receiving access token merchant can save access and refresh tokens in his site\n- Merchant can use this pair of tokens for more than one transaction request\n- After lifetime of access token is ended, merchant can use refresh token for refreshing (getting new pair) tokens (see more in Refresh token case below)\n- If a lifetime of refresh token is ended merchant should send new request to the API token endpoint to get new pair of tokens\n- As a result Merchant will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "f324607e-3afb-4075-8447-ca4021350953"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "58fed0ea-0275-47eb-a1fe-e84cbc779258"
                }
              }
            ],
            "uid": "10462328-f86c2b90-083b-4486-9174-b8094b1d50b1"
          },
          {
            "name": "Refresh token",
            "item": [
              {
                "name": "Refresh authorization token",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2625fb80-ac36-4624-9ce0-6bfaa757648b",
                      "exec": [
                        "pm.test(\"Successful response\", function () {",
                        "    pm.response.to.have.status(200);",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('access_token');",
                        "    pm.expect(response).to.have.property('refresh_token');",
                        "    pm.expect(response).to.have.property('expires_in');",
                        "    pm.expect(response).to.have.property('refresh_expires_in');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "117285cb-0575-469b-9b63-e76be50b4afa",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/x-www-form-urlencoded"
                    }
                  ],
                  "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                      {
                        "key": "grant_type",
                        "value": "refresh_token",
                        "type": "text"
                      },
                      {
                        "key": "refresh_token",
                        "value": "{{refresh_token}}",
                        "type": "text"
                      }
                    ]
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/auth/token",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "auth",
                      "token"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-117285cb-0575-469b-9b63-e76be50b4afa"
              }
            ],
            "id": "a43703a7-a9ef-4d94-962f-89c6435b1b4d",
            "description": "- Merchant can send a POST request to the **/api/auth/token** endpoint and specify refresh token as a request param.\n- A result of this request will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values\n- If a lifetime of refresh token is ended merchant should send new request to the API token endpoint to get new pair of tokens (see 'Get authorization token' use case)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "8a2b1fea-5c16-4acb-b51d-25c231eb6d1a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "6ef2ab5d-eda3-45b6-8c3f-fba88ecac078"
                }
              }
            ],
            "uid": "10462328-a43703a7-a9ef-4d94-962f-89c6435b1b4d"
          },
          {
            "name": "Get authorization tokens for more than one request",
            "item": [
              {
                "name": "Create pre-authorized payment (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f16b6361-598a-49d0-bccd-d6ca5bee84b9",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        "pm.variables.set('request_time', new Date());",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fe0407a-8496-49ad-b697-306cf1a92c78",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_id_to_complete', response.payment_data.id);",
                        "",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "",
                        "    postman.setNextRequest('Get payment by payment id (reusable tokens)');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "a47a7f97-4bec-4821-a050-901b170ffb22",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-a47a7f97-4bec-4821-a050-901b170ffb22"
              },
              {
                "name": "Get payment by payment id (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcb91f53-a0ae-4c45-8000-d8c53e62a8a1",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd5a0777-fe7d-4795-b467-739b95bfac3d",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.expect(response.payment_data.id).to.equal(pm.collectionVariables.get('payment_id_to_complete'));",
                        "    ",
                        "    postman.setNextRequest('Complete pre-authorized payment (reusable tokens)');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "f833ddfb-dd26-4aea-be26-3700502c0073",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-f833ddfb-dd26-4aea-be26-3700502c0073"
              },
              {
                "name": "Complete pre-authorized payment (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55f0d1dd-0f0f-4435-83f4-2a4411849b66",
                      "exec": [
                        "pm.expect(pm.variables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "pm.variables.set(\"request_time\", new Date());",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c40004c7-d1a4-421b-876c-3e7279dbbe55",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok",
                        "    pm.response.to.have.jsonBody()",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('COMPLETED');",
                        "    ",
                        "    postman.setNextRequest('Get payment by payment id again (reusable tokens)');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "8f18694d-712a-4a42-88af-5e2048bb29f3",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-8f18694d-712a-4a42-88af-5e2048bb29f3"
              },
              {
                "name": "Get payment by payment id again (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9d4c1cb-856a-4723-90c4-bf0890152599",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e425d46c-4193-46ff-b455-1603e51f934a",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.expect(response.payment_data.id).to.equal(pm.variables.get('payment_id_to_complete'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "6d0348b4-03ab-4b59-b43a-659ba72c51fc",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-6d0348b4-03ab-4b59-b43a-659ba72c51fc"
              }
            ],
            "id": "cd504d36-1a4c-4617-a8f7-0b2e3a042795",
            "description": "- After receiving access token merchant can save access and refresh tokens on his side\n- Merchant can use this pair of tokens for more than one transaction request\n- After lifetime of access token is ended, merchant can use refresh token for refreshing (getting new pair) tokens (see more in Refresh token case below)\n- If a lifetime of refresh token is ended merchant should send new request to the API token endpoint to get new pair of tokens\n- As a result Merchant will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values\n- See 'Pre-request Scripts' section for 'reusable_tokens' function",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe8529f3-49a2-4af2-9ae7-c95df310dc04",
                  "type": "text/javascript",
                  "exec": [
                    "pm.collectionVariables.set('reusable_tokens', '(' + function () {",
                    "    return {",
                    "        obtain: function (terminal_code, password) {",
                    "            var moment = require('moment');",
                    "            var TOKEN_MIN_VALIDITY = 100;",
                    "            var unlimit_api_url = pm.environment.get('UNLIMIT_API_URL');",
                    "",
                    "            function unsetVar(name) {",
                    "                pm.collectionVariables.unset(`${name}_${terminal_code}`);",
                    "            }",
                    "",
                    "            function setVar(name, value) {",
                    "                pm.collectionVariables.set(`${name}_${terminal_code}`, value);",
                    "            }",
                    "",
                    "            function getVar(name, defValue) {",
                    "                return pm.collectionVariables.get(`${name}_${terminal_code}`) || defValue;",
                    "            }",
                    "",
                    "            var now = moment().unix();",
                    "            var expires_in = getVar('expires_in', 0);",
                    "            var refresh_expires_in = getVar('refresh_expires_in', 0);",
                    "",
                    "            if (expires_in - now >= TOKEN_MIN_VALIDITY && getVar('access_token')) {",
                    "                setVar('access_token', getVar('access_token'));",
                    "",
                    "            } else {",
                    "                var refresh_token = getVar('refresh_token');",
                    "                var request_body = `grant_type=refresh_token&refresh_token=${refresh_token}`;",
                    "",
                    "                if (refresh_expires_in - now < TOKEN_MIN_VALIDITY || !refresh_token) {",
                    "                    request_body = `grant_type=password&terminal_code=${terminal_code}&password=${password}`;",
                    "                }",
                    "",
                    "                unsetVar('access_token');",
                    "                unsetVar('refresh_token');",
                    "                unsetVar('expires_in');",
                    "                unsetVar('refresh_expires_in');",
                    "",
                    "                pm.sendRequest({",
                    "                    url: `${unlimit_api_url}/api/auth/token`,",
                    "                    method: 'POST',",
                    "                    header: 'Content-Type:application/x-www-form-urlencoded',",
                    "                    body: {",
                    "                        mode: 'raw',",
                    "                        raw: request_body",
                    "                    }",
                    "",
                    "                }, (err, res) => {",
                    "                    if (err || res.code !== 200) {",
                    "                        throw new Error('Authentication Error');",
                    "                    }",
                    "",
                    "                    var response = res.json();",
                    "                    setVar('access_token', response.access_token);",
                    "                    setVar('refresh_token', response.refresh_token);",
                    "                    setVar('expires_in', response.expires_in + moment().unix());",
                    "                    setVar('refresh_expires_in', response.refresh_expires_in + moment().unix());",
                    "                });",
                    "            }",
                    "        }",
                    "    }",
                    "} + ')();');"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b69c1c6-4ce0-4ce6-b348-2cc4dea21527",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "uid": "10462328-cd504d36-1a4c-4617-a8f7-0b2e3a042795"
          },
          {
            "name": "Authorization through signature",
            "item": [
              {
                "name": "Create payment through signature",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f16b6361-598a-49d0-bccd-d6ca5bee84b9",
                      "exec": [
                        "pm.collectionVariables.set('guid', pm.variables.replaceIn('{{$guid}}'));",
                        "pm.collectionVariables.set('time', new Date().toISOString());",
                        "",
                        "let uuid = require('uuid');",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);",
                        "",
                        "let api_client_id = pm.variables.get('SIGNATURE_API_CLIENT_ID');",
                        "let api_key = pm.variables.get('SIGNATURE_API_KEY');",
                        "let path = '/' + pm.request.url.path.slice(0).join('/');",
                        "let body = pm.collectionVariables.replaceIn(pm.variables.replaceIn(pm.request.body));",
                        "let xsign = '' + require(\"crypto-js\").SHA256((api_client_id + path + body + '' + api_key));",
                        "pm.collectionVariables.set('signature_x_sign', xsign);",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fe0407a-8496-49ad-b697-306cf1a92c78",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        " ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "db440bed-20cb-4c67-a029-813d1c1dbc5d",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "noauth"
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Authorization",
                      "value": "Signature {{GATEWAY_TERMINAL_CODE}},{{$guid}},{{SIGNATURE_API_CLIENT_ID}},{{signature_x_sign}}"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{guid}}\",\n        \"time\": \"{{time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"User-friendly empowering standardization\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{CUSTOMER_PHONE}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{HOLDER}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-db440bed-20cb-4c67-a029-813d1c1dbc5d"
              }
            ],
            "id": "625a9992-f187-45f2-8e29-2a210241876b",
            "description": "In order to perform any API call, merchant can use authorization through signature. API client ID and API key allows to get access to all the merchants’ wallets available in the merchant group.  \nIn order to use this type of authorization, the merchant should contact Unlimit manager.",
            "uid": "10462328-625a9992-f187-45f2-8e29-2a210241876b"
          }
        ],
        "id": "3da51624-aea8-4449-bf9b-1980aabe59e2",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "5f9f66f1-361c-4202-a729-71816a4f939a"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "e9c84fed-52da-4dee-8b7d-697a16385e64"
            }
          }
        ],
        "uid": "10462328-3da51624-aea8-4449-bf9b-1980aabe59e2"
      },
      {
        "name": "Payments (cards)",
        "item": [
          {
            "name": "Create payment (payment page)",
            "item": [
              {
                "name": "Create payment (payment page)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bed6479d-a890-4ff6-8387-767713de4d17",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f324adde-9c89-4573-9bc6-32973b9b41b8",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "e19a4c47-64c1-471d-b79f-d57f255a1540",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-e19a4c47-64c1-471d-b79f-d57f255a1540"
              }
            ],
            "id": "58e60f19-bb1b-4579-ae3c-c4514ec510e5",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment, [see more](https://integration.unlimit.com/#createPayment).\n- Payment is created in the system and redirect URL is returned to Merchant in JSON format\n- Card data is filled in by customer on hosted payment page (asynchronous process - out of scope of Postman collection)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "b81bd6ee-49ba-492e-a636-afffcaa6d74a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "d56f1fcf-6a76-48ef-beaa-c4919729e773"
                }
              }
            ],
            "uid": "10462328-58e60f19-bb1b-4579-ae3c-c4514ec510e5"
          },
          {
            "name": "Create payment without 3-D Secure",
            "item": [
              {
                "name": "Create payment (without 3-D Secure, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "7a1952aa-fc9f-456d-bc16-39dd9c4573ad",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-7a1952aa-fc9f-456d-bc16-39dd9c4573ad"
              }
            ],
            "id": "a976dca0-3945-4638-ae7c-a3a1ea37afe5",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment, [see more](https://integration.unlimit.com/#createPayment).\n- Payment is created in the system and redirect URL is returned to Merchant in JSON format",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "36b91583-75e5-42c1-8591-f8e8ecb4a6f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "47fedb83-0b4f-4210-8cda-7b108ac5d55d"
                }
              }
            ],
            "uid": "10462328-a976dca0-3945-4638-ae7c-a3a1ea37afe5"
          },
          {
            "name": "Create payment with 3-D Secure 2",
            "item": [
              {
                "name": "Create payment (3-D Secure 2)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73505a4b-d55f-42d2-8dcf-d1f606d563b2",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "276a4dd0-d77c-498e-b8a3-08393a096c80",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok",
                        "    pm.response.to.have.jsonBody()",
                        "    ",
                        "    var response = pm.response.json()",
                        "    pm.expect(response).to.have.property('redirect_url')",
                        "})",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "1024360c-bdb1-4188-9b60-f06e8b42adb5",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"trans_type\": \"01\"\n    },\n    \"card_account\": {\n        \"acct_type\": \"01\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"+1 123456789\",\n        \"work_phone\": \"+1 987654321\",\n        \"home_phone\": \"+1 462526747\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-1024360c-bdb1-4188-9b60-f06e8b42adb5"
              }
            ],
            "id": "e98d537a-ecd7-4d34-b7f9-a51cc8a972fd",
            "description": "* Merchant makes POST request in JSON format (with list of special 3-D Secure 2 parameters in request) to endpoint **/api/payments** to create new payment \n* Payment is created in the system and redirect URL is returned to Merchant in JSON format\n* The results of 3-D Secure 2 verification depend on the card provided in request and can be received only after customer redirects to redirect URL and passes 3-D Secure (asynchronous process - out of scope of Postman collection)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "aa050c15-9b43-4dc5-92b6-52c273033238"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "32b0f395-1adb-40cb-9bfc-2394b363be9b"
                }
              }
            ],
            "uid": "10462328-e98d537a-ecd7-4d34-b7f9-a51cc8a972fd"
          },
          {
            "name": "Reverse payment (void)",
            "item": [
              {
                "name": "Create pre-authorized payment to reverse",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af18803d-0977-448d-ae73-3ab034b3388a",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee5b229e-3d38-4dcb-b5e1-736bdd9c7091",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    ",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_id_to_reverse', response.payment_data.id);",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    postman.setNextRequest('Reverse pre-authorized payment');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "a1a2adb1-7381-445b-b943-7e3ca6db5cb9",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-a1a2adb1-7381-445b-b943-7e3ca6db5cb9"
              },
              {
                "name": "Reverse pre-authorized payment",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff50a88d-1788-461a-940c-46d889a5a13c",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_reverse')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5aa9a46e-63a3-4479-a890-57fa3b872ca4",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    ",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('VOIDED');",
                        "})"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "17188031-7a37-4846-ad93-aff478811db4",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"REVERSE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_reverse}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_reverse}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-17188031-7a37-4846-ad93-aff478811db4"
              }
            ],
            "id": "4e586676-c021-4526-86fc-6565d5f078da",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment, [see more](https://integration.unlimit.com/#createPayment).\n- Merchant receives callback with transaction result information (with payment id)\n- Merchant makes PATCH request in JSON format with payment id and payment_data.status_to='REVERSE' to **/api/payments/{payment_id}** to reverse (void) payment, [see more](https://integration.unlimit.com/#updatePayment).",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "24b5d0c7-ddea-4ecb-88e4-a9e86df326d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "8850e862-fe7f-482d-bcad-efe437449ac0"
                }
              }
            ],
            "uid": "10462328-4e586676-c021-4526-86fc-6565d5f078da"
          },
          {
            "name": "Create pre-authorised payment",
            "item": [
              {
                "name": "Create pre-authorized payment",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "986d2ea7-3ca9-45d5-9f81-da8505ff383a",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.variables.set('merchant_order_id', merchant_order_id);",
                        "pm.variables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa27e67c-2ab1-4561-b73b-9e3009c8bb10",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_id_to_complete', response.payment_data.id);",
                        "",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "",
                        "    postman.setNextRequest('Complete pre-authorized payment');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "668ee06f-5c4e-4d61-bdf2-c3baadf66ddd",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-668ee06f-5c4e-4d61-bdf2-c3baadf66ddd"
              },
              {
                "name": "Complete pre-authorized payment",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19a4cc3a-2213-444f-9c96-d5927dcbfda1",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fed742e8-e696-446f-a316-f8c7c82be93c",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok",
                        "    pm.response.to.have.jsonBody()",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('COMPLETED');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "1dd02330-6a25-4599-97ca-fb9fb1cc38e2",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-1dd02330-6a25-4599-97ca-fb9fb1cc38e2"
              }
            ],
            "id": "ff4a1e82-b559-4b43-ab98-9e663c8e00f9",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment with parameter preauth='true', [see more](https://integration.unlimit.com/#createPayment)\n- Preauth authorization payment is created in the system and redirect URL is returned to Merchant in JSON format (payment page URL)\n- Merchant redirects Customer to the payment page with provided URL\n- Merchant can complete or reverse (void) preauthorized payment using PATCH request in JSON format with payment id and payment_data.status_to='REVERSE' or \"COMPLETE\" to **/api/payments/{payment_id}**\n- Merchant receives response with update payment result information (status='VOIDED' or 'COMPLETED')\n- If merchant doesn't send complete or reverse request ([see more](https://integration.unlimit.com/#updatePayment)) payment will be completed automatically in 7 calendar days\n- Amount in completion update request can be less or more than preauthorized amount in first request",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "a3811576-3586-4eea-bdf7-ff8dc2d04950"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "f8585be3-5148-46ab-8d90-ea7dd0c5c8c0"
                }
              }
            ],
            "uid": "10462328-ff4a1e82-b559-4b43-ab98-9e663c8e00f9"
          },
          {
            "name": "Create payment with card token",
            "item": [
              {
                "name": "Create payment with card tokenization",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b97773ed-15fa-4ce2-92fa-4b12a58e9a4f",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3574e484-9a0f-4074-8001-1c7df9f77b9f",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.collectionVariables.set('payment_id_for_card_token', response.payment_data.id);",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    postman.setNextRequest('Get payment by id for card token');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "8e819f5d-dad5-4c1a-b22f-f14f8e771e69",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"generate_token\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-8e819f5d-dad5-4c1a-b22f-f14f8e771e69"
              },
              {
                "name": "Get payment by id for card token",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8221207d-7606-45eb-ad14-1b49f40f4413",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_for_card_token')).to.not.be.undefined;",
                        "",
                        "postman.setNextRequest('Create payment with card token');"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7da8c7d3-d74e-4a29-b665-6a816f6802a5",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('card_account');",
                        "    pm.expect(response.card_account).to.have.property('token');",
                        "    pm.collectionVariables.set('card_token', response.card_account.token);",
                        "    ",
                        "    postman.setNextRequest('Create payment with card token');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "8ab3fab2-7a5b-4912-8114-cb541c5a2a43",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_for_card_token}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_for_card_token}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-8ab3fab2-7a5b-4912-8114-cb541c5a2a43"
              },
              {
                "name": "Create payment with card token",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51992566-c7f1-4d75-902d-609d31dca75e",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "pm.expect(pm.collectionVariables.get('card_token')).to.not.be.undefined;",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d45750db-bce3-4d0b-8222-34f6554545cc",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "   ",
                        "    postman.setNextRequest('Get payment by merchant order id');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "b204f565-9974-41a6-acae-6f72885701df",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"card_account\": {\n        \"token\": \"{{card_token}}\",\n        \"card\": {\n        \t\"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-b204f565-9974-41a6-acae-6f72885701df"
              }
            ],
            "id": "abf9f898-580d-4dec-864e-199381d79c2b",
            "description": "- Merchant makes POST request in JSON format (with payment_data.generate_token parameter in request) to endpoint **/api/payments** to create new payment with card tokenization\n- Payment is created in the system and redirect URL is returned to Merchant in JSON format (payment page URL)\n- Merchant redirects Customer to the payment page (Unlimit or Merchant site) with provided URL\n- After successful transaction merchant can use card token (from callback) in the next transactions",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "id": "e3e5429d-1eb3-4ded-acbd-f1f98e25593f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "38dbb10a-59d8-4530-ad80-97ef2b5e6681"
                }
              }
            ],
            "uid": "10462328-abf9f898-580d-4dec-864e-199381d79c2b"
          },
          {
            "name": "Get payments list",
            "item": [
              {
                "name": "Get payment by merchant order id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7f69ffa-a7f7-4de0-a13d-ba320a26453a",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67f2ccd1-29c7-4327-8c54-554074681bba",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('data');",
                        "    ",
                        "    pm.collectionVariables.set('last_payment_id', response.data[0].payment_data.id);",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "69426992-646b-428a-9538-cb94f4d597d4",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "merchant_order_id",
                        "value": "{{last_merchant_order_id}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-69426992-646b-428a-9538-cb94f4d597d4"
              },
              {
                "name": "Get payments information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "696fb910-5b14-410b-8e62-3733c9bc710a",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0e0f99b-05a0-4ec0-9119-ac66358ddecb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('data');",
                        "    pm.expect(response).to.have.property('has_more');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "d24f2268-6faf-4176-b3b1-88fad384e47b",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "max_count",
                        "value": "5"
                      },
                      {
                        "key": "currency",
                        "value": "{{TERMINAL_CURRENCY}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-d24f2268-6faf-4176-b3b1-88fad384e47b"
              }
            ],
            "id": "97b81426-3dd0-44e3-a38a-425426ee603e",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payments) to get information about payments list, [see more](https://integration.unlimit.com/#getPayments)\n- Merchant receives GET response about transactions (payments list)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "0fec225b-59f1-4996-8300-550f77699aa7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "3b16e2fe-40ea-4874-902d-b78e88fff4c2"
                }
              }
            ],
            "uid": "10462328-97b81426-3dd0-44e3-a38a-425426ee603e"
          },
          {
            "name": "Get payment by payment id",
            "item": [
              {
                "name": "Get payment by payment id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1edfea5-d0f5-4e78-9109-7aeda314c814",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_payment_id')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06268d37-0364-482d-8af3-7ee735d8ef62",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.expect(response.payment_data.id).to.equal(pm.collectionVariables.get('last_payment_id'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "bc296873-a616-492b-9d24-0775740b6892",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{last_payment_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{last_payment_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-bc296873-a616-492b-9d24-0775740b6892"
              }
            ],
            "id": "84435173-e77d-4d78-b6d6-69e51c06a1d8",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payments/{payment_id}) for getting information about payment by payment id, [see more](https://integration.unlimit.com/#getPayment)\n- Merchant receives GET response about transaction (payment) result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "d701a6db-9610-4c0a-9186-4d821e1d3b91"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "43db0711-9c92-4f51-8fb1-eb1fa5e5a0c8"
                }
              }
            ],
            "uid": "10462328-84435173-e77d-4d78-b6d6-69e51c06a1d8"
          },
          {
            "name": "Create installment payment (one-phase)",
            "item": [
              {
                "name": "Create issuer financed installment payment (one-phase)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58c7c3e5-0b6f-4706-bff2-d28a2ec4ca1a",
                      "exec": [
                        "pm.test(\"Successful request\", function () {\r",
                        "    pm.response.to.be.ok;\r",
                        "    pm.response.to.have.jsonBody();\r",
                        "    \r",
                        "    var response = pm.response.json();\r",
                        "    pm.expect(response).to.have.property('redirect_url');\r",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0cddd46-3e6c-4f1f-90e1-8162f04a24b0",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                        "\r",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "fb1d3720-0c28-44da-9fdb-ad6db9825e29",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"request\": {\r\n        \"id\": \"{{$guid}}\",\r\n        \"time\": \"{{request_time}}\"\r\n    },\r\n    \"merchant_order\": {\r\n        \"id\": \"{{$randomUUID}}\",\r\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\r\n    },\r\n    \"payment_method\": \"BANKCARD\",\r\n    \"payment_data\": {\r\n        \"amount\": \"12.34\",\r\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\r\n        \"installment_type\": \"IF\",\r\n        \"installments\": \"6\" \r\n    },\r\n    \"card_account\": {\r\n        \"card\": {\r\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\r\n            \"holder\": \"{{$randomFullName}}\",\r\n            \"expiration\": \"{{expiration}}\",\r\n            \"security_code\": \"100\"\r\n        }\r\n    },\r\n    \"customer\": {\r\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\r\n        \"id\": \"DfVg56Gvx\"\r\n    }\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-fb1d3720-0c28-44da-9fdb-ad6db9825e29"
              },
              {
                "name": "Create merchant financed installment payment (one-phase)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef421c77-bd01-4b8f-97ed-8ec7927325a2",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                        "\r",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc799e45-f58a-4c05-9b14-2a98b9bad17e",
                      "exec": [
                        "pm.test(\"Successful request\", function () {\r",
                        "    pm.response.to.be.ok;\r",
                        "    pm.response.to.have.jsonBody();\r",
                        "    \r",
                        "    var response = pm.response.json();\r",
                        "    pm.expect(response).to.have.property('redirect_url');\r",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "ea3daed1-cd46-46d3-a279-62b647ceed68",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"request\": {\r\n        \"id\": \"{{$guid}}\",\r\n        \"time\": \"{{request_time}}\"\r\n    },\r\n    \"merchant_order\": {\r\n        \"id\": \"{{$randomUUID}}\",\r\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\r\n    },\r\n    \"payment_method\": \"BANKCARD\",\r\n    \"payment_data\": {\r\n        \"amount\": \"12.34\",\r\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\r\n        \"installment_type\": \"MF_HOLD\",\r\n        \"installments\": \"6\" \r\n    },\r\n    \"card_account\": {\r\n        \"card\": {\r\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\r\n            \"holder\": \"{{$randomFullName}}\",\r\n            \"expiration\": \"{{expiration}}\",\r\n            \"security_code\": \"100\"\r\n        }\r\n    },\r\n    \"customer\": {\r\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\r\n        \"id\": \"DfVg56Gvx\"\r\n    }\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-ea3daed1-cd46-46d3-a279-62b647ceed68"
              }
            ],
            "id": "4011a210-b4a8-4369-87ca-8a96ff8df628",
            "description": "Merchant makes POST request in JSON format to endpoint **/api/payments** to create new Installment payment (one-phase), [see more](https://integration.unlimit.com/#createPayment).\n\n**How to create Installment payment:**\n\n- Make POST-request\n- Click on 3DS redirect URL from response message\n- Emulate successful 3DS validation\n    \n\nAfter successful 3DS validation payment will be completed",
            "uid": "10462328-4011a210-b4a8-4369-87ca-8a96ff8df628"
          },
          {
            "name": "Create installment payment (two-phase)",
            "item": [
              {
                "name": "Create merchant financed installment payment (two-phase)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f157e50-632d-4de7-b1ad-72be6d5c1868",
                      "exec": [
                        "var uuid = require('uuid');\r",
                        "\r",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');\r",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');\r",
                        "\r",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                        "tokens.obtain(terminal_code, password);\r",
                        "\r",
                        "var merchant_order_id = uuid.v4();\r",
                        "pm.variables.set('merchant_order_id', merchant_order_id);\r",
                        "pm.variables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5006bed-8b78-4ed6-aefe-e9310a372073",
                      "exec": [
                        "pm.test(\"Successful request\", function () {\r",
                        "    pm.response.to.be.ok;\r",
                        "    pm.response.to.have.jsonBody();\r",
                        "\r",
                        "    var response = pm.response.json();\r",
                        "    pm.expect(response).to.have.property('redirect_url');\r",
                        "    \r",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;\r",
                        "    pm.collectionVariables.set('payment_id_to_update', response.payment_data.id);\r",
                        "    \r",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {\r",
                        "        pm.expect(response_after_redirect.code).to.equal(200);\r",
                        "    });\r",
                        "    \r",
                        "    postman.setNextRequest('Update merchant financed installment payment (two-phase)');\r",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "40d6c66b-181b-4516-b065-3c94262253d1",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"request\": {\r\n        \"id\": \"{{$guid}}\",\r\n        \"time\": \"{{request_time}}\"\r\n    },\r\n    \"merchant_order\": {\r\n        \"id\": \"{{$randomUUID}}\",\r\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\r\n    },\r\n    \"payment_method\": \"BANKCARD\",\r\n    \"payment_data\": {\r\n        \"amount\": \"12.34\",\r\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\r\n        \"preauth\": true,\r\n        \"installment_type\": \"MF_HOLD\",\r\n        \"installments\": \"6\" \r\n    },\r\n    \"card_account\": {\r\n        \"card\": {\r\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\r\n            \"holder\": \"{{$randomFullName}}\",\r\n            \"expiration\": \"{{expiration}}\",\r\n            \"security_code\": \"100\"\r\n        }\r\n    },\r\n    \"customer\": {\r\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\r\n        \"id\": \"DfVg56Gvx\"\r\n    }\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-40d6c66b-181b-4516-b065-3c94262253d1"
              },
              {
                "name": "Update merchant financed installment payment (two-phase)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e4fc82a-77c4-4ab0-b1a8-4fd9107eb7d8",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_update')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faf06132-0f44-46d9-9a14-d653fccdb276",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    ",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('COMPLETED');",
                        "})"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "3cd82d25-6188-4545-85f3-d97d92e79ade",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_update}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_update}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-3cd82d25-6188-4545-85f3-d97d92e79ade"
              }
            ],
            "id": "5d4d4507-58d2-4ccc-a0bf-babb183b38e5",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new Installment payment (two-phase), [see more](https://integration.unlimit.com/#createPayment).\n    \n\n**How to create two-phase Installment payment:**\n\n- Make POST-request\n- Click on 3DS redirect URL from response message\n- Emulate successful 3DS validation\n- Make PATСH-request to update (complete) Installment payment\n    \n\n**Important:** in POST-request non-3DS card is used. These settings are relevant only for the test collection (due to Sandbox features) - real Installment payments can be created only for cards with 3DS enabled",
            "uid": "10462328-5d4d4507-58d2-4ccc-a0bf-babb183b38e5"
          },
          {
            "name": "Create payment in server-to-server mode",
            "item": [
              {
                "name": "Create payment with passing 3-D Secure independently",
                "item": [
                  {
                    "name": "Create payment with 3-D secure results",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d36774-35bf-4366-8380-1d9191161ba5",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI');",
                            "var password = pm.environment.get('S2S_PASSWORD_EXMPI');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);",
                            "",
                            "",
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7108ef8-3109-46b3-9eda-2ff4419dcc8c",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "354172de-22b2-42bb-88b0-59f73f583ff4",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    },\n    \"three_d_secure\": {\n        \"card_enrollment\": \"Y\",\n        \"cavv\": \"AAABABhVGHmHFVORcFUYEGddqYo=\",\n        \"status\": \"Y\",\n        \"three_d_secure_flow\": \"3DS2C\",\n        \"xid\": \"c7c3c5d3-77a9-4106-b677-8e91b2a052bd\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-354172de-22b2-42bb-88b0-59f73f583ff4"
                  },
                  {
                    "name": "Create payment without 3-D secure results",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daeb1068-d13f-4d6c-b7ca-b97df3875882",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI_NO3DS');",
                            "var password = pm.environment.get('S2S_PASSWORD_EXMPI_NO3DS');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);",
                            "",
                            "",
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72e6cb7-e2e5-4435-97b0-411f34a842a5",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "   ",
                            "    pm.expect(response).to.have.property('payment_data');",
                            "    pm.expect(response.payment_data).to.have.property('id');",
                            "    ",
                            "    pm.execution.setNextRequest('Create payment with 3-D secure (frictionless)');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "9b4c2695-3e50-487f-a3c1-a69b1d27548b",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-9b4c2695-3e50-487f-a3c1-a69b1d27548b"
                  }
                ],
                "id": "1adfbc65-bcbb-40db-903d-afec55e7d69f",
                "description": "In case where merchant passes 3-D Secure independently, result parameters of 3-D Secure should be collected by the merchant and sent in \"Create payment\" request with additional structure three_d_secure",
                "uid": "10462328-1adfbc65-bcbb-40db-903d-afec55e7d69f"
              },
              {
                "name": "Create payment with 3-D Secure (frictionless flow)",
                "item": [
                  {
                    "name": "Create payment with 3-D secure (frictionless)",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb41ef1-729c-4586-93c0-f3f8b4c8a015",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                            "var password = pm.environment.get('S2S_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6634c58c-32e0-4e13-8b74-626f310499de",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('payment_data');",
                            "    pm.expect(response.payment_data).to.have.property('id');",
                            "  ",
                            "    postman.setNextRequest('Create payment with 3-D secure (challenge)');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "d3cd1bdc-02c5-45c1-b3de-326da17822b9",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_FRICTIONLESS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    },\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-d3cd1bdc-02c5-45c1-b3de-326da17822b9"
                  }
                ],
                "id": "6fb2e786-cd37-4df0-b986-143f4df011cc",
                "description": "If card is 3-D Secure and authentication pass through Frictionless flow then merchant gets synchronous payment response in JSON format. In  \ncase of error JSON with error result will be returned.\n\n\"return_urls.return_url\" must be replaced with Merchant's webhook url",
                "uid": "10462328-6fb2e786-cd37-4df0-b986-143f4df011cc"
              },
              {
                "name": "Create payment with 3-D Secure (challenge flow)",
                "item": [
                  {
                    "name": "Create payment with 3-D secure (challenge)",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa87f03-1d4f-4b6b-98b5-8645ec343290",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                            "var password = pm.environment.get('S2S_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f103fef2-595e-4145-b652-c9add7d1f502",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('CReq');",
                            "    pm.expect(response).to.have.property('id');",
                            "    pm.collectionVariables.set('creq', response.CReq);",
                            "    pm.collectionVariables.set('payment_id_to_complete_3ds', response.id);",
                            "    postman.setNextRequest('Send CReq to ACS');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "d4e4d9df-04c7-4a8f-a7f9-16b0d0536672",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    },\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-d4e4d9df-04c7-4a8f-a7f9-16b0d0536672"
                  },
                  {
                    "name": "Send CReq to ACS",
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f3d9c6-11dc-41da-9e36-9e8afcdacd34",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    })",
                            "    postman.setNextRequest('Complete payment with CRes');"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "933fa4cd-6bfe-4cae-94d4-c2f8d526fb8c",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "method": "POST",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/sandbox-emulator/3ds2/browserCReqS2S?creq={{creq}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "sandbox-emulator",
                          "3ds2",
                          "browserCReqS2S"
                        ],
                        "query": [
                          {
                            "key": "creq",
                            "value": "{{creq}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-933fa4cd-6bfe-4cae-94d4-c2f8d526fb8c"
                  },
                  {
                    "name": "Complete payment with CRes",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c319631-48ce-42d5-a6cf-eb1cee2f0ed1",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                            "var password = pm.environment.get('S2S_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cd3c7c-2cef-446e-877d-65af8ceebdfc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();   ",
                            "    pm.expect(response).to.have.property('payment_data');",
                            "    pm.expect(response.payment_data).to.have.property('id'); ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "dbde63bd-3be6-40c1-8aa0-a3f250628525",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"CONFIRM_3DS\",\n    \"CRes\": \"eyJtZXNzYWdlVHlwZSI6IkNSZXEiLCJtZXNzYWdlVmVyc2lvbiI6IjIuMS4wIiwidGhyZWVEU1NlcnZlclRyYW5zSUQiOiJiM2UzZDY4Mi0zNWNkLTRjYjQtOTVmOS01Yjg2ZmVlYzg5YjciLCJhY3NUcmFuc0lEIjoiWTFMU1NhVVVoQzROWUVKMXBhM2h2aFRWeTZ1YlE4MXU1MDBQIiwiY2hhbGxlbmdlV2luZG93U2l6ZSI6IjA1In0=\"\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete_3ds}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments",
                          "{{payment_id_to_complete_3ds}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-dbde63bd-3be6-40c1-8aa0-a3f250628525"
                  }
                ],
                "id": "c3b9a60f-494f-4520-8e81-17f404b27f79",
                "description": "If card is 3-D Secure and authentication pass Challenge flow then merchant gets redirect_url, CReq and Id parameters in JSON  \nformat. In case of error JSON with error result will be returned.\n\n\"return_urls.return_url\" must be replaced with Merchant's webhook url",
                "uid": "10462328-c3b9a60f-494f-4520-8e81-17f404b27f79"
              }
            ],
            "id": "801d1423-ff47-4d57-938e-f0193ee00729",
            "description": "In Server-to-Server Mode the Customer interacts only with the Merchant's website and all interactions between Merchant and Unlimint are server-to-server. In this case the Merchant has to collect cardholder data on his website that must be PCI DSS certified for that and then send it as a POST request to the Unlimint Endpoint. In response to Merchant's request, Unlimint server sends URL the Customer should be redirected to if 3-D Secure is required or Result JSON response if 3-D Secure is not required.",
            "uid": "10462328-801d1423-ff47-4d57-938e-f0193ee00729"
          },
          {
            "name": "Create payments (by tokens)",
            "item": [
              {
                "name": "Create payment (ApplePay, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "7976d009-f8a1-46c7-a8e1-9ae0d6b98a04",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"APPLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-7976d009-f8a1-46c7-a8e1-9ae0d6b98a04"
              },
              {
                "name": "Create payment (ApplePay, s2s)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI_NO3DS');",
                        "var password = pm.environment.get('S2S_PASSWORD_EXMPI_NO3DS');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "2fdb1c4a-3561-428a-bd2a-d86948d411d7",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"APPLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-2fdb1c4a-3561-428a-bd2a-d86948d411d7"
              },
              {
                "name": "Create payment (GooglePay, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "7e5a15f2-dcdc-4fb9-8035-d82fda133f88",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"GOOGLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-7e5a15f2-dcdc-4fb9-8035-d82fda133f88"
              },
              {
                "name": "Create payment (GooglePay, s2s)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI_NO3DS');",
                        "var password = pm.environment.get('S2S_PASSWORD_EXMPI_NO3DS');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "82224134-8568-44f8-8561-717fe5f7da61",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"GOOGLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-82224134-8568-44f8-8561-717fe5f7da61"
              },
              {
                "name": "Create payment (GooglePay, pan only, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "a2afc693-5e98-4fa3-ad32-0b5d22a4e5db",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"GOOGLEPAY\",\n            \"pan\": \"{{DPAN_AUTH}}\",\n            \"expiration\": \"{{expiration}}\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-a2afc693-5e98-4fa3-ad32-0b5d22a4e5db"
              },
              {
                "name": "Create payment (Network token, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "c4e15909-a55b-43b2-aafc-9e6dc553b836",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"NETWORK\",\n            \"pan\": \"{{DPAN_AUTH}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iJKIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-c4e15909-a55b-43b2-aafc-9e6dc553b836"
              }
            ],
            "id": "caccb6cc-4902-41d9-97e7-4f0f8535b5f8",
            "description": "- This section presents examples of requests with decrypted data from Google Pay, Apple Pay, and Network Tokenization\n    \n- Supported modes: Gateway and server-to-server\n    \n- 3-D Secure can be called for requests with network token and for GooglePay PAN-only case",
            "uid": "10462328-caccb6cc-4902-41d9-97e7-4f0f8535b5f8"
          }
        ],
        "id": "cb952acc-0a49-4299-b770-b07f602f5d26",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "3cef093f-6da5-4789-ad9b-7b7e7e4ce333"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "b1f50e25-b697-4f18-bcfd-9de82eef721b"
            }
          }
        ],
        "uid": "10462328-cb952acc-0a49-4299-b770-b07f602f5d26"
      },
      {
        "name": "Payments (ACT/OFT)",
        "item": [
          {
            "name": "Create Account Funding Transaction",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "",
                    "    var response = pm.response.json();",
                    "    pm.expect(response).to.have.property('redirect_url');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              }
            ],
            "id": "4ef4aebf-1af6-404e-ab57-923199dfb1a6",
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "type": "string",
                      "value": "{{access_token}}"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "type": "text"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"full_name\": \"MR SENDER\",\n        \"birth_date\": \"2000-04-22\",\n        \"living_address\": {\n            \"country\": \"USA\",\n            \"state\": \"NE\",\n            \"city\": \"Dallas\",\n            \"address\": \"Black Road 112, 3\"\n        }\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"MR SENDRER\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        },\n        \"recipient_info\": \"MR RECIPIENT\"\n    }\n}"
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "payments"
                ]
              }
            },
            "response": [],
            "uid": "10462328-4ef4aebf-1af6-404e-ab57-923199dfb1a6"
          },
          {
            "name": "Create Original Credit Transaction",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e121e80-1189-44b3-b403-a64500548ab7",
                  "exec": [
                    "var uuid = require('uuid');",
                    "",
                    "var merchant_order_id = uuid.v4();",
                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1565a53-2dd4-4176-b464-fa049952b4e7",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.have.status(201);",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    pm.expect(response.payout_data).to.have.property('id');",
                    "    ",
                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                    "    ",
                    "    ",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              }
            ],
            "id": "76981098-0d0f-4552-a566-14954e1f5e96",
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "type": "string",
                      "value": "{{access_token}}"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "type": "text"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payout_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"funding_source\": \"02\",\n        \"network_trans_id\": \"305086217313972\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"expiration\": \"{{expiration}}\"\n        },\n        \"recipient_info\": \"MR RECIPIENT\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"full_name\": \"MR SENDER\",\n        \"birth_date\": \"2000-04-22\",\n        \"living_address\": {\n            \"country\": \"USA\",\n            \"state\": \"NE\",\n            \"city\": \"Dallas\",\n            \"address\": \"Black Road 112, 3\"\n        }\n    }\n}"
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "payouts"
                ]
              }
            },
            "response": [],
            "uid": "10462328-76981098-0d0f-4552-a566-14954e1f5e96"
          }
        ],
        "id": "07fe4960-a107-4a6a-bc59-60633314ee84",
        "description": "**AFTs (Account Funding Transactions)** are special types of card operations supported by Visa Direct and MasterСard MoneySend, where funds are pulled from a card without a traditional purchase being involved.\n\nThis is used when a Customer wants to move money from their card into another account, e.g. funding a digital wallet (PayPal), transferring funds to an investment or crypto account.\n\n**OCTs (Original Credit Transactions)** are special types of card operations supported by Visa Direct and MasterСard MoneySend, where funds are _pushed_ to a card.\n\nThis is used for disbursing funds to a customer’s card in real-time or near real-time, for example:\n\n- Salary or freelancer payouts\n    \n- Cashback, insurance, or loans\n    \n- Peer-to-peer (P2P) money transfers",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0898f20-6f8b-42b1-b7be-0074a80c8658",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ac73dde-83d3-481a-bf81-91414772b1b7",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ]
            }
          }
        ],
        "uid": "10462328-07fe4960-a107-4a6a-bc59-60633314ee84"
      },
      {
        "name": "Payments (APMs)",
        "item": [
          {
            "name": "Worldwide",
            "item": [
              {
                "name": "PayPal",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PayPal payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "38e7cb9f-e145-4963-92cf-8751b2bb1d96"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "78d3998d-da44-4ed2-a7b4-68b859f59bd2"
                            }
                          }
                        ],
                        "id": "f5f94a73-e045-4d5a-b349-c34f3b8cb679",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAYPAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-f5f94a73-e045-4d5a-b349-c34f3b8cb679"
                      }
                    ],
                    "id": "d2f7cd18-0349-4961-b5f6-78cde0e4a2a3",
                    "uid": "10462328-d2f7cd18-0349-4961-b5f6-78cde0e4a2a3"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PayPal payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9ad12fea-65b7-43ea-8151-364f71448ee9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2709ceff-d1ee-43fe-95f4-b3362cdd619e"
                            }
                          }
                        ],
                        "id": "74e18d34-6864-4b10-af91-6ec20a20df37",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAYPAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-74e18d34-6864-4b10-af91-6ec20a20df37"
                      }
                    ],
                    "id": "80bdeb17-2dd6-439e-95f6-567616e37cab",
                    "uid": "10462328-80bdeb17-2dd6-439e-95f6-567616e37cab"
                  }
                ],
                "id": "914e0c03-7545-402c-a36a-56ae112d9513",
                "uid": "10462328-914e0c03-7545-402c-a36a-56ae112d9513"
              },
              {
                "name": "ALIPAYPLUS",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create ALIPAYPLUS payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c4f4bba1-6ddb-4640-8ad5-8353a3c226ca"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8cf482a9-9811-4bf0-abe7-0c8e043e1fe7"
                            }
                          }
                        ],
                        "id": "43ea0eba-4dd9-4fd1-b2d2-47054557555a",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALIPAYPLUS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-43ea0eba-4dd9-4fd1-b2d2-47054557555a"
                      }
                    ],
                    "id": "b71b51f0-ac88-4f06-9c88-1856b2061011",
                    "uid": "10462328-b71b51f0-ac88-4f06-9c88-1856b2061011"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create ALIPAYPLUS payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2d7836a6-9179-48ed-9d11-d937f077abab"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "28789d83-2aea-4995-b1b8-e8cb5a7ad3ef"
                            }
                          }
                        ],
                        "id": "467fb8f9-7c06-4f27-ba56-43dface631cd",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALIPAYPLUS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-467fb8f9-7c06-4f27-ba56-43dface631cd"
                      }
                    ],
                    "id": "34739926-1ae1-4e07-8d7c-dc839a55ede3",
                    "uid": "10462328-34739926-1ae1-4e07-8d7c-dc839a55ede3"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create ALIPAYPLUS payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "690a12be-ea6f-456e-8d16-d164b65c48fa"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "96425eef-4c1b-4795-8952-47948398f47b"
                            }
                          }
                        ],
                        "id": "fcea1a2a-7fce-472b-81d1-53cbc0e05568",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALIPAYPLUS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-fcea1a2a-7fce-472b-81d1-53cbc0e05568"
                      }
                    ],
                    "id": "1dad80a2-57ce-4b5e-9d39-586461cac3a3",
                    "uid": "10462328-1dad80a2-57ce-4b5e-9d39-586461cac3a3"
                  }
                ],
                "id": "06ebca00-885b-4e62-b321-04231b800aa1",
                "uid": "10462328-06ebca00-885b-4e62-b321-04231b800aa1"
              }
            ],
            "id": "0a121f59-009c-42e6-be73-e59ed6f5f507",
            "uid": "10462328-0a121f59-009c-42e6-be73-e59ed6f5f507"
          },
          {
            "name": "Africa",
            "item": [
              {
                "name": "Direct Banking Nigeria",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create DIRECTBANKINGNGA payment (gateway)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e4bd2955-d1e3-41ed-a188-976c0a528be1"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "26db2966-c905-4174-8967-c8d82e90cc66"
                            }
                          }
                        ],
                        "id": "7adb9f45-9dde-461b-a115-9f5395cd061e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGNGA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"bank_code\": \"057\",\n        \"id\": \"1111111111\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"1234567891\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"birth_date\": \"2010-10-10\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-7adb9f45-9dde-461b-a115-9f5395cd061e"
                      }
                    ],
                    "id": "45b23094-01de-491d-8dee-4aebd7bb5183",
                    "uid": "10462328-45b23094-01de-491d-8dee-4aebd7bb5183"
                  },
                  {
                    "name": "Payment Page mode",
                    "item": [
                      {
                        "name": "Create DIRECTBANKINGNGA payment (payment page mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c933c602-8e30-44d3-804a-6ee48df890d2"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e6d573fc-dc19-421e-b714-fd57a417e7c8"
                            }
                          }
                        ],
                        "id": "8f2fb409-a451-4166-b3b1-1cbec0df02f7",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGNGA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1780004070\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"1234567891\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8f2fb409-a451-4166-b3b1-1cbec0df02f7"
                      }
                    ],
                    "id": "86f08ecc-c69d-41c9-88d7-351bb9f1d06d",
                    "uid": "10462328-86f08ecc-c69d-41c9-88d7-351bb9f1d06d"
                  }
                ],
                "id": "5860d9b5-f552-490b-8b8d-32ff0c42d470",
                "uid": "10462328-5860d9b5-f552-490b-8b8d-32ff0c42d470"
              },
              {
                "name": "M-Pesa",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create MPESA payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c9fd3fe9-c230-43b7-b928-f9f0df2072a2"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6df9c8ce-90e0-4972-9145-2c660b4c12d5"
                            }
                          }
                        ],
                        "id": "f07bf47b-b0c4-47aa-a1ac-8afaf1c8d38e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-f07bf47b-b0c4-47aa-a1ac-8afaf1c8d38e"
                      }
                    ],
                    "id": "06986876-4213-4089-93a0-0676ee3191a6",
                    "uid": "10462328-06986876-4213-4089-93a0-0676ee3191a6"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create MPESA payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "48a544b6-382d-4fc9-bf9c-873b467bb306"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "db376f8a-5d12-40c3-8c70-b2442d3c205a"
                            }
                          }
                        ],
                        "id": "fe275aec-3dc2-42b8-8db3-3105207ec6dd",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-fe275aec-3dc2-42b8-8db3-3105207ec6dd"
                      }
                    ],
                    "id": "5fb24425-20c5-4c03-a4a4-dc00d9a13e8b",
                    "uid": "10462328-5fb24425-20c5-4c03-a4a4-dc00d9a13e8b"
                  }
                ],
                "id": "fba19661-6b19-44f2-b831-646d3cdf709a",
                "uid": "10462328-fba19661-6b19-44f2-b831-646d3cdf709a"
              },
              {
                "name": "M-Pesa Tanzania",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create M-Pesa Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "97da4ab0-8234-476c-8209-7926c6e39c11"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9340d876-2daf-4b5f-91d5-ebc4c0fffa58"
                            }
                          }
                        ],
                        "id": "0cc29fea-71ab-4c8b-9b60-47dff35bb0d0",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MPESATZS\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"+255740123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{$randomEmail}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-0cc29fea-71ab-4c8b-9b60-47dff35bb0d0"
                      }
                    ],
                    "id": "f02de281-e1d8-4b6a-9aeb-26ed7e99e1e5",
                    "uid": "10462328-f02de281-e1d8-4b6a-9aeb-26ed7e99e1e5"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create M-Pesa Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "441b5254-bac7-4183-b60b-0208ff983988"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "47e211c7-a73d-4d6f-abf1-7199659965ac"
                            }
                          }
                        ],
                        "id": "55705755-4076-47a7-b622-a839761b8d6c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MPESATZS\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"TZS\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-55705755-4076-47a7-b622-a839761b8d6c"
                      }
                    ],
                    "id": "7ddf95e8-405c-45ca-9f3a-e4ca7647df30",
                    "uid": "10462328-7ddf95e8-405c-45ca-9f3a-e4ca7647df30"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create M-Pesa Tanzania payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1f44ef2c-d292-4fde-b40f-4c77bab4c3d3"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ad87e243-c177-42f9-86c8-fe1588b50e9a"
                            }
                          }
                        ],
                        "id": "599942ea-831b-4887-867b-488d0fdc7b96",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman\"\n    },\n    \"payment_method\": \"MPESATZS\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"+255740123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{$randomEmail}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-599942ea-831b-4887-867b-488d0fdc7b96"
                      }
                    ],
                    "id": "b5ac8cbb-6787-403f-a69a-3e57924490fc",
                    "uid": "10462328-b5ac8cbb-6787-403f-a69a-3e57924490fc"
                  }
                ],
                "id": "1da4a81b-d18c-4652-968b-6ce2969e479a",
                "uid": "10462328-1da4a81b-d18c-4652-968b-6ce2969e479a"
              },
              {
                "name": "Payattitude",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Payattitude payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "46731953-a04b-4f52-aac8-ff5d48c3c21f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "666bce79-4fc6-4e36-b09b-4965a4ed52f1"
                            }
                          }
                        ],
                        "id": "da2ada0a-bd85-4c14-89e2-ef8bcd5443cc",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payattitude\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"2341234567890\"\n    },\n    \"customer\": {\n            \"full_name\": \"{{$randomFullName}}\",\n            \"email\": \"{{CUSTOMER_EMAIL}}\"\n        }\n    }",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-da2ada0a-bd85-4c14-89e2-ef8bcd5443cc"
                      }
                    ],
                    "id": "d00d547e-5301-4f19-9504-92869182ab2b",
                    "uid": "10462328-d00d547e-5301-4f19-9504-92869182ab2b"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Payattitude payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3cf29c89-1070-40c4-bab7-2dee7e93b080"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2b9caf6d-cca6-4d6a-91be-07da61a20d37"
                            }
                          }
                        ],
                        "id": "977f49c6-cf34-4170-9c2d-8ed0e410e0c4",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payattitude\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"2341234567890\"\n    },\n    \"customer\": {\n            \"full_name\": \"{{$randomFullName}}\",\n            \"email\": \"{{CUSTOMER_EMAIL}}\"\n        }\n    }",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-977f49c6-cf34-4170-9c2d-8ed0e410e0c4"
                      }
                    ],
                    "id": "24a3df2b-4469-4e4b-a1d1-fa1a3727a40a",
                    "uid": "10462328-24a3df2b-4469-4e4b-a1d1-fa1a3727a40a"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Payattitude payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "69a3ea42-ebde-4efa-89aa-3d7d40cead31"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4bdaadd7-c4b8-4974-8824-65536b686ae2"
                            }
                          }
                        ],
                        "id": "66e5e73e-08c2-4d97-9253-fb19cfabcbe7",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payattitude\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"2341234567890\"\n    },\n    \"customer\": {\n            \"full_name\": \"{{$randomFullName}}\",\n            \"email\": \"{{CUSTOMER_EMAIL}}\"\n        }\n    }",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-66e5e73e-08c2-4d97-9253-fb19cfabcbe7"
                      }
                    ],
                    "id": "b252b49a-fba0-4791-8f4e-e41de26bf7d7",
                    "uid": "10462328-b252b49a-fba0-4791-8f4e-e41de26bf7d7"
                  }
                ],
                "id": "e035e85b-2573-43fe-a787-ee671b1d4629",
                "uid": "10462328-e035e85b-2573-43fe-a787-ee671b1d4629"
              },
              {
                "name": "Pesalink",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create pesalink payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8e61d7fc-e4e7-4814-9863-9b6f2ae4d67d"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "afa3870a-d02d-4069-ba3d-6da72a3aadc2"
                            }
                          }
                        ],
                        "id": "68c9a295-999e-40b9-896f-8821127c1d3d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"pesalink\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-68c9a295-999e-40b9-896f-8821127c1d3d"
                      }
                    ],
                    "id": "688b7da7-184c-4900-bf68-2fedfd695359",
                    "uid": "10462328-688b7da7-184c-4900-bf68-2fedfd695359"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create pesalink payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ed2c4f3d-c675-40f5-a833-4d934c8ef3de"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "93a68969-06bb-4e81-802e-1d87e891bed6"
                            }
                          }
                        ],
                        "id": "fda27d6e-bcd2-48fc-9902-a93dc07c5ca8",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"pesalink\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-fda27d6e-bcd2-48fc-9902-a93dc07c5ca8"
                      }
                    ],
                    "id": "69b47e00-77fa-41e3-b8e5-5a6229ab637c",
                    "uid": "10462328-69b47e00-77fa-41e3-b8e5-5a6229ab637c"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create pesalink payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "996199d1-c2af-4456-9690-31886f2661eb"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "24ae0344-3a3f-4ae6-b58a-b4c1e71483f6"
                            }
                          }
                        ],
                        "id": "40127301-c929-4f6d-b9b8-ae10729bbcdc",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"pesalink\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-40127301-c929-4f6d-b9b8-ae10729bbcdc"
                      }
                    ],
                    "id": "5f370902-5364-47ee-a5ec-8e988ac23766",
                    "uid": "10462328-5f370902-5364-47ee-a5ec-8e988ac23766"
                  }
                ],
                "id": "d5c8d081-fa12-4ede-8bde-acd80bd6775c",
                "uid": "10462328-d5c8d081-fa12-4ede-8bde-acd80bd6775c"
              },
              {
                "name": "NGN Virtual Account",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create NGNVA payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "13915eda-5d74-4044-9243-b75e4ba9b278"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "64a77635-afa1-4c29-934a-ca1ce5509475"
                            }
                          }
                        ],
                        "id": "06ac6a4d-58f4-4cd0-a7a5-5194c6dc4e18",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"NGNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-06ac6a4d-58f4-4cd0-a7a5-5194c6dc4e18"
                      }
                    ],
                    "id": "40cbe283-87b6-4261-b755-4dbde9d5da10",
                    "uid": "10462328-40cbe283-87b6-4261-b755-4dbde9d5da10"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create NGNVA payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8affd657-3374-41a0-85fb-2a1ff5a35332"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "685f948e-5947-4cf4-80d1-62c49a05eb25"
                            }
                          }
                        ],
                        "id": "98540c48-ed6e-42aa-9957-480bd09b5d63",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"NGNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-98540c48-ed6e-42aa-9957-480bd09b5d63"
                      }
                    ],
                    "id": "9e2fc7ef-c58c-4b6f-b37b-6a70832fa1a3",
                    "uid": "10462328-9e2fc7ef-c58c-4b6f-b37b-6a70832fa1a3"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create NGNVA payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fe3adeae-f112-4bef-ba8b-9618686ed10d"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "938f4d31-069b-414c-88c4-744079227a43"
                            }
                          }
                        ],
                        "id": "62b4737a-23f4-45c4-a04a-48f4217582da",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"NGNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-62b4737a-23f4-45c4-a04a-48f4217582da"
                      }
                    ],
                    "id": "0c51b233-5561-4b3b-a4cf-c2a30b09b608",
                    "uid": "10462328-0c51b233-5561-4b3b-a4cf-c2a30b09b608"
                  }
                ],
                "id": "104c08cd-7ad7-47ed-bdc5-250b0970ae14",
                "uid": "10462328-104c08cd-7ad7-47ed-bdc5-250b0970ae14"
              },
              {
                "name": "Tigopesa Tanzania",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Tigopesa Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a287e80d-73ea-46e4-b6c4-094d82851841"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1c317bef-caf0-4045-ac92-eb5728bd59e2"
                            }
                          }
                        ],
                        "id": "ba99c360-0d19-4cef-90ea-605616563c0a",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"TIGOPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ba99c360-0d19-4cef-90ea-605616563c0a"
                      }
                    ],
                    "id": "313af70c-87a6-499c-839f-b4bbc90ccad8",
                    "uid": "10462328-313af70c-87a6-499c-839f-b4bbc90ccad8"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Tigopesa Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "efb21278-dff2-4521-8fac-ab1c37344f1b"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "299f7a50-fc6d-471c-bd5e-8ef74b800920"
                            }
                          }
                        ],
                        "id": "9f87a137-98ea-432c-9574-afc9c8450da4",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"TIGOPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-9f87a137-98ea-432c-9574-afc9c8450da4"
                      }
                    ],
                    "id": "f2af829b-177a-44f9-b82f-6d1624667c6b",
                    "uid": "10462328-f2af829b-177a-44f9-b82f-6d1624667c6b"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Tigopesa Tanzania payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b8bca59c-2df9-4043-af7b-2a866d541b38"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "096ea696-cd6d-4489-b44a-fc44b2f70851"
                            }
                          }
                        ],
                        "id": "fc670103-67c2-47b0-9715-934094a6252f",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"TIGOPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-fc670103-67c2-47b0-9715-934094a6252f"
                      }
                    ],
                    "id": "81464c5c-e01a-468f-8939-bc4f347498b2",
                    "uid": "10462328-81464c5c-e01a-468f-8939-bc4f347498b2"
                  }
                ],
                "id": "b7a5a5f7-547d-476a-9ca2-88778b53ea2b",
                "uid": "10462328-b7a5a5f7-547d-476a-9ca2-88778b53ea2b"
              },
              {
                "name": "Airtel",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Airtel payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "00369d65-ce2f-4899-8848-8cbb80b8b004"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "0f40b71c-cbab-4ba1-ab66-24df2ce7dec7"
                            }
                          }
                        ],
                        "id": "60158b9d-5a37-4ea4-b6a5-24a88a4e7935",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTEL\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254100123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-60158b9d-5a37-4ea4-b6a5-24a88a4e7935"
                      }
                    ],
                    "id": "7aa7f1d1-13eb-4c06-9476-aaee43c7a0e8",
                    "uid": "10462328-7aa7f1d1-13eb-4c06-9476-aaee43c7a0e8"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Airtel payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ea1bdc42-f6df-4212-8803-816b1a8f0ea3"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "833f8688-c960-43b5-9edb-170030516873"
                            }
                          }
                        ],
                        "id": "ccaf15e6-6750-48d5-b1f7-e7aeff99d27b",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTEL\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254100123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ccaf15e6-6750-48d5-b1f7-e7aeff99d27b"
                      }
                    ],
                    "id": "6e3acfe0-0451-4188-949e-d035c32261b4",
                    "uid": "10462328-6e3acfe0-0451-4188-949e-d035c32261b4"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Airtel payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4972501a-75bf-4ed4-b388-7cd26470a582"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ac850216-76e7-44b2-b9ad-617f340dd579"
                            }
                          }
                        ],
                        "id": "c67621b1-1e5b-40dc-acc6-79790eb18bed",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTEL\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254100123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c67621b1-1e5b-40dc-acc6-79790eb18bed"
                      }
                    ],
                    "id": "5d458128-0935-4749-bd74-e82b688c49b6",
                    "uid": "10462328-5d458128-0935-4749-bd74-e82b688c49b6"
                  }
                ],
                "id": "046d2b1e-e1e3-4c9f-8034-930348ba4015",
                "uid": "10462328-046d2b1e-e1e3-4c9f-8034-930348ba4015"
              },
              {
                "name": "Airtel Tanzania",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Airtel Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "efd7b973-7d9d-4da5-8d86-f023ca6bf669"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2b2513bb-93c1-40fa-a015-b61a20cff543"
                            }
                          }
                        ],
                        "id": "70b0c3cc-cabc-4924-b1e1-f7c68a2b81ae",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTELTZS\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255780123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-70b0c3cc-cabc-4924-b1e1-f7c68a2b81ae"
                      }
                    ],
                    "id": "7aa59aeb-04f5-4511-88f7-40d68fbb41e0",
                    "uid": "10462328-7aa59aeb-04f5-4511-88f7-40d68fbb41e0"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Airtel Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "33eb15b6-22cc-45fb-a419-ac01b605b85e"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7d59aef4-6149-494e-b737-096ba6ab889d"
                            }
                          }
                        ],
                        "id": "1b7dd9b7-65d3-4d3e-b437-9a5ed8d6b30e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTELTZS\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255780123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-1b7dd9b7-65d3-4d3e-b437-9a5ed8d6b30e"
                      }
                    ],
                    "id": "9e0ca606-bf1c-4b5d-b39a-b15ad90cba78",
                    "uid": "10462328-9e0ca606-bf1c-4b5d-b39a-b15ad90cba78"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Airtel Tanzania payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "04b2f7b7-09d8-49ce-9900-b8228128ba2d"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "034571f0-b28b-4f55-9695-bbb8c950f68e"
                            }
                          }
                        ],
                        "id": "c6b963c5-5e04-43c1-bc41-6d333ed61906",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTELTZS\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255780123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c6b963c5-5e04-43c1-bc41-6d333ed61906"
                      }
                    ],
                    "id": "623f00d2-cb4e-45ec-87de-31d5e6d7646f",
                    "uid": "10462328-623f00d2-cb4e-45ec-87de-31d5e6d7646f"
                  }
                ],
                "id": "24d06ba6-71a9-4713-bfa9-6fce73de977d",
                "uid": "10462328-24d06ba6-71a9-4713-bfa9-6fce73de977d"
              }
            ],
            "id": "2f74c82f-3d30-4f23-9845-20a9a2ff44ad",
            "uid": "10462328-2f74c82f-3d30-4f23-9845-20a9a2ff44ad"
          },
          {
            "name": "Europe",
            "item": [
              {
                "name": "iDEAL",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create IDEAL payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "978ee210-4e70-409f-8fcc-5be06ff20a31"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ec440865-677c-44cf-8a64-e1c037f6e2b7"
                            }
                          }
                        ],
                        "id": "ed164679-52b4-456f-a978-c7cd22e1d245",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"IDEAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ed164679-52b4-456f-a978-c7cd22e1d245"
                      }
                    ],
                    "id": "921b10a5-9b2d-46f6-8b91-5d63ab571ee6",
                    "uid": "10462328-921b10a5-9b2d-46f6-8b91-5d63ab571ee6"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create IDEAL payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "cbb8c5d4-7045-4638-8958-5b44a016c26b"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c9a21b44-94e3-4b5b-b62a-01badf7f8de2"
                            }
                          }
                        ],
                        "id": "f5e2027c-84fa-45ee-af59-6daf7e52a1f4",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"IDEAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-f5e2027c-84fa-45ee-af59-6daf7e52a1f4"
                      }
                    ],
                    "id": "916c3342-bfd0-4623-8a0a-497b7396cec7",
                    "uid": "10462328-916c3342-bfd0-4623-8a0a-497b7396cec7"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create IDEAL payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "af6031b5-6ad3-4f1f-a1e1-9a2ecce2c748"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ea8a48a6-0142-4bfd-868e-447e02b9787c"
                            }
                          }
                        ],
                        "id": "d7ae7095-a26f-45cd-b6c8-7739a0e918fb",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"IDEAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d7ae7095-a26f-45cd-b6c8-7739a0e918fb"
                      }
                    ],
                    "id": "55703f4f-f29c-4137-befa-08129185a2e0",
                    "uid": "10462328-55703f4f-f29c-4137-befa-08129185a2e0"
                  }
                ],
                "id": "0ed0a254-af03-4563-b0c3-ba7e77d4bcbf",
                "uid": "10462328-0ed0a254-af03-4563-b0c3-ba7e77d4bcbf"
              },
              {
                "name": "WeChat",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create WECHAT payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "95c3db2a-ffcb-44f5-b7e0-e822416c7727"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b402f79f-ef92-4a3b-a8b6-567b22e54dd5"
                            }
                          }
                        ],
                        "id": "615a5a0d-dd46-4020-a06d-d5bb8c1d1093",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"WECHAT\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-615a5a0d-dd46-4020-a06d-d5bb8c1d1093"
                      }
                    ],
                    "id": "b489decc-d78b-4eb2-9e04-504af275a0e9",
                    "uid": "10462328-b489decc-d78b-4eb2-9e04-504af275a0e9"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create WECHAT payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d092b8a3-7c34-4730-a42a-c58549158b14"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "527164fb-4743-4994-b884-d0c5da732cac"
                            }
                          }
                        ],
                        "id": "66cf3c04-80d6-480d-bbba-1783c14fcb22",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"WECHAT\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-66cf3c04-80d6-480d-bbba-1783c14fcb22"
                      }
                    ],
                    "id": "f9be6b5c-5d87-45a7-b7fb-e366d8bc1697",
                    "uid": "10462328-f9be6b5c-5d87-45a7-b7fb-e366d8bc1697"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create WECHAT payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "452a1f6e-2d2e-44b2-a192-832174b238e9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fb8e39bd-e7ec-49e4-b865-8389975fa626"
                            }
                          }
                        ],
                        "id": "407753a5-ef91-41cd-89e6-eebbe6005d6d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"WECHAT\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-407753a5-ef91-41cd-89e6-eebbe6005d6d"
                      }
                    ],
                    "id": "b4d34f99-9829-415d-8c82-60bb3f93bc19",
                    "uid": "10462328-b4d34f99-9829-415d-8c82-60bb3f93bc19"
                  }
                ],
                "id": "ab82e253-30ad-4b39-93a6-8d4f09e34384",
                "uid": "10462328-ab82e253-30ad-4b39-93a6-8d4f09e34384"
              },
              {
                "name": "Multibanco",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create MULTIBANCO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "be8a29eb-bdeb-46a7-9163-246b608d6cd8"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "68ff2abd-c727-4380-96f5-b917e3641456"
                            }
                          }
                        ],
                        "id": "37c51d72-bb27-4dcf-bbb0-477b9422c4c5",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MULTIBANCO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-37c51d72-bb27-4dcf-bbb0-477b9422c4c5"
                      }
                    ],
                    "id": "7944d28c-5b0b-41c5-ad1c-52f782d81aa4",
                    "uid": "10462328-7944d28c-5b0b-41c5-ad1c-52f782d81aa4"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create MULTIBANCO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "050d90ee-eeb2-4ad8-b4c8-904a4a441c3e"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "cbde8c37-209c-4227-b090-00784f022080"
                            }
                          }
                        ],
                        "id": "ae01c66a-c3fd-4526-9142-071b43549025",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MULTIBANCO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ae01c66a-c3fd-4526-9142-071b43549025"
                      }
                    ],
                    "id": "3023e88d-521b-4317-a350-2542b8d1118a",
                    "uid": "10462328-3023e88d-521b-4317-a350-2542b8d1118a"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create MULTIBANCO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4fd9dae7-b005-45cc-bed8-735dd82c6420"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "84cb6039-f184-441e-8870-8fadafb9b24e"
                            }
                          }
                        ],
                        "id": "3e658526-37ab-4230-be52-d410b52814c7",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MULTIBANCO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-3e658526-37ab-4230-be52-d410b52814c7"
                      }
                    ],
                    "id": "6d5c1365-7dc2-418a-85de-1fd11a2a69f2",
                    "uid": "10462328-6d5c1365-7dc2-418a-85de-1fd11a2a69f2"
                  }
                ],
                "id": "457265e0-f6b4-4140-97fd-ac16f24c6720",
                "uid": "10462328-457265e0-f6b4-4140-97fd-ac16f24c6720"
              },
              {
                "name": "MBWAY",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create MBWAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fe074a0f-b870-4f2d-b8ae-0bd43817720c"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "102d4534-dd0d-4147-867d-d2dc1eb38451"
                            }
                          }
                        ],
                        "id": "8f7bf602-b15d-4b19-8de9-c56e17f3160d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MBWAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"351123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8f7bf602-b15d-4b19-8de9-c56e17f3160d"
                      }
                    ],
                    "id": "8740c133-b1e4-4059-921c-a906a0c83eba",
                    "uid": "10462328-8740c133-b1e4-4059-921c-a906a0c83eba"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create MBWAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "0191854d-d0ef-417f-9369-930ae9004500"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e83105b7-db5e-4dce-9a9b-91d8272db8cf"
                            }
                          }
                        ],
                        "id": "4960fae2-e42d-40c4-8207-b5b89e27a732",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MBWAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"351123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-4960fae2-e42d-40c4-8207-b5b89e27a732"
                      }
                    ],
                    "id": "ecabe9f3-0c6c-4942-adef-03a5984b39f0",
                    "uid": "10462328-ecabe9f3-0c6c-4942-adef-03a5984b39f0"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create MBWAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "75ae83ec-4038-4f23-8bcf-0a8564804546"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "80299e68-b008-4f29-bff3-78d631970d56"
                            }
                          }
                        ],
                        "id": "417fdbb0-b426-4cd3-abbe-0cd8676da399",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MBWAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"351123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-417fdbb0-b426-4cd3-abbe-0cd8676da399"
                      }
                    ],
                    "id": "acb31aac-a4a5-4711-8d50-632def1daecd",
                    "uid": "10462328-acb31aac-a4a5-4711-8d50-632def1daecd"
                  }
                ],
                "id": "275037ee-6642-4a34-acad-a72644b00840",
                "uid": "10462328-275037ee-6642-4a34-acad-a72644b00840"
              },
              {
                "name": "OPENBANKING",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create OPENBANKING payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "0667bf8c-6e8f-4b87-a5f6-890eb772e1e7"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "29b59610-ad11-4740-b749-0e55421e21f9"
                            }
                          }
                        ],
                        "id": "c3c73bcc-5642-41d1-aaa8-7ccd972f0929",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order\"\n    },\n    \"payment_method\": \"OPENBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n       \"bank_code\":  \"ksk_euskirchen_oauth_client_de\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c3c73bcc-5642-41d1-aaa8-7ccd972f0929"
                      }
                    ],
                    "id": "c0c8fa6f-27c2-43f7-8787-3747a8a09a92",
                    "uid": "10462328-c0c8fa6f-27c2-43f7-8787-3747a8a09a92"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create OPENBANKING payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ff1feb59-69b8-4dd6-8ba5-26639eb7c4ab"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c4909202-06ae-49c5-aa17-0be1b0a02a29"
                            }
                          }
                        ],
                        "id": "ee62d293-dacd-4ab6-9793-bd3e5c64d28c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order\"\n    },\n    \"payment_method\": \"OPENBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ee62d293-dacd-4ab6-9793-bd3e5c64d28c"
                      }
                    ],
                    "id": "57ae4a41-6c08-4b17-a046-10333c8366a5",
                    "uid": "10462328-57ae4a41-6c08-4b17-a046-10333c8366a5"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create OPENBANKING payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a65cba70-0c74-4791-a018-a47897bcc325"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "0063cfeb-c267-420b-a170-8982d5acadc3"
                            }
                          }
                        ],
                        "id": "568d7976-288a-422f-ae95-4f1a2299fdfe",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order\"\n    },\n    \"payment_method\": \"OPENBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n       \"bank_code\":  \"spk_schweinfurt_hassberge_oauth_client_de\",\n       \"id\":\"CY000000000000000000000000771\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-568d7976-288a-422f-ae95-4f1a2299fdfe"
                      }
                    ],
                    "id": "1daad908-9d50-4166-88be-abbcd95dc235",
                    "uid": "10462328-1daad908-9d50-4166-88be-abbcd95dc235"
                  }
                ],
                "id": "ff60f5d6-1e8b-44d0-a2c8-ab50bba41b15",
                "uid": "10462328-ff60f5d6-1e8b-44d0-a2c8-ab50bba41b15"
              },
              {
                "name": "BLIK",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create BLIK payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e2f66b32-c9c0-445c-8ce4-5bc160ccca92"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4d038752-0328-47ca-b8d7-816784681412"
                            }
                          }
                        ],
                        "id": "bb25fcfb-b53a-4e1c-acfa-c217ca9ef95f",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BLIK\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"PLN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-bb25fcfb-b53a-4e1c-acfa-c217ca9ef95f"
                      }
                    ],
                    "id": "988ee716-b513-4f6c-b3b4-d28ba64dc965",
                    "uid": "10462328-988ee716-b513-4f6c-b3b4-d28ba64dc965"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create BLIK payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ad947140-cfea-4ddc-9d5e-ce678e88c9ed"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "be1a6a64-d9da-498f-923e-0a13049e2286"
                            }
                          }
                        ],
                        "id": "ef16e147-0145-4ffb-948d-8d6d6aa44de6",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BLIK\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"PLN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ef16e147-0145-4ffb-948d-8d6d6aa44de6"
                      }
                    ],
                    "id": "982e841e-f6f4-467b-b595-a85fc7b2614f",
                    "uid": "10462328-982e841e-f6f4-467b-b595-a85fc7b2614f"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create BLIK payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d21645db-1fa9-4198-a2b5-25c57f25d82b"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "487a76ed-d2a5-458a-8171-3146f852faf2"
                            }
                          }
                        ],
                        "id": "0348e6e3-898c-4695-92c6-949a4da7c220",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BLIK\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"PLN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-0348e6e3-898c-4695-92c6-949a4da7c220"
                      }
                    ],
                    "id": "9c7bb20d-f7d7-43f9-8529-3422b1bb6860",
                    "uid": "10462328-9c7bb20d-f7d7-43f9-8529-3422b1bb6860"
                  }
                ],
                "id": "90255e98-b96d-4315-9943-a80a187da3d2",
                "uid": "10462328-90255e98-b96d-4315-9943-a80a187da3d2"
              },
              {
                "name": "P24",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create P24 payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3253314a-07cb-4dbc-ab6d-311b097d73e2"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "32b0961b-0bae-4b96-be74-dc557191de55"
                            }
                          }
                        ],
                        "id": "0830e7cf-bc7f-4455-8873-a08c8468936c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"P24\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n        \"bank_code\": 64\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-0830e7cf-bc7f-4455-8873-a08c8468936c"
                      }
                    ],
                    "id": "e10d17ca-9fa0-401a-bda1-e29062a2b59c",
                    "uid": "10462328-e10d17ca-9fa0-401a-bda1-e29062a2b59c"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create P24 payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "78fe3ea7-68a2-40eb-b343-ef2b2e8c94f1"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2dd02432-2fb0-48ec-be3e-24aa10a5d67d"
                            }
                          }
                        ],
                        "id": "8ac24ec8-3a8d-434e-a092-e8cffa76c340",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"P24\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8ac24ec8-3a8d-434e-a092-e8cffa76c340"
                      }
                    ],
                    "id": "2ee8c51a-2e91-4a62-b2bf-e3ee01a0d883",
                    "uid": "10462328-2ee8c51a-2e91-4a62-b2bf-e3ee01a0d883"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create P24 payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1ef519cf-6c8e-4226-a322-f1fc5bb13ee9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d570da39-bef3-4ead-b14a-23ba0a0777c7"
                            }
                          }
                        ],
                        "id": "7d512a9a-a7aa-4726-bd48-5c06b3e9e09d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"P24\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n        \"bank_code\": 64\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-7d512a9a-a7aa-4726-bd48-5c06b3e9e09d"
                      }
                    ],
                    "id": "ddede0f3-b6b1-43aa-86c8-5b6d278bbf3c",
                    "uid": "10462328-ddede0f3-b6b1-43aa-86c8-5b6d278bbf3c"
                  }
                ],
                "id": "e5d86bf0-a6dc-4c00-aff0-2e0defa73b58",
                "uid": "10462328-e5d86bf0-a6dc-4c00-aff0-2e0defa73b58"
              },
              {
                "name": "BIZUM",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create BIZUM payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8d38320f-2108-4112-9764-b6afffb90a2c"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "25a0789e-a279-45c6-be29-e867475be801"
                            }
                          }
                        ],
                        "id": "c22c6545-f146-4d2e-ad06-8fb2115af78a",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BIZUM\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n        \"id\": \"+12345678\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c22c6545-f146-4d2e-ad06-8fb2115af78a"
                      }
                    ],
                    "id": "e00c8331-85b7-4afa-a975-83539d6f7a96",
                    "uid": "10462328-e00c8331-85b7-4afa-a975-83539d6f7a96"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create BIZUM payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "77ff99f1-6816-439f-99e7-eb74f0f31fba"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "716a0d31-7dfb-45c0-a071-e8b75080c7f3"
                            }
                          }
                        ],
                        "id": "47dbfe98-a3ab-40c0-a5f0-8d93f22a14b3",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BIZUM\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-47dbfe98-a3ab-40c0-a5f0-8d93f22a14b3"
                      }
                    ],
                    "id": "fbfe886a-2cbd-469a-9c93-8ab887e9b30f",
                    "uid": "10462328-fbfe886a-2cbd-469a-9c93-8ab887e9b30f"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create BIZUM payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "339ce1e9-31a2-437c-ad07-4dca46df45fb"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f012aa35-ef42-4379-9704-246bbf7ea039"
                            }
                          }
                        ],
                        "id": "2c27b0f2-33a9-4658-b77d-3e9b74060b7c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BIZUM\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n        \"id\": \"+12345678\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2c27b0f2-33a9-4658-b77d-3e9b74060b7c"
                      }
                    ],
                    "id": "a7477b6c-cc30-4a34-8d83-27d3aebc948f",
                    "uid": "10462328-a7477b6c-cc30-4a34-8d83-27d3aebc948f"
                  }
                ],
                "id": "08bcc54a-3056-4552-a7b9-b7b77c12db48",
                "uid": "10462328-08bcc54a-3056-4552-a7b9-b7b77c12db48"
              },
              {
                "name": "BANCONTACT",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create BANCONTACT payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a35866ff-9358-44a0-aae4-cf190f58206e"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "98f2eace-2b49-4fb1-b270-e2a8a21ca751"
                            }
                          }
                        ],
                        "id": "252ae76b-ec78-46a8-ba5a-c1828b5dd80e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCONTACT\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-252ae76b-ec78-46a8-ba5a-c1828b5dd80e"
                      }
                    ],
                    "id": "c7309d13-b674-4656-82d5-4a5271f09061",
                    "uid": "10462328-c7309d13-b674-4656-82d5-4a5271f09061"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create BANCONTACT payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6fe689f6-53b3-424c-a3df-a65c61b1d215"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "203393c9-7a7d-4498-9a8a-285d874cb73b"
                            }
                          }
                        ],
                        "id": "459611ba-38df-4827-b9f1-5e0bea17a0fd",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCONTACT\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-459611ba-38df-4827-b9f1-5e0bea17a0fd"
                      }
                    ],
                    "id": "888e84f5-1cb6-4877-95e2-b1b18f04cd06",
                    "uid": "10462328-888e84f5-1cb6-4877-95e2-b1b18f04cd06"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create BANCONTACT payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "029efffd-d46c-45fa-81af-c42190f7e124"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "39ba4e03-a5ff-421d-89b4-8d5e9867d304"
                            }
                          }
                        ],
                        "id": "b8dbe99f-6d61-4792-a035-06452e1f6e9f",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCONTACT\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b8dbe99f-6d61-4792-a035-06452e1f6e9f"
                      }
                    ],
                    "id": "5a739eb2-5503-47fb-bc40-1f9a4cedbe04",
                    "uid": "10462328-5a739eb2-5503-47fb-bc40-1f9a4cedbe04"
                  }
                ],
                "id": "3803f5a4-a933-4cba-9559-b2bf7c5156ca",
                "uid": "10462328-3803f5a4-a933-4cba-9559-b2bf7c5156ca"
              },
              {
                "name": "SEPA Instant",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create SEPATRANSFER payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8b928224-6266-45a0-979f-767d1093f081"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9f1fb877-8014-4bd6-98a1-60f95102a8e6"
                            }
                          }
                        ],
                        "id": "52065d5a-bc38-4691-b6f4-5d952b4a5e8d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SEPATRANSFER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-52065d5a-bc38-4691-b6f4-5d952b4a5e8d"
                      }
                    ],
                    "id": "e7308995-e55a-4919-96bb-702115240e60",
                    "uid": "10462328-e7308995-e55a-4919-96bb-702115240e60"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create SEPATRANSFER payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "0e586595-83e3-4bee-919a-d568fca46421"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fd83ed72-78a2-4322-9f3d-af87ee6a0346"
                            }
                          }
                        ],
                        "id": "c33b7ceb-f1eb-4218-917e-f87e458ef9a0",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SEPATRANSFER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c33b7ceb-f1eb-4218-917e-f87e458ef9a0"
                      }
                    ],
                    "id": "cd1beb53-b4ec-40ea-b657-8d80d65ee764",
                    "uid": "10462328-cd1beb53-b4ec-40ea-b657-8d80d65ee764"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create SEPATRANSFER payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1cc37cd1-38f6-4f64-ae55-67eec8d280df"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "05bcecb3-63d3-4ca4-bf1d-5199d4d9dff4"
                            }
                          }
                        ],
                        "id": "6b67ea0f-3e6b-48ed-bb3f-57df14acfcc5",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SEPATRANSFER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-6b67ea0f-3e6b-48ed-bb3f-57df14acfcc5"
                      }
                    ],
                    "id": "02354e67-1743-4f93-a4e9-61896dfbe8b1",
                    "uid": "10462328-02354e67-1743-4f93-a4e9-61896dfbe8b1"
                  }
                ],
                "id": "701fd998-5bab-4497-a529-20264eec5228",
                "uid": "10462328-701fd998-5bab-4497-a529-20264eec5228"
              }
            ],
            "id": "cb688b6d-f1c2-4530-b190-85f5274a0fd8",
            "uid": "10462328-cb688b6d-f1c2-4530-b190-85f5274a0fd8"
          },
          {
            "name": "Asia",
            "item": [
              {
                "name": "Vietnam",
                "item": [
                  {
                    "name": "QR Vietnam",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create QR Vietnam payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "65642f23-f3ea-49b8-9ab3-367c197d35c2"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a87562b8-2a38-4bd1-b69b-4e202d10179c"
                                }
                              }
                            ],
                            "id": "fe787756-ee60-4b77-91fb-c187162fb73b",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"VIETQR\",\n    \"payment_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"VND\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-fe787756-ee60-4b77-91fb-c187162fb73b"
                          }
                        ],
                        "id": "f26999a5-675b-487c-a421-f938cc4c607d",
                        "uid": "10462328-f26999a5-675b-487c-a421-f938cc4c607d"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create QR Vietnam payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f50425e1-79ea-433d-bfc6-e24225541651"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a73a66dd-741c-43df-b548-314d222b33bd"
                                }
                              }
                            ],
                            "id": "55084665-ecfe-4d20-b981-6b50c381deb3",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"VIETQR\",\n    \"payment_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"VND\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-55084665-ecfe-4d20-b981-6b50c381deb3"
                          }
                        ],
                        "id": "8c885689-5d7f-482b-813a-30ca70001069",
                        "uid": "10462328-8c885689-5d7f-482b-813a-30ca70001069"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create Payme payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('ExtendedResponse_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('ExtendedResponse_TERMINAL_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "847cd2a5-2d36-4aab-b26d-16ca4789774b"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e50a9ce8-b7b4-4274-817b-7a067dbb82e1"
                                }
                              }
                            ],
                            "id": "3ff97baf-97f8-4819-8aff-a007b9c9c1ba",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"VietQR\",\n    \"payment_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"VND\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-3ff97baf-97f8-4819-8aff-a007b9c9c1ba"
                          }
                        ],
                        "id": "cb8b7bcd-6d2c-44f3-98c0-fc8202c6b592",
                        "uid": "10462328-cb8b7bcd-6d2c-44f3-98c0-fc8202c6b592"
                      }
                    ],
                    "id": "1e9d0b5e-3383-4d5a-8174-7101f57a368a",
                    "uid": "10462328-1e9d0b5e-3383-4d5a-8174-7101f57a368a"
                  }
                ],
                "id": "d9104f94-889f-4419-946b-94a5a5ffa0ef",
                "uid": "10462328-d9104f94-889f-4419-946b-94a5a5ffa0ef"
              },
              {
                "name": "Malaysia",
                "item": [
                  {
                    "name": "Boost",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "c18a8388-ae2b-4015-bb0a-f68a2b7c49a9",
                        "uid": "10462328-c18a8388-ae2b-4015-bb0a-f68a2b7c49a9"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "e333c9ab-d1bd-46b6-a184-01e36e8c58cb",
                        "uid": "10462328-e333c9ab-d1bd-46b6-a184-01e36e8c58cb"
                      }
                    ],
                    "id": "c0bee434-fde4-4cda-a760-723debc2a8db",
                    "uid": "10462328-c0bee434-fde4-4cda-a760-723debc2a8db"
                  },
                  {
                    "name": "GrabPay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "891921ed-5014-48d1-914b-d74eddc5909b",
                        "uid": "10462328-891921ed-5014-48d1-914b-d74eddc5909b"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "cefa0733-3064-4241-9ea6-e0ac85c434c5",
                        "uid": "10462328-cefa0733-3064-4241-9ea6-e0ac85c434c5"
                      }
                    ],
                    "id": "c5fbebe8-bd6f-4d30-b226-f9b1875ecab2",
                    "uid": "10462328-c5fbebe8-bd6f-4d30-b226-f9b1875ecab2"
                  },
                  {
                    "name": "Shopeepay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f031f215-2111-443e-8a41-dc3d67d6ddbf"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "69338be5-a2c0-4b3d-b5ee-40a12e35e001"
                                }
                              }
                            ],
                            "id": "53eed81c-7947-4807-bb17-29fa0af5b9a4",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MYR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"601234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-53eed81c-7947-4807-bb17-29fa0af5b9a4"
                          }
                        ],
                        "id": "7b17ddfb-eb07-4ded-b751-197b92cacd44",
                        "uid": "10462328-7b17ddfb-eb07-4ded-b751-197b92cacd44"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "1ea15624-a530-48b7-84ec-9de0b74ce736"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "105a20e2-fc6d-45c0-91a3-221c5115273e"
                                }
                              }
                            ],
                            "id": "7bca6854-cb17-47fe-89be-63c3adb1fca2",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MYR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"601234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-7bca6854-cb17-47fe-89be-63c3adb1fca2"
                          }
                        ],
                        "id": "824268d3-287f-43f9-9b12-787968304943",
                        "uid": "10462328-824268d3-287f-43f9-9b12-787968304943"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create Shopeepay payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ed8b93ea-b3bc-4127-b227-50c28cf3f368"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "311f6c13-a9c2-43f9-b26a-57d85dac0c62"
                                }
                              }
                            ],
                            "id": "917276fe-bab6-4c80-9047-9c7da16c97e3",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MYR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"601234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-917276fe-bab6-4c80-9047-9c7da16c97e3"
                          }
                        ],
                        "id": "1c1dbe7e-ea4f-4088-8bdb-8e782af72ee0",
                        "uid": "10462328-1c1dbe7e-ea4f-4088-8bdb-8e782af72ee0"
                      }
                    ],
                    "id": "196d2fc2-57b3-458f-8c9a-190daf59ebfa",
                    "uid": "10462328-196d2fc2-57b3-458f-8c9a-190daf59ebfa"
                  }
                ],
                "id": "d896853d-1b10-43a1-9c7d-91aeb3b07020",
                "uid": "10462328-d896853d-1b10-43a1-9c7d-91aeb3b07020"
              },
              {
                "name": "Republic of the Philippines",
                "item": [
                  {
                    "name": "Over The Counter Banking",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERBANKING payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b168e35e-320b-4e1e-9f08-d6591df068df"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "160a6956-7b36-4195-af32-6309e83f929a"
                                }
                              }
                            ],
                            "id": "220d3a44-6b24-43c7-a014-cd51e6c022dc",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BNRX\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-220d3a44-6b24-43c7-a014-cd51e6c022dc"
                          }
                        ],
                        "id": "a51741d1-80bd-4885-bd4c-ad426b75f0e0",
                        "uid": "10462328-a51741d1-80bd-4885-bd4c-ad426b75f0e0"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERBANKING payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6034b4ee-4608-47e4-9bdd-dcbb3e275d6a"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "86c2b4d3-1ad8-4582-b28d-94bc6f5be1ca"
                                }
                              }
                            ],
                            "id": "19ad6fbe-447d-417b-bc64-e3d95522507d",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BNRX\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-19ad6fbe-447d-417b-bc64-e3d95522507d"
                          }
                        ],
                        "id": "933be57b-70cd-46be-8293-5b378b60340b",
                        "uid": "10462328-933be57b-70cd-46be-8293-5b378b60340b"
                      }
                    ],
                    "id": "30d9b00b-9127-4e4a-8c0e-03ede57dc9f9",
                    "uid": "10462328-30d9b00b-9127-4e4a-8c0e-03ede57dc9f9"
                  },
                  {
                    "name": "Over The Counter Non Banking",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERNONBANKING payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "80a08f64-85c4-4a5b-9176-750d4641f83f"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5d707b54-2deb-411b-a44b-aaf219c08b6a"
                                }
                              }
                            ],
                            "id": "80a0de72-1660-432f-b9b6-b1b3f7dad771",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERNONBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"CEBL\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-80a0de72-1660-432f-b9b6-b1b3f7dad771"
                          }
                        ],
                        "id": "f9499167-9757-421b-93f7-68b853d2f03f",
                        "uid": "10462328-f9499167-9757-421b-93f7-68b853d2f03f"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERNONBANKING payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "235d6a45-edd9-4f48-af06-bba70754f15e"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a4157b37-b82c-4ff5-83ae-29dcc1fb0d2d"
                                }
                              }
                            ],
                            "id": "f517106f-7477-4335-988f-17a3c0ca0689",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERNONBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"CEBL\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-f517106f-7477-4335-988f-17a3c0ca0689"
                          }
                        ],
                        "id": "a781c5a1-d8a6-4f1e-b399-bf9a8a8f8eb9",
                        "uid": "10462328-a781c5a1-d8a6-4f1e-b399-bf9a8a8f8eb9"
                      }
                    ],
                    "id": "11f7a08e-8f87-479a-b623-ae2c104fcee0",
                    "uid": "10462328-11f7a08e-8f87-479a-b623-ae2c104fcee0"
                  },
                  {
                    "name": "Direct Banking Philippines",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create DIRECTBANKINGPH payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4924fe48-8dba-4a58-baf5-c3467d5ff850"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "cd508f13-3fcf-4c6d-9a15-5bdbbe237c31"
                                }
                              }
                            ],
                            "id": "ad87e2e6-f23a-40f8-976a-4e5644d5a27e",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGPH\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BOC\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ad87e2e6-f23a-40f8-976a-4e5644d5a27e"
                          }
                        ],
                        "id": "3944d27d-f708-4ffa-aace-a55d7f347be9",
                        "uid": "10462328-3944d27d-f708-4ffa-aace-a55d7f347be9"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DIRECTBANKINGPH payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "188490b2-1252-40eb-8e48-709a8a95b8cd"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "9a4d79d3-3148-490d-b45e-3f6f5207b4d8"
                                }
                              }
                            ],
                            "id": "d313cfde-50f6-4898-a975-433128662fe5",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGPH\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BOC\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-d313cfde-50f6-4898-a975-433128662fe5"
                          }
                        ],
                        "id": "bdf6ce12-a042-4fbd-a135-0db51e80fdf8",
                        "uid": "10462328-bdf6ce12-a042-4fbd-a135-0db51e80fdf8"
                      }
                    ],
                    "id": "14ab1fc4-d371-445b-885b-028ef237909b",
                    "uid": "10462328-14ab1fc4-d371-445b-885b-028ef237909b"
                  },
                  {
                    "name": "QR Philippines",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create QR Philippines payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6c934ed2-69ca-4e8f-bd20-67afc59a8230"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6b18678d-8746-4050-b36e-acffedccb2e5"
                                }
                              }
                            ],
                            "id": "84a4f3b7-ca49-4856-920e-0a16ad167b51",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"qrph\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-84a4f3b7-ca49-4856-920e-0a16ad167b51"
                          }
                        ],
                        "id": "33bdb0bd-c815-44f2-8ba0-434766b01cc4",
                        "uid": "10462328-33bdb0bd-c815-44f2-8ba0-434766b01cc4"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create QR Philippines payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "efa585a6-cc84-4785-b9c2-576fd38847ec"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "28483431-df6c-4b41-be67-9c9071079bb1"
                                }
                              }
                            ],
                            "id": "5b2aba45-bd5f-4cc8-998c-66848baac551",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"qrph\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-5b2aba45-bd5f-4cc8-998c-66848baac551"
                          }
                        ],
                        "id": "383b3cb1-83fe-464b-9a82-916535286d94",
                        "uid": "10462328-383b3cb1-83fe-464b-9a82-916535286d94"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create QR Philippines payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8f231e5d-f46a-4649-a0a8-ec329daafcd1"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a3a8c083-1ce1-49f2-8e03-5a3b3bb580ef"
                                }
                              }
                            ],
                            "id": "fa5b8ae1-8b39-4a23-bb6a-09466514e8d2",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"qrph\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-fa5b8ae1-8b39-4a23-bb6a-09466514e8d2"
                          }
                        ],
                        "id": "881c96d4-6c64-4cae-9c41-ad40189497dc",
                        "uid": "10462328-881c96d4-6c64-4cae-9c41-ad40189497dc"
                      }
                    ],
                    "id": "fd4b51e5-1e65-41df-b751-213d92419f3d",
                    "uid": "10462328-fd4b51e5-1e65-41df-b751-213d92419f3d"
                  },
                  {
                    "name": "Shopeepay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "adb96bff-099c-4474-b365-258f618e8336"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0c0d3ca6-2bc1-4970-bcbc-cf86f71ba32f"
                                }
                              }
                            ],
                            "id": "8c531732-2ca1-4b1d-a121-fdef8e9586ef",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"631234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-8c531732-2ca1-4b1d-a121-fdef8e9586ef"
                          }
                        ],
                        "id": "8d77b531-533e-4b3c-861b-da5030c51889",
                        "uid": "10462328-8d77b531-533e-4b3c-861b-da5030c51889"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7236223c-8808-4f7c-856d-34373284e342"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "49f84e41-e2e3-41fb-8ca8-9d7e680e375b"
                                }
                              }
                            ],
                            "id": "c832bcab-f56c-438a-b103-166c629c3dae",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"631234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-c832bcab-f56c-438a-b103-166c629c3dae"
                          }
                        ],
                        "id": "c597962d-5145-4ffe-8bba-542f2277745c",
                        "uid": "10462328-c597962d-5145-4ffe-8bba-542f2277745c"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create Shopeepay payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "1fc3a363-52e4-4c70-99ea-21294ae5429c"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "bb0f5ea1-a1ea-486f-9df3-55157847b6fa"
                                }
                              }
                            ],
                            "id": "8f363678-e266-4afd-8369-37fcd8ccfcb7",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"631234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-8f363678-e266-4afd-8369-37fcd8ccfcb7"
                          }
                        ],
                        "id": "abb1e1da-26d6-44c1-9316-c03d94095aa7",
                        "uid": "10462328-abb1e1da-26d6-44c1-9316-c03d94095aa7"
                      }
                    ],
                    "id": "09edb5db-16b5-47f3-ba4b-d5e04c31ead9",
                    "uid": "10462328-09edb5db-16b5-47f3-ba4b-d5e04c31ead9"
                  }
                ],
                "id": "b8d936bb-8b30-4cbb-a52b-fb4cb8dcff68",
                "uid": "10462328-b8d936bb-8b30-4cbb-a52b-fb4cb8dcff68"
              },
              {
                "name": "Thailand",
                "item": [
                  {
                    "name": "Direct Banking Thailand",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create directbankingthb payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2b316dcf-0bdb-4aa0-85a2-f0e3d238d29f"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "18db9b85-cad1-4c51-8369-043a653d951c"
                                }
                              }
                            ],
                            "id": "ba408100-a865-4688-b7dd-5fb2aea8828e",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"directbankingthb\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    },\n    \"ewallet_account\":{\n        \"bank_code\":\"BBL\"\n    },\n    \"return_urls\":{\n        \"inprocess_url\": \"http://www.example.com/in-process-url\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ba408100-a865-4688-b7dd-5fb2aea8828e"
                          }
                        ],
                        "id": "a288b9f2-87ea-42b9-9ffa-a5b63d245b8c",
                        "uid": "10462328-a288b9f2-87ea-42b9-9ffa-a5b63d245b8c"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create directbankingthb payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "16e9c1f1-2183-443d-ba7f-d4c1006d6cc7"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "fd70b35a-335a-4bdc-85f5-6102120b428c"
                                }
                              }
                            ],
                            "id": "39784fe9-7050-41bf-a270-9833a7126927",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"directbankingthb\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    },\n    \"ewallet_account\":{\n        \"bank_code\":\"BBL\"\n    }\n\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-39784fe9-7050-41bf-a270-9833a7126927"
                          }
                        ],
                        "id": "be70e84b-c942-49df-bf3b-0fc2b40a95c4",
                        "uid": "10462328-be70e84b-c942-49df-bf3b-0fc2b40a95c4"
                      }
                    ],
                    "id": "d9b9b1d6-bc6a-44e8-9212-b15c58efac18",
                    "uid": "10462328-d9b9b1d6-bc6a-44e8-9212-b15c58efac18"
                  },
                  {
                    "name": "PromptPay QR",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create PROMPTPAYQR payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "48ea723b-1614-43e1-a458-1712838439c3"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a8dbcd8f-821e-41f1-899e-bbdb0b269a0e"
                                }
                              }
                            ],
                            "id": "2b4cbd1e-6fae-4923-a3a8-722a9f07df6c",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"promptpayqr\",\n    \"payment_data\": {\n        \"amount\": \"2001\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-2b4cbd1e-6fae-4923-a3a8-722a9f07df6c"
                          }
                        ],
                        "id": "635d3c45-1917-4de1-be6f-52c1e240d8ad",
                        "uid": "10462328-635d3c45-1917-4de1-be6f-52c1e240d8ad"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create promptpayqr payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "85c8879c-e610-4eab-94f2-37e1dae7edef"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d088e777-c3b0-4d56-b7a6-d3534b6b6396"
                                }
                              }
                            ],
                            "id": "43a9a21d-71b2-403b-aa74-866fa501205a",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"promptpayqr\",\n    \"payment_data\": {\n        \"amount\": \"2001\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-43a9a21d-71b2-403b-aa74-866fa501205a"
                          }
                        ],
                        "id": "c497b903-3018-47de-b1f1-702595939742",
                        "uid": "10462328-c497b903-3018-47de-b1f1-702595939742"
                      }
                    ],
                    "id": "79fcb84c-c114-41ae-b06b-7218a9ecf8f0",
                    "uid": "10462328-79fcb84c-c114-41ae-b06b-7218a9ecf8f0"
                  },
                  {
                    "name": "TrueMoney Wallet",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create TRUEMONEY payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "539108f0-ac0d-48fc-8fc3-a97527b5ad2c"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4fc115ff-b8ea-445f-9419-c9bf9e298965"
                                }
                              }
                            ],
                            "id": "e3ec4774-6c9c-4602-8b35-b8605f608acc",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"truemoney\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\":\"0123456789\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-e3ec4774-6c9c-4602-8b35-b8605f608acc"
                          }
                        ],
                        "id": "d091e5eb-c8f2-466b-ac01-01fb095ab739",
                        "uid": "10462328-d091e5eb-c8f2-466b-ac01-01fb095ab739"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create truemoney payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e0f53529-9eaf-4ade-b644-a9b1da2c1727"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "902b0532-2e4e-4c06-bc2f-7f274b4afe27"
                                }
                              }
                            ],
                            "id": "24e1120d-e2c1-4cd3-b9c5-74f1017bdd9f",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"truemoney\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\":\"0123456789\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-24e1120d-e2c1-4cd3-b9c5-74f1017bdd9f"
                          }
                        ],
                        "id": "07dccae1-f3e3-414a-b74b-41b13909de89",
                        "uid": "10462328-07dccae1-f3e3-414a-b74b-41b13909de89"
                      }
                    ],
                    "id": "10d8ed82-7eb1-417a-a04e-33a2df537ebd",
                    "uid": "10462328-10d8ed82-7eb1-417a-a04e-33a2df537ebd"
                  },
                  {
                    "name": "Tesco Bill Payment",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create tescobill payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "84ba3da1-9e71-4239-ba2b-4fd677d5e9fe"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a1be0f66-c2d9-4e6d-b98b-00772ef4df00"
                                }
                              }
                            ],
                            "id": "56def6ca-9aef-40f3-b8e3-82ad062c4bb4",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"tescobill\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-56def6ca-9aef-40f3-b8e3-82ad062c4bb4"
                          }
                        ],
                        "id": "f0b99205-58e2-4c81-85b9-fcad529e763e",
                        "uid": "10462328-f0b99205-58e2-4c81-85b9-fcad529e763e"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create tescobill payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b0d5b534-05bb-4bc3-9206-5561f354858c"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "89800552-8da7-4ba5-9beb-ed97982da6df"
                                }
                              }
                            ],
                            "id": "5e934ce7-0aca-4843-8cf6-a5741aac1805",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"tescobill\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-5e934ce7-0aca-4843-8cf6-a5741aac1805"
                          }
                        ],
                        "id": "147f4763-3b64-4401-b0cb-5b3a1d726092",
                        "uid": "10462328-147f4763-3b64-4401-b0cb-5b3a1d726092"
                      }
                    ],
                    "id": "5063bd3b-70fb-4405-a52a-ad933d006983",
                    "uid": "10462328-5063bd3b-70fb-4405-a52a-ad933d006983"
                  },
                  {
                    "name": "Shopeepay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f236eb7e-3334-47dd-a69c-1ce0a23fa0f7"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "aa8716c8-b14f-4f21-afb5-82c33d6db3b5"
                                }
                              }
                            ],
                            "id": "2b8fee0f-1bd7-426a-84f5-311e9ae2271f",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"THB\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"66123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-2b8fee0f-1bd7-426a-84f5-311e9ae2271f"
                          }
                        ],
                        "id": "fe7acfd3-651b-4285-b524-f044a9d70444",
                        "uid": "10462328-fe7acfd3-651b-4285-b524-f044a9d70444"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "9ae43354-9f62-426f-9898-337942fb68e4"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "aaec9c85-f4ca-46c1-8fd3-52a4973886f2"
                                }
                              }
                            ],
                            "id": "4ab6356e-c1af-4b36-8de0-abbd87214689",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"THB\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"66123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-4ab6356e-c1af-4b36-8de0-abbd87214689"
                          }
                        ],
                        "id": "923e53d5-0a7f-4029-a32b-9479cde04d5d",
                        "uid": "10462328-923e53d5-0a7f-4029-a32b-9479cde04d5d"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create Shopeepay payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f9b08fc4-6e33-4eac-9fb9-66a73497b8f8"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "16bdc4ca-6e3c-4f5b-8479-4393cbd04119"
                                }
                              }
                            ],
                            "id": "fa87a241-88a9-45e6-9fb0-324736712de8",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"THB\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"66123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-fa87a241-88a9-45e6-9fb0-324736712de8"
                          }
                        ],
                        "id": "af96054f-faf9-474b-a3c9-0fffcd4d37d8",
                        "uid": "10462328-af96054f-faf9-474b-a3c9-0fffcd4d37d8"
                      }
                    ],
                    "id": "5796327a-0692-48c0-bf41-69ffe30f4534",
                    "uid": "10462328-5796327a-0692-48c0-bf41-69ffe30f4534"
                  }
                ],
                "id": "44219ead-43e6-4ef5-aecd-cb697907bd62",
                "uid": "10462328-44219ead-43e6-4ef5-aecd-cb697907bd62"
              },
              {
                "name": "South Korea",
                "item": [
                  {
                    "name": "Bank transfer South Korea",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "d9e21eae-2aa1-4edb-b0e6-4187f99e44cd",
                        "uid": "10462328-d9e21eae-2aa1-4edb-b0e6-4187f99e44cd"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "c09091fc-aeff-4b0b-8594-9865bac98d4b",
                        "uid": "10462328-c09091fc-aeff-4b0b-8594-9865bac98d4b"
                      }
                    ],
                    "id": "1e1582e8-3b99-449c-9325-4d618f97e5ef",
                    "uid": "10462328-1e1582e8-3b99-449c-9325-4d618f97e5ef"
                  },
                  {
                    "name": "NaverPay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create naverpay payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2f6d8a31-166f-4f15-89ec-6023cba76b91"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "78b18d85-30f7-4ac1-b366-f22ceaf73457"
                                }
                              }
                            ],
                            "id": "36c49c73-ca77-427a-9751-b9c16f63e66d",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n             \"items\": [\n            {\n                \"count\": 2,\n                \"name\": \"bread\",\n                \"price\": 100\n            }\n        ]\n    },\n    \"payment_method\": \"naverpay\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"KRW\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-36c49c73-ca77-427a-9751-b9c16f63e66d"
                          }
                        ],
                        "id": "e71c2bee-7bec-4fdd-93db-1ecc06a9ae68",
                        "uid": "10462328-e71c2bee-7bec-4fdd-93db-1ecc06a9ae68"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create naverpay payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f4c9f87c-7a00-4fe4-8937-2d06f034ff87"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a8941cf5-fd31-4b12-9a74-ae007307b64c"
                                }
                              }
                            ],
                            "id": "e7bc66ed-6ae3-43c6-a890-51be1ed76ec2",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n             \"items\": [\n            {\n                \"count\": 2,\n                \"name\": \"bread\",\n                \"price\": 100\n            }\n        ]\n    },\n    \"payment_method\": \"naverpay\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"KRW\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-e7bc66ed-6ae3-43c6-a890-51be1ed76ec2"
                          }
                        ],
                        "id": "5b959b87-aa38-4e99-9bbb-fb665f1e6e82",
                        "uid": "10462328-5b959b87-aa38-4e99-9bbb-fb665f1e6e82"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create naverpay payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "377e83f0-dea5-4aa8-9085-e08e12506a2a"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8750ee58-ba4c-428f-89bd-0045722f73f9"
                                }
                              }
                            ],
                            "id": "cb175ac0-ea1a-46c5-b937-e78a0ad26a6d",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\",\n        \"items\":[\n            {\n                \"name\": \"Apple\",\n                \"count\": \"10\",\n                \"price\": 10\n            }\n        ]\n    },\n    \"payment_method\": \"NAVERPAY\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"KRW\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-cb175ac0-ea1a-46c5-b937-e78a0ad26a6d"
                          }
                        ],
                        "id": "42f6c3c4-a312-4766-90cf-d4ed19463fc8",
                        "uid": "10462328-42f6c3c4-a312-4766-90cf-d4ed19463fc8"
                      }
                    ],
                    "id": "7f8cd089-6b91-4016-8f35-e5f8d1b5b2bd",
                    "uid": "10462328-7f8cd089-6b91-4016-8f35-e5f8d1b5b2bd"
                  }
                ],
                "id": "9d91bab3-d2dc-4b19-a467-096d293aa039",
                "uid": "10462328-9d91bab3-d2dc-4b19-a467-096d293aa039"
              },
              {
                "name": "Indonesia",
                "item": [
                  {
                    "name": "Alfa VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create ALFAVA payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b172ed27-4403-421c-804a-8c5d6dca4a27"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "98294c9d-c890-4937-84a9-b475e6b51113"
                                }
                              }
                            ],
                            "id": "12582da9-07c6-4f0b-b496-85f6f1529183",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALFAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-12582da9-07c6-4f0b-b496-85f6f1529183"
                          }
                        ],
                        "id": "6f61b08a-1fec-4223-818b-2d1ef3f6f362",
                        "uid": "10462328-6f61b08a-1fec-4223-818b-2d1ef3f6f362"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create ALFAVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a39c9a2b-e9c1-4088-86d3-bb5d9250696d"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "50df5e62-62fc-4e79-9e8e-b9e7c4c5e545"
                                }
                              }
                            ],
                            "id": "8b2fee39-8402-4e99-9717-cb814b401673",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALFAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-8b2fee39-8402-4e99-9717-cb814b401673"
                          }
                        ],
                        "id": "208bf3fd-6035-4e8a-88bf-f6ddf2d3ce56",
                        "uid": "10462328-208bf3fd-6035-4e8a-88bf-f6ddf2d3ce56"
                      }
                    ],
                    "id": "397955fc-b22a-4ce1-aeaf-a06326086937",
                    "uid": "10462328-397955fc-b22a-4ce1-aeaf-a06326086937"
                  },
                  {
                    "name": "CIMB VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create CIMBVA payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8c401bea-6d6d-47c0-a31b-0a4df2d2eeb2"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "62c784a6-6155-44cb-98d8-def05ceb6f46"
                                }
                              }
                            ],
                            "id": "2def974c-b59a-43cb-b4f0-d117e6dfeaf5",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CIMBVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-2def974c-b59a-43cb-b4f0-d117e6dfeaf5"
                          }
                        ],
                        "id": "a3e64706-8bcd-46c6-8dcb-9cd750604920",
                        "uid": "10462328-a3e64706-8bcd-46c6-8dcb-9cd750604920"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create CIMBVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0616a228-2f1f-4efc-9bbb-8828ce2cd185"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "65225ab4-1a1b-47fc-8ac8-02ec81a9e9d6"
                                }
                              }
                            ],
                            "id": "34b51f08-18d8-40c9-9ab0-5633b58eff60",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CIMBVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-34b51f08-18d8-40c9-9ab0-5633b58eff60"
                          }
                        ],
                        "id": "8a338a2f-5f7f-48fa-9c73-40ed7e632031",
                        "uid": "10462328-8a338a2f-5f7f-48fa-9c73-40ed7e632031"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create CIMBVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "27e81770-8a98-4055-ba54-a414054dbb76"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c78a7817-4549-418a-8f17-9e63635d1770"
                                }
                              }
                            ],
                            "id": "5b70501d-8344-4890-8f5f-74c308bdd103",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CIMBVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-5b70501d-8344-4890-8f5f-74c308bdd103"
                          }
                        ],
                        "id": "44ec4734-a426-4257-a3b7-136164173f42",
                        "uid": "10462328-44ec4734-a426-4257-a3b7-136164173f42"
                      }
                    ],
                    "id": "103cdcf8-7dbe-4472-9150-5758393803b4",
                    "uid": "10462328-103cdcf8-7dbe-4472-9150-5758393803b4"
                  },
                  {
                    "name": "Danamon VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "929b2bc2-76e6-4cfb-9759-7d886fd9e87f",
                        "uid": "10462328-929b2bc2-76e6-4cfb-9759-7d886fd9e87f"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "fe3b0254-86c6-4210-a9d9-f42004a51852",
                        "uid": "10462328-fe3b0254-86c6-4210-a9d9-f42004a51852"
                      }
                    ],
                    "id": "4839a3f9-80f2-4527-b3be-1e1c12ad3dfe",
                    "uid": "10462328-4839a3f9-80f2-4527-b3be-1e1c12ad3dfe"
                  },
                  {
                    "name": "Permata VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create PERMATAVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "aea153a0-0abe-48e4-a545-1191f76050b7"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5b0eef12-b064-4b71-a146-61fd69b8a9e7"
                                }
                              }
                            ],
                            "id": "404ac91f-9453-484b-8d0c-c090ef9cd975",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PERMATAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-404ac91f-9453-484b-8d0c-c090ef9cd975"
                          }
                        ],
                        "id": "fafba186-7c3c-462d-a627-849fbb9cce9b",
                        "uid": "10462328-fafba186-7c3c-462d-a627-849fbb9cce9b"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create PERMATAVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "260e5f1e-e978-4946-87da-1600d2f2ca45"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b0ec3160-1e9e-4af9-80c0-6c0a6f14488e"
                                }
                              }
                            ],
                            "id": "aa4bec6d-d237-4d50-adb0-98119f84aa28",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PERMATAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-aa4bec6d-d237-4d50-adb0-98119f84aa28"
                          }
                        ],
                        "id": "61585c82-102f-4870-afed-b819c00a4f56",
                        "uid": "10462328-61585c82-102f-4870-afed-b819c00a4f56"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create PERMATAVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f2ff0242-0cc4-45dd-8faf-5d243c2322fa"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c0a44f44-80dc-48aa-8088-33b5cbec8b1f"
                                }
                              }
                            ],
                            "id": "5822b264-759e-4d80-8e79-0171ec74cabd",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PERMATAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-5822b264-759e-4d80-8e79-0171ec74cabd"
                          }
                        ],
                        "id": "9fa58f65-5441-492e-b2de-cdda73004507",
                        "uid": "10462328-9fa58f65-5441-492e-b2de-cdda73004507"
                      }
                    ],
                    "id": "ebca6ac7-b8ef-45df-92ad-208d15e9118a",
                    "uid": "10462328-ebca6ac7-b8ef-45df-92ad-208d15e9118a"
                  },
                  {
                    "name": "Mandiri VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create MANDIRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e91453a3-66f9-4288-8e3d-1cd6ae7ae05e"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "eef5e58f-162f-49c7-a8af-235a3ddbd010"
                                }
                              }
                            ],
                            "id": "24261b67-42c9-4800-9016-8054af5e5332",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MANDIRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-24261b67-42c9-4800-9016-8054af5e5332"
                          }
                        ],
                        "id": "2de47453-9d76-4134-8c8a-5e4cd0ae6403",
                        "uid": "10462328-2de47453-9d76-4134-8c8a-5e4cd0ae6403"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create MANDIRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "18df83e8-c5c5-4de1-bb2f-f5a2743d1992"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "28b7f8ce-9f6b-4824-90e0-2153ac37ec22"
                                }
                              }
                            ],
                            "id": "30218f39-228b-4f11-811c-9a934c060112",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MANDIRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-30218f39-228b-4f11-811c-9a934c060112"
                          }
                        ],
                        "id": "62eae31d-b363-4c3b-b3c7-520f6e675aaf",
                        "uid": "10462328-62eae31d-b363-4c3b-b3c7-520f6e675aaf"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create MANDIRIVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "fddbfe10-861f-4c98-a3b4-fcf8065eef65"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "25c94420-0efc-4abe-8cce-33388e1ae9c0"
                                }
                              }
                            ],
                            "id": "a8913a37-f177-4441-b43e-e83703148ac8",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MANDIRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-a8913a37-f177-4441-b43e-e83703148ac8"
                          }
                        ],
                        "id": "679c3754-9a03-4468-81fd-6ed92f38344e",
                        "uid": "10462328-679c3754-9a03-4468-81fd-6ed92f38344e"
                      }
                    ],
                    "id": "cdfc0362-57f8-49fe-b85c-475b30119979",
                    "uid": "10462328-cdfc0362-57f8-49fe-b85c-475b30119979"
                  },
                  {
                    "name": "Permata Internet Banking",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "48711d3f-987e-47fe-8556-0a2a2b0402f9",
                        "uid": "10462328-48711d3f-987e-47fe-8556-0a2a2b0402f9"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "4ba33e18-9585-4bda-b9af-cbe4feb25f1e",
                        "uid": "10462328-4ba33e18-9585-4bda-b9af-cbe4feb25f1e"
                      }
                    ],
                    "id": "b0a4d013-9c4f-4b21-859b-68ac19b3e466",
                    "uid": "10462328-b0a4d013-9c4f-4b21-859b-68ac19b3e466"
                  },
                  {
                    "name": "DOKU Wallet",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DOKUWALLET payment(gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "709d1dab-0ade-405e-bda1-a1bd12d2de80"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c36fe7c0-6df9-4494-8c4e-bed56fa4de68"
                                }
                              }
                            ],
                            "id": "f067c931-0374-44be-abf6-45fe1aaf6fd9",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"DOKUWALLET\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-f067c931-0374-44be-abf6-45fe1aaf6fd9"
                          }
                        ],
                        "id": "8298b0fb-f9aa-484c-ac59-28da4e4be282",
                        "uid": "10462328-8298b0fb-f9aa-484c-ac59-28da4e4be282"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create DOKUWALLET payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "66324e06-6584-476e-babd-bb5e70945115"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "84213fd5-6479-4ac5-b77e-2f06f6e28801"
                                }
                              }
                            ],
                            "id": "4cb18d6d-a02d-4b02-94b2-67562492c55f",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"DOKUWALLET\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-4cb18d6d-a02d-4b02-94b2-67562492c55f"
                          }
                        ],
                        "id": "f624ab05-4aa3-48f1-bb7b-1cb7ec181204",
                        "uid": "10462328-f624ab05-4aa3-48f1-bb7b-1cb7ec181204"
                      }
                    ],
                    "id": "1eb1675a-8779-4591-8ffd-c0a615a1d4fd",
                    "uid": "10462328-1eb1675a-8779-4591-8ffd-c0a615a1d4fd"
                  },
                  {
                    "name": "BNI VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BNIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "31d58f35-8b5d-45c1-9376-d9c33252087a"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "236b0a22-ba90-4124-8616-f9c08d67a2c3"
                                }
                              }
                            ],
                            "id": "9aebe8ad-e598-4e51-b5b0-9e987a56ca3e",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BNIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-9aebe8ad-e598-4e51-b5b0-9e987a56ca3e"
                          }
                        ],
                        "id": "9709414f-0323-4c5a-a8eb-325bdccddb6d",
                        "uid": "10462328-9709414f-0323-4c5a-a8eb-325bdccddb6d"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BNIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5ae7ac4c-1ca2-4701-b822-5d385ca79fea"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f0558df1-7ede-45eb-9a5c-b08d9588f33e"
                                }
                              }
                            ],
                            "id": "e4898377-385b-4508-af9a-4ac9f1a5b811",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BNIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-e4898377-385b-4508-af9a-4ac9f1a5b811"
                          }
                        ],
                        "id": "cac31cf2-1cb6-4618-9815-dd6cfd355746",
                        "uid": "10462328-cac31cf2-1cb6-4618-9815-dd6cfd355746"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BNIVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "1993f063-7e66-4a7c-a050-2885e7b3db9c"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b73c311f-6285-4bb3-bbda-0ddf2ae35315"
                                }
                              }
                            ],
                            "id": "31e3b4e5-6271-4c21-94e9-aa6e998a0a0d",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BNIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-31e3b4e5-6271-4c21-94e9-aa6e998a0a0d"
                          }
                        ],
                        "id": "8f0a8a4d-d2bf-4d66-82ec-153b37054188",
                        "uid": "10462328-8f0a8a4d-d2bf-4d66-82ec-153b37054188"
                      }
                    ],
                    "id": "d707f318-f655-4a0e-ad65-80c21e0419ae",
                    "uid": "10462328-d707f318-f655-4a0e-ad65-80c21e0419ae"
                  },
                  {
                    "name": "BRI VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6537a7b9-f064-4b69-9afd-cdef1b98d2a2"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6f8ffeb0-e9e7-42cd-8759-15d2e1f774e9"
                                }
                              }
                            ],
                            "id": "d210e6d5-cc24-4141-94d2-5e1a92628fce",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-d210e6d5-cc24-4141-94d2-5e1a92628fce"
                          }
                        ],
                        "id": "8a3d5631-9c09-40c0-b26c-2bd177b55520",
                        "uid": "10462328-8a3d5631-9c09-40c0-b26c-2bd177b55520"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "293f6331-6fbc-46ef-b358-a2a70818c25b"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "62adda89-d41e-44ff-8bae-adbc68b2aae3"
                                }
                              }
                            ],
                            "id": "3143edc8-0def-4bab-b49c-aed1755a1216",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-3143edc8-0def-4bab-b49c-aed1755a1216"
                          }
                        ],
                        "id": "d2709421-4b22-4032-9e0f-e6f801322e87",
                        "uid": "10462328-d2709421-4b22-4032-9e0f-e6f801322e87"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BRIVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e85ebbd2-be0b-4689-af2a-8b94d256e5ee"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "54d00991-ffc6-4158-a0b5-fbf3a2b7525f"
                                }
                              }
                            ],
                            "id": "86cc972e-0485-4302-a1a8-bbe2e32b6119",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-86cc972e-0485-4302-a1a8-bbe2e32b6119"
                          }
                        ],
                        "id": "077975f9-6520-4fc8-8961-e5a2563f1044",
                        "uid": "10462328-077975f9-6520-4fc8-8961-e5a2563f1044"
                      }
                    ],
                    "id": "34fc1de9-3d87-4ebb-8f5a-02fa30887d3b",
                    "uid": "10462328-34fc1de9-3d87-4ebb-8f5a-02fa30887d3b"
                  },
                  {
                    "name": "DANA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DANA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "446109b9-2f19-4658-a7dd-58aabb560913"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                                    "        pm.expect(response_after_redirect.code).to.equal(200);",
                                    "    });",
                                    "    ",
                                    " pm.collectionVariables.set('payment_id_for_refund_dana', response.payment_data.id);",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5f4f3a4a-fa61-43b3-ad9a-fae280e992f0"
                                }
                              }
                            ],
                            "id": "d7154acb-6366-489e-b51b-35cf5aebd89f",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DANA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-d7154acb-6366-489e-b51b-35cf5aebd89f"
                          }
                        ],
                        "id": "b52d8bfd-b4d1-46c4-ac20-e1734ee9797c",
                        "uid": "10462328-b52d8bfd-b4d1-46c4-ac20-e1734ee9797c"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create DANA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "41ed9cc4-66d0-46a5-8675-ab50180df177"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "   ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "04022c88-871e-4a8e-8712-2dc9aa50b67b"
                                }
                              }
                            ],
                            "id": "c4b7a3d7-8642-421f-8d53-05dc3bcd558b",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DANA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-c4b7a3d7-8642-421f-8d53-05dc3bcd558b"
                          }
                        ],
                        "id": "d7cd3da9-b399-4290-ae36-73cb84c36899",
                        "uid": "10462328-d7cd3da9-b399-4290-ae36-73cb84c36899"
                      },
                      {
                        "name": "Refunds",
                        "item": [
                          {
                            "name": "Create DANA Refund",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var moment = require('moment');",
                                    "pm.variables.set(\"request_time\", moment().toISOString());",
                                    "",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                                    "",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "512242be-eba8-497f-8ad3-4d72ddd86ca5"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "   ",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "  ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2a8f9825-ad70-4199-befb-8520f6121ab6"
                                }
                              }
                            ],
                            "id": "1d9d427f-95f9-439e-97c1-341555b2a41d",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund_dana}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "refunds"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-1d9d427f-95f9-439e-97c1-341555b2a41d"
                          }
                        ],
                        "id": "d1c7da07-a46f-45c7-983c-bd2f691af8e8",
                        "uid": "10462328-d1c7da07-a46f-45c7-983c-bd2f691af8e8"
                      }
                    ],
                    "id": "bca47243-a39a-4668-a1ac-e4de7f3d83a2",
                    "uid": "10462328-bca47243-a39a-4668-a1ac-e4de7f3d83a2"
                  },
                  {
                    "name": "OVO",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVO payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "91d149d0-0112-4934-8afe-69ff627ace79"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "     pm.collectionVariables.set('payment_id_for_refund_ovo', response.payment_data.id);",
                                    "});",
                                    ""
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "9df5c3b7-0c52-450b-9c0c-62e854258812"
                                }
                              }
                            ],
                            "id": "93504258-b96e-4b1e-9da4-bc3497f0541c",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVO\",\n    \"payment_data\": {\n        \"amount\": \"101\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-93504258-b96e-4b1e-9da4-bc3497f0541c"
                          }
                        ],
                        "id": "bf9a0f59-c9d4-46a4-b100-e66930b3d893",
                        "uid": "10462328-bf9a0f59-c9d4-46a4-b100-e66930b3d893"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create OVO payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6b9354ce-9852-49f9-b71b-6086c757bc8f"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "982f1534-7835-4c8b-b44b-1fbaa6523dc0"
                                }
                              }
                            ],
                            "id": "61eec739-7c66-44ce-b69b-182898e24fca",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVO\",\n    \"payment_data\": {\n        \"amount\": \"101\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-61eec739-7c66-44ce-b69b-182898e24fca"
                          }
                        ],
                        "id": "17248c06-8c73-4841-ae10-4d8d7a07891b",
                        "uid": "10462328-17248c06-8c73-4841-ae10-4d8d7a07891b"
                      },
                      {
                        "name": "Refunds",
                        "item": [
                          {
                            "name": "Create OVO Refund",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var moment = require('moment');",
                                    "pm.variables.set(\"request_time\", moment().toISOString());",
                                    "",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                                    "",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "69974beb-6b7a-4c6c-8f87-1e00da9596be"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.refund_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_refund_id', response.refund_data.id);",
                                    "    ",
                                    "    postman.setNextRequest('Get refund by merchant order id');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d41d6825-37c2-4f4b-9214-56259631c54d"
                                }
                              }
                            ],
                            "id": "3d2c8165-9844-4db6-b43f-5626450acaab",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund_ovo}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "refunds"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-3d2c8165-9844-4db6-b43f-5626450acaab"
                          }
                        ],
                        "id": "f86781c6-b75e-4681-a612-19e09ad8eb74",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "type": "text/javascript",
                              "packages": {},
                              "exec": [
                                ""
                              ],
                              "id": "fdf2223e-298a-4139-af22-52c0cd1e5f2f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "type": "text/javascript",
                              "packages": {},
                              "exec": [
                                ""
                              ],
                              "id": "a8ace7d6-80c0-4cbd-a74d-7b13ac7f256d"
                            }
                          }
                        ],
                        "uid": "10462328-f86781c6-b75e-4681-a612-19e09ad8eb74"
                      }
                    ],
                    "id": "9048343b-ba13-4070-8e4e-7fa21e17852c",
                    "uid": "10462328-9048343b-ba13-4070-8e4e-7fa21e17852c"
                  },
                  {
                    "name": "LINKAJA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create LINKAJA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4bccabd7-b13f-4e2a-9bf9-bf9587d7c35b"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "9371e5e8-0017-4197-8245-b5ada6ce44c8"
                                }
                              }
                            ],
                            "id": "9a9ab492-6dd6-434a-9e93-e48e44a0ae8c",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"LINKAJA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-9a9ab492-6dd6-434a-9e93-e48e44a0ae8c"
                          }
                        ],
                        "id": "8221763f-6fce-4a66-b3b6-1f7f84dd817d",
                        "uid": "10462328-8221763f-6fce-4a66-b3b6-1f7f84dd817d"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create LINKAJA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "bb157ab3-cb3a-42e4-b330-258ed868b5f9"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "61b47e92-d787-4ad6-8e9e-e3e561d9c722"
                                }
                              }
                            ],
                            "id": "5ac00ebd-275d-4c13-8f18-70c05807c365",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"LINKAJA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-5ac00ebd-275d-4c13-8f18-70c05807c365"
                          }
                        ],
                        "id": "ecd3c6a5-7604-48fc-a655-0af2d5ce5722",
                        "uid": "10462328-ecd3c6a5-7604-48fc-a655-0af2d5ce5722"
                      }
                    ],
                    "id": "b0b362fd-5267-4671-ac81-f1506badaaef",
                    "uid": "10462328-b0b362fd-5267-4671-ac81-f1506badaaef"
                  },
                  {
                    "name": "SHOPEEPAY",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create SHOPEEPAY payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "cdb5f0f9-2a0d-4a36-9a8a-7d50acb3d124"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "     pm.collectionVariables.set('payment_id_for_refund_shopee', response.payment_data.id);",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "03940f80-9e46-467f-a9ca-e28df9402b4e"
                                }
                              }
                            ],
                            "id": "d61c143c-54de-416a-b126-d63126d9e048",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-d61c143c-54de-416a-b126-d63126d9e048"
                          }
                        ],
                        "id": "121f749d-9bc1-411a-a792-e5e786445b83",
                        "uid": "10462328-121f749d-9bc1-411a-a792-e5e786445b83"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create SHOPEEPAY payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ef7f926f-9be9-4c2d-82ac-0d6cf2659d42"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "cef6fa9b-f51c-4bb2-abe3-b6985a11e32e"
                                }
                              }
                            ],
                            "id": "487b498e-ca59-4639-8bef-59552207e2b9",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-487b498e-ca59-4639-8bef-59552207e2b9"
                          }
                        ],
                        "id": "e927e518-0ab1-4900-b402-b08c22719415",
                        "uid": "10462328-e927e518-0ab1-4900-b402-b08c22719415"
                      },
                      {
                        "name": "Refunds",
                        "item": [
                          {
                            "name": "Create ShopeePay Refund",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var moment = require('moment');",
                                    "pm.variables.set(\"request_time\", moment().toISOString());",
                                    "",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                                    "",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f984497f-33c3-4425-84ba-285bf1f1644d"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "   ",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "  ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c0753207-d132-4904-8b9e-090ae3c579ee"
                                }
                              }
                            ],
                            "id": "06e81066-0c31-4c0a-a18d-1b8ff9057fca",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund_shopee}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "refunds"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-06e81066-0c31-4c0a-a18d-1b8ff9057fca"
                          }
                        ],
                        "id": "204d01bd-3c3d-46ab-bd19-493f5433ba2d",
                        "uid": "10462328-204d01bd-3c3d-46ab-bd19-493f5433ba2d"
                      }
                    ],
                    "id": "e2b7bcf0-d1cc-4fdd-bbe1-cdf725d50898",
                    "uid": "10462328-e2b7bcf0-d1cc-4fdd-bbe1-cdf725d50898"
                  },
                  {
                    "name": "QRIS",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create QRIS payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "35733c4c-d849-4034-acb8-63dd6d845e81"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.collectionVariables.set('payment_id_for_refund_qris', response.payment_data.id);",
                                    "});",
                                    " "
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ee278913-1e9c-455b-938d-0b2a3f3e0296"
                                }
                              }
                            ],
                            "id": "87710d3a-a403-41db-b4bb-708aa3380ec6",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"QRIS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-87710d3a-a403-41db-b4bb-708aa3380ec6"
                          }
                        ],
                        "id": "d01ed400-6a48-4891-83c9-6b3efd5436ff",
                        "uid": "10462328-d01ed400-6a48-4891-83c9-6b3efd5436ff"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create QRIS payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "306600a2-0eb5-4bc5-ba86-310187bf1fa1"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0fe4ff34-b63a-41db-86d0-7f9b6aba2448"
                                }
                              }
                            ],
                            "id": "ef911fc2-3b41-4a7d-a040-c3b755e7f7b9",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"QRIS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ef911fc2-3b41-4a7d-a040-c3b755e7f7b9"
                          }
                        ],
                        "id": "ac111f4b-daf1-4ed1-9045-095298e72f8b",
                        "uid": "10462328-ac111f4b-daf1-4ed1-9045-095298e72f8b"
                      },
                      {
                        "name": "Refunds",
                        "item": [
                          {
                            "name": "Create QRIS Refund",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var moment = require('moment');",
                                    "pm.variables.set(\"request_time\", moment().toISOString());",
                                    "",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                                    "",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "3544bcd6-bed9-4e9e-8480-9e772330513e"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "   ",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "  ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d3dc98b1-cbdd-4ae9-acd8-2f6fba53b885"
                                }
                              }
                            ],
                            "id": "31d2eb4d-d8d8-4d87-af1b-d0f3adf5ebaf",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund_qris}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "refunds"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-31d2eb4d-d8d8-4d87-af1b-d0f3adf5ebaf"
                          }
                        ],
                        "id": "87736288-c1af-48d4-b2a4-22149b6cc944",
                        "uid": "10462328-87736288-c1af-48d4-b2a4-22149b6cc944"
                      }
                    ],
                    "id": "8e0faee5-57cc-4267-905b-66f3eb0b1e3f",
                    "uid": "10462328-8e0faee5-57cc-4267-905b-66f3eb0b1e3f"
                  },
                  {
                    "name": "PANINVA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create PANINVA payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b144b980-f91f-40d1-97f2-badcd4729f81"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "49373518-7198-4d3d-9612-158906bfaa15"
                                }
                              }
                            ],
                            "id": "ecb9c3c7-0b70-4ba4-92de-fc71c9b23746",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PANINVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ecb9c3c7-0b70-4ba4-92de-fc71c9b23746"
                          }
                        ],
                        "id": "967252a2-0120-45b5-94f0-1e8964512686",
                        "uid": "10462328-967252a2-0120-45b5-94f0-1e8964512686"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create PANINVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "74e5fe1d-d86f-469f-b8a5-cb5b25bbc651"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7ecf2c2d-fcbc-4d10-a349-09c423f91b72"
                                }
                              }
                            ],
                            "id": "c256b045-8689-4919-9361-85f434e9fe0d",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PANINVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-c256b045-8689-4919-9361-85f434e9fe0d"
                          }
                        ],
                        "id": "250e075f-0955-4f22-9e58-ea3ab7659a43",
                        "uid": "10462328-250e075f-0955-4f22-9e58-ea3ab7659a43"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create PANINVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "32b09825-b40b-4d8a-94e2-2d875547a40b"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "dc63d1a9-7f92-4775-9309-8ae1d475c647"
                                }
                              }
                            ],
                            "id": "39dbb8db-cf54-4061-b0a5-9e37a259a2f0",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PANINVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-39dbb8db-cf54-4061-b0a5-9e37a259a2f0"
                          }
                        ],
                        "id": "2afc371d-4173-4c40-9413-44a3210d2570",
                        "uid": "10462328-2afc371d-4173-4c40-9413-44a3210d2570"
                      }
                    ],
                    "id": "95bacf8e-425d-4c4c-a99a-1093ba5b6bee",
                    "uid": "10462328-95bacf8e-425d-4c4c-a99a-1093ba5b6bee"
                  },
                  {
                    "name": "DANAWALLET",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create danawallet payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a0cb6daa-a7cd-4bcd-af04-68899b8c780e"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "3a97506a-bcaf-4810-92d0-953faf3a93c5"
                                }
                              }
                            ],
                            "id": "e6f0f36c-e074-44e3-b4d3-df5bf16dfd07",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"danawallet\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-e6f0f36c-e074-44e3-b4d3-df5bf16dfd07"
                          }
                        ],
                        "id": "698b2ce7-fee7-437d-bd03-2f35646e1695",
                        "uid": "10462328-698b2ce7-fee7-437d-bd03-2f35646e1695"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create danawallet payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2946be44-60f2-4f4f-98c0-cb7f51a71277"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b68494ed-a86a-40a1-b49d-2d8e9c9bf36c"
                                }
                              }
                            ],
                            "id": "47c96fb1-2e0a-4498-baee-bc05e116b5ef",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"danawallet\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-47c96fb1-2e0a-4498-baee-bc05e116b5ef"
                          }
                        ],
                        "id": "bb8de235-bc8a-4f9a-b462-b31c9814ea83",
                        "uid": "10462328-bb8de235-bc8a-4f9a-b462-b31c9814ea83"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create danawallet payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "54de0fe8-2b5d-4b00-a555-8f727faff7d1"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ec1c6ca3-ba6c-4f3b-bd11-d5885bb4e82a"
                                }
                              }
                            ],
                            "id": "dfea9b43-4654-451f-84bd-455128725c7c",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"danawallet\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-dfea9b43-4654-451f-84bd-455128725c7c"
                          }
                        ],
                        "id": "04315e6b-db81-4929-843a-4d2461b86f00",
                        "uid": "10462328-04315e6b-db81-4929-843a-4d2461b86f00"
                      }
                    ],
                    "id": "f35289a7-c3c7-4af6-a003-ae36a5e16c97",
                    "uid": "10462328-f35289a7-c3c7-4af6-a003-ae36a5e16c97"
                  },
                  {
                    "name": "BTPN",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BTPNVA payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "88b6d929-4ece-491e-90c5-982e83ae7364"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a1b8877a-4b6e-44da-89f1-e7c17c156a49"
                                }
                              }
                            ],
                            "id": "199a98b1-c070-42be-8717-573264745137",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BTPNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-199a98b1-c070-42be-8717-573264745137"
                          }
                        ],
                        "id": "51b54f52-ac11-402c-ba98-fea2770340b0",
                        "uid": "10462328-51b54f52-ac11-402c-ba98-fea2770340b0"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BTPNVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "35d945aa-a1d8-4e5b-920b-017cd9da3f93"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b82935e1-7bf7-4f34-82c0-f05f893ca5a3"
                                }
                              }
                            ],
                            "id": "6569fcec-6ba3-49d1-b552-d5f846425404",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BTPNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-6569fcec-6ba3-49d1-b552-d5f846425404"
                          }
                        ],
                        "id": "795172e6-9841-4946-9b35-12ce312c07e3",
                        "uid": "10462328-795172e6-9841-4946-9b35-12ce312c07e3"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BTPNVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "fde25990-7e77-42ae-b121-114396792334"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "de28af8a-c69c-46ab-ac11-c79b5118bdd6"
                                }
                              }
                            ],
                            "id": "a626df3a-d79c-4689-842b-21de52931168",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BTPNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-a626df3a-d79c-4689-842b-21de52931168"
                          }
                        ],
                        "id": "ca293f8c-fd6f-4759-be4f-fc6dd50c22c3",
                        "uid": "10462328-ca293f8c-fd6f-4759-be4f-fc6dd50c22c3"
                      }
                    ],
                    "id": "88e54d03-d365-42a4-bff8-7a17ff56412b",
                    "uid": "10462328-88e54d03-d365-42a4-bff8-7a17ff56412b"
                  },
                  {
                    "name": "BCA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BCAVA payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ebd69255-1899-47de-9935-4ac458b55fa2"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "3fac62b1-2034-4e59-b4e9-74c5d639442d"
                                }
                              }
                            ],
                            "id": "79f676a3-693f-456b-835c-0f5f9477a520",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BCAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-79f676a3-693f-456b-835c-0f5f9477a520"
                          }
                        ],
                        "id": "8bcb48c4-41bc-40ea-a87c-99aa691aea4e",
                        "uid": "10462328-8bcb48c4-41bc-40ea-a87c-99aa691aea4e"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BCAVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7a97e934-b527-43cc-ac35-56239417b4aa"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "bb15f197-d997-43e2-8482-0649869851ba"
                                }
                              }
                            ],
                            "id": "0295ca4e-99be-49c3-ac2a-b197e6bc8ed0",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BCAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-0295ca4e-99be-49c3-ac2a-b197e6bc8ed0"
                          }
                        ],
                        "id": "95c96504-3bba-4d12-9d59-f57267ea430d",
                        "uid": "10462328-95c96504-3bba-4d12-9d59-f57267ea430d"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BCAVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5a8d8fba-8215-452b-a70c-9444bd0f2ab2"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "bd3fbf38-ab24-4fb8-ae56-054c6f146f73"
                                }
                              }
                            ],
                            "id": "cb959410-2e2b-46ca-aad9-9331e14dbe65",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BCAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-cb959410-2e2b-46ca-aad9-9331e14dbe65"
                          }
                        ],
                        "id": "0d6f3349-0a6d-4e07-b4e8-1e81fc29e75e",
                        "uid": "10462328-0d6f3349-0a6d-4e07-b4e8-1e81fc29e75e"
                      }
                    ],
                    "id": "c9bcea57-02c3-4955-8ec7-2195320c8c05",
                    "uid": "10462328-c9bcea57-02c3-4955-8ec7-2195320c8c05"
                  }
                ],
                "id": "4d412d06-c78e-46a1-a341-e2d2392a17af",
                "uid": "10462328-4d412d06-c78e-46a1-a341-e2d2392a17af"
              },
              {
                "name": "Singapore",
                "item": [
                  {
                    "name": "Shopeepay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f694431f-2180-4e4d-9333-f6c44eeca438"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "70ece0f5-bbb4-4286-95aa-b2dbcfaaf7c9"
                                }
                              }
                            ],
                            "id": "4de7deda-11fa-47cd-af5c-2d032ba9d919",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"SGD\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"651234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-4de7deda-11fa-47cd-af5c-2d032ba9d919"
                          }
                        ],
                        "id": "8bc816bf-fa9f-4d51-a424-d4f4654786c3",
                        "uid": "10462328-8bc816bf-fa9f-4d51-a424-d4f4654786c3"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8cfd8613-5545-43b5-9b8a-e3bce1369741"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0609fb8a-37ac-472d-a2cd-0b655f0ddd66"
                                }
                              }
                            ],
                            "id": "8b8fcc29-adfc-485a-a47c-b3f4ec087b04",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"SGD\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"651234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-8b8fcc29-adfc-485a-a47c-b3f4ec087b04"
                          }
                        ],
                        "id": "2767aebb-8dda-4dc2-b67f-b42ccf434dc9",
                        "uid": "10462328-2767aebb-8dda-4dc2-b67f-b42ccf434dc9"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create Shopeepay payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2f1c2b4d-3ded-4f58-8315-891adad0b336"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "46492370-8d7f-45fb-8548-fcded286e22e"
                                }
                              }
                            ],
                            "id": "e80f1e54-4521-4226-9acd-e184bb909fe5",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"SGD\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"651234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-e80f1e54-4521-4226-9acd-e184bb909fe5"
                          }
                        ],
                        "id": "9825d3af-16eb-4cc2-9a89-fc7b18b77f0e",
                        "uid": "10462328-9825d3af-16eb-4cc2-9a89-fc7b18b77f0e"
                      }
                    ],
                    "id": "c2a49cea-5af4-44f9-bbd3-2f7f7f6b4254",
                    "uid": "10462328-c2a49cea-5af4-44f9-bbd3-2f7f7f6b4254"
                  }
                ],
                "id": "5037188a-712f-40fd-bcf5-737a2bb6ce41",
                "uid": "10462328-5037188a-712f-40fd-bcf5-737a2bb6ce41"
              }
            ],
            "id": "2ba8db99-beaf-4f36-a1ce-eb8771b84670",
            "uid": "10462328-2ba8db99-beaf-4f36-a1ce-eb8771b84670"
          },
          {
            "name": "Latin America",
            "item": [
              {
                "name": "Convenience Store",
                "item": [
                  {
                    "name": "Colombia",
                    "item": [
                      {
                        "name": "Acyvalores",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create Acyvalores payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "045b8b7f-0dc2-4f1a-80ba-71a76e5b1315"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "a4b7df82-142e-46b1-891c-ccc1db1d5132"
                                    }
                                  }
                                ],
                                "id": "8e78ecf0-1b38-4378-b865-bbfef3d98078",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"acyvalores\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-8e78ecf0-1b38-4378-b865-bbfef3d98078"
                              }
                            ],
                            "id": "c6e052b3-994a-4dae-853d-cc707c999f58",
                            "uid": "10462328-c6e052b3-994a-4dae-853d-cc707c999f58"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create Acyvalores payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "9d9e105a-898b-4a84-bb90-43e862a913b2"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "9989649c-c52a-43fb-9c7d-ff42a6771588"
                                    }
                                  }
                                ],
                                "id": "d9de4f9c-1305-4771-aaf6-349844b24f2f",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"acyvalores\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-d9de4f9c-1305-4771-aaf6-349844b24f2f"
                              }
                            ],
                            "id": "c33d9412-06b5-4c1c-bd1a-356b1ecd445a",
                            "uid": "10462328-c33d9412-06b5-4c1c-bd1a-356b1ecd445a"
                          }
                        ],
                        "id": "f4335a12-e9d8-4072-afc6-96245f537d6e",
                        "uid": "10462328-f4335a12-e9d8-4072-afc6-96245f537d6e"
                      },
                      {
                        "name": "Daviplata",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create daviplata payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "de31c53b-e63e-4ac8-8388-970c68e77164"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "f2319fb1-e863-4c02-bd67-7da1415b28eb"
                                    }
                                  }
                                ],
                                "id": "6fe96760-4d92-44fe-900f-c47aac215cd3",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"daviplata\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-6fe96760-4d92-44fe-900f-c47aac215cd3"
                              }
                            ],
                            "id": "a1a71a40-3669-4861-8f61-df8f2059669a",
                            "uid": "10462328-a1a71a40-3669-4861-8f61-df8f2059669a"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create daviplata payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "c033bb75-021d-46b4-b57e-1a20e3d5ca71"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "a183e623-2582-4070-99bf-37d540212748"
                                    }
                                  }
                                ],
                                "id": "bf1aef0a-2a8f-4cc2-9b47-bdaacd917287",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"daviplata\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-bf1aef0a-2a8f-4cc2-9b47-bdaacd917287"
                              }
                            ],
                            "id": "df09835f-0d0d-4a43-8f4d-97f894837360",
                            "uid": "10462328-df09835f-0d0d-4a43-8f4d-97f894837360"
                          }
                        ],
                        "id": "fbe03a47-5472-473f-8987-10e669cc11dd",
                        "uid": "10462328-fbe03a47-5472-473f-8987-10e669cc11dd"
                      },
                      {
                        "name": "Fullcarga",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create fullcarga payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "2267cf57-cbcd-4b65-9af5-82193308c131"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "5913fedd-1a6a-44d2-9821-dc113adc3994"
                                    }
                                  }
                                ],
                                "id": "b5ee25ec-6118-4d51-ab92-6403b01d53a4",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"fullcarga\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-b5ee25ec-6118-4d51-ab92-6403b01d53a4"
                              }
                            ],
                            "id": "dce9a12d-36c8-44ab-9cab-535824f6efdf",
                            "uid": "10462328-dce9a12d-36c8-44ab-9cab-535824f6efdf"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create fullcarga payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "92232549-fd4e-414d-a51c-d4d9c453fa67"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "875f57f7-11e6-4aeb-b0cf-3fcf4d690262"
                                    }
                                  }
                                ],
                                "id": "e97b414e-ab4e-44d4-924f-223a2f0d1e70",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"fullcarga\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-e97b414e-ab4e-44d4-924f-223a2f0d1e70"
                              }
                            ],
                            "id": "89cdb9c0-3d09-44d3-b9b5-68683267d9b2",
                            "uid": "10462328-89cdb9c0-3d09-44d3-b9b5-68683267d9b2"
                          }
                        ],
                        "id": "b3d1900a-12f6-430c-9557-2d1a1e518e65",
                        "uid": "10462328-b3d1900a-12f6-430c-9557-2d1a1e518e65"
                      },
                      {
                        "name": "Refacil",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create refacil payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "5def6fa7-2f4c-4696-b1e4-3ba521201ea0"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "b0a796ce-9c60-4e29-9433-84bec2267018"
                                    }
                                  }
                                ],
                                "id": "3a35aade-e87a-4c14-9e8e-de5eb5221e10",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"fullcarga\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-3a35aade-e87a-4c14-9e8e-de5eb5221e10"
                              }
                            ],
                            "id": "91bfd26b-0157-4cba-80db-66ff3289062c",
                            "uid": "10462328-91bfd26b-0157-4cba-80db-66ff3289062c"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create refacil  payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "18856fb7-0c5a-41a5-9ada-7416fabf18f2"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "d1e30851-4b17-4f82-9b40-99e4449dc2e0"
                                    }
                                  }
                                ],
                                "id": "8793e828-abb0-4a58-a7a6-fefefaf57174",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"refacil\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-8793e828-abb0-4a58-a7a6-fefefaf57174"
                              }
                            ],
                            "id": "ed2562f0-35c0-4fed-b3bc-3368407f5770",
                            "uid": "10462328-ed2562f0-35c0-4fed-b3bc-3368407f5770"
                          }
                        ],
                        "id": "ded8a47b-a44f-4968-a3a9-fdde35a74ba1",
                        "uid": "10462328-ded8a47b-a44f-4968-a3a9-fdde35a74ba1"
                      }
                    ],
                    "id": "a3000371-10ac-4469-b951-8bee1f12f180",
                    "uid": "10462328-a3000371-10ac-4469-b951-8bee1f12f180"
                  },
                  {
                    "name": "Costa Rica",
                    "item": [
                      {
                        "name": "Paysera",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create payser payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "8f34c503-8c7f-4a63-b32c-c0f3686c0f0b"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "ac22e1eb-b6e7-4bc9-a437-ead2c9d48f9e"
                                    }
                                  }
                                ],
                                "id": "b040df68-fc4d-494f-b089-385e92c40e61",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payser\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-b040df68-fc4d-494f-b089-385e92c40e61"
                              }
                            ],
                            "id": "600a9241-bd80-4f65-bccf-23699c75fb02",
                            "uid": "10462328-600a9241-bd80-4f65-bccf-23699c75fb02"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create payser payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "6d5e4f93-cb3a-420c-919a-53105cd2efc0"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "3f7b18fd-0301-49be-a093-21681daee07f"
                                    }
                                  }
                                ],
                                "id": "f4a15f68-a226-435d-8bb3-c4110be904ac",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payser\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-f4a15f68-a226-435d-8bb3-c4110be904ac"
                              }
                            ],
                            "id": "61cb1725-aec0-4960-b77a-79004dc92f21",
                            "uid": "10462328-61cb1725-aec0-4960-b77a-79004dc92f21"
                          }
                        ],
                        "id": "0adfa4a8-a4e1-4180-ac47-ee9c56d09812",
                        "uid": "10462328-0adfa4a8-a4e1-4180-ac47-ee9c56d09812"
                      },
                      {
                        "name": "Puntoshey",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create PUNTOSHEY payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "91b43433-008f-43f4-b3d7-9819f49cf844"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "93ce0607-6366-4b57-94ca-082149312048"
                                    }
                                  }
                                ],
                                "id": "cc995314-c098-4d8f-8867-a17ee4637fd7",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PUNTOSHEY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-cc995314-c098-4d8f-8867-a17ee4637fd7"
                              }
                            ],
                            "id": "dafaa4e5-8139-4c3c-86f5-9a0331cee6ba",
                            "uid": "10462328-dafaa4e5-8139-4c3c-86f5-9a0331cee6ba"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create PUNTOSHEY payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "b857910f-13ff-4324-8375-39b3cdf1baf5"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "9cf5183b-d827-49a2-94e2-1813f8a36e9b"
                                    }
                                  }
                                ],
                                "id": "f2e90516-f590-4b26-a417-80b528e3e9a7",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PUNTOSHEY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-f2e90516-f590-4b26-a417-80b528e3e9a7"
                              }
                            ],
                            "id": "8fcd3f2c-9f40-48fd-9c83-4140344e4c1b",
                            "uid": "10462328-8fcd3f2c-9f40-48fd-9c83-4140344e4c1b"
                          }
                        ],
                        "id": "6f003b98-307d-4a78-a841-12819519d14c",
                        "uid": "10462328-6f003b98-307d-4a78-a841-12819519d14c"
                      }
                    ],
                    "id": "dbbc3c4e-a4e0-4632-b34f-233452f2777a",
                    "uid": "10462328-dbbc3c4e-a4e0-4632-b34f-233452f2777a"
                  },
                  {
                    "name": "Ecuador",
                    "item": [
                      {
                        "name": "Farmacias 911",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create farm911 payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "456cb475-2bad-4c80-b82c-e8c9a98254c7"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "98f8e0e2-7791-40ee-81ad-78dba1f596bb"
                                    }
                                  }
                                ],
                                "id": "a6f375c4-618a-430c-956d-baceae79d8f5",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farm911\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-a6f375c4-618a-430c-956d-baceae79d8f5"
                              }
                            ],
                            "id": "7ca6fbc3-7059-4fa2-a2bf-767ef08fc253",
                            "uid": "10462328-7ca6fbc3-7059-4fa2-a2bf-767ef08fc253"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create farm911 payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "2f9e2986-2016-471a-9830-80b5e7ffcbaf"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "79054caf-792e-4976-99ae-5d6344a73a8d"
                                    }
                                  }
                                ],
                                "id": "b179998c-dd98-48bc-a009-bd746d0cf687",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farm911\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-b179998c-dd98-48bc-a009-bd746d0cf687"
                              }
                            ],
                            "id": "fe9a6971-5811-40a3-9ccf-ce95f3a7ebbd",
                            "uid": "10462328-fe9a6971-5811-40a3-9ccf-ce95f3a7ebbd"
                          }
                        ],
                        "id": "46ae9b61-2442-436b-b05b-e1eaadd2ee2e",
                        "uid": "10462328-46ae9b61-2442-436b-b05b-e1eaadd2ee2e"
                      },
                      {
                        "name": "Farmacias Economicas",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create farmeconomicas payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "1bfda5e0-d5f4-4e49-a718-637c70fcf108"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "2d7f81e8-d78a-4020-ae61-9c6c83667046"
                                    }
                                  }
                                ],
                                "id": "aac705cc-a05f-47ae-ac89-b9be75b832a2",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmeconomicas\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-aac705cc-a05f-47ae-ac89-b9be75b832a2"
                              }
                            ],
                            "id": "15d69094-c22d-42ce-91bc-9dec52144214",
                            "uid": "10462328-15d69094-c22d-42ce-91bc-9dec52144214"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create farmeconomicaspayment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "10561ce2-0e7c-4281-8dd7-a8a354a30d03"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "9e304983-c3bc-4594-bd80-19dae4c638db"
                                    }
                                  }
                                ],
                                "id": "824d9f58-4670-4dce-9c4f-ffcc9ce6cad0",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmeconomicas\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-824d9f58-4670-4dce-9c4f-ffcc9ce6cad0"
                              }
                            ],
                            "id": "efff2cc5-0de9-4a35-ad54-0b013cbd75e0",
                            "uid": "10462328-efff2cc5-0de9-4a35-ad54-0b013cbd75e0"
                          }
                        ],
                        "id": "3b2caebf-eb35-4284-a243-974b7ef4a444",
                        "uid": "10462328-3b2caebf-eb35-4284-a243-974b7ef4a444"
                      },
                      {
                        "name": "Farmacias Medicity",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create farmmedicity payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "e3a5b02f-6c21-4af8-86cb-46c71c6fb5cd"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "1a4b60e8-cc39-4ef7-9057-7d5ba4d1eabf"
                                    }
                                  }
                                ],
                                "id": "7f6aae6f-abe9-42d0-a8a5-e9b0a924d215",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmmedicity\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-7f6aae6f-abe9-42d0-a8a5-e9b0a924d215"
                              }
                            ],
                            "id": "30bc9d36-f4ac-426e-83a9-f60512acab4e",
                            "uid": "10462328-30bc9d36-f4ac-426e-83a9-f60512acab4e"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create farmmedicity (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "6c449901-027e-4543-9cf7-2e9e862371cc"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "553cb3da-350f-491c-8aab-441cd8f49fcc"
                                    }
                                  }
                                ],
                                "id": "a1942f03-9f3c-4c09-b8d9-dfe6795da842",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmmedicity\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-a1942f03-9f3c-4c09-b8d9-dfe6795da842"
                              }
                            ],
                            "id": "59a93ccf-37a3-4f4f-9169-01d97ced827f",
                            "uid": "10462328-59a93ccf-37a3-4f4f-9169-01d97ced827f"
                          }
                        ],
                        "id": "48a8d67e-5b45-4e63-9fab-0f2df77ea01c",
                        "uid": "10462328-48a8d67e-5b45-4e63-9fab-0f2df77ea01c"
                      },
                      {
                        "name": "Rianxeira",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create rianxeira payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "f4b768e8-1bb9-4ddc-8a78-ea9fdcdc6581"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "aa2bd343-4696-467b-b1e0-e815dd2dba94"
                                    }
                                  }
                                ],
                                "id": "5b6cdccd-5a27-4a6e-bc88-5886310f78c3",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"rianxeira\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-5b6cdccd-5a27-4a6e-bc88-5886310f78c3"
                              }
                            ],
                            "id": "2df8695e-9411-4817-a8c3-9788ff61d6a6",
                            "uid": "10462328-2df8695e-9411-4817-a8c3-9788ff61d6a6"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create rianxeira (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "793e5e1e-588b-472b-b471-9c3648eef34f"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "dc8846d5-485b-4ad9-b2b9-2200db668001"
                                    }
                                  }
                                ],
                                "id": "4ff0d110-b1f8-4693-8aa3-ff4323f70b31",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"rianxeira\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-4ff0d110-b1f8-4693-8aa3-ff4323f70b31"
                              }
                            ],
                            "id": "9b8f3dd4-2e47-413e-9361-3f9ec5ff3c51",
                            "uid": "10462328-9b8f3dd4-2e47-413e-9361-3f9ec5ff3c51"
                          }
                        ],
                        "id": "b0a7a24a-f2b9-4042-9943-580d74840694",
                        "uid": "10462328-b0a7a24a-f2b9-4042-9943-580d74840694"
                      },
                      {
                        "name": "Western Union",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create westernunion payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "10f1f715-bc21-433b-9cc4-bb253514338b"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "3365494b-70ce-4571-8273-8b2aa5a8f643"
                                    }
                                  }
                                ],
                                "id": "e0a33782-cf4f-43d5-947b-15460dae6f4b",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"westernunion\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-e0a33782-cf4f-43d5-947b-15460dae6f4b"
                              }
                            ],
                            "id": "f7b7f49d-0095-4937-b097-4697ecded9a6",
                            "uid": "10462328-f7b7f49d-0095-4937-b097-4697ecded9a6"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create westernunion (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "4c865fe5-24b0-42d8-8e82-10184f2af749"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "540b49ee-c9fb-43e0-ba3c-ad9e420bd073"
                                    }
                                  }
                                ],
                                "id": "1362b14d-acac-4370-a43d-cb452a128c79",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"westernunion\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-1362b14d-acac-4370-a43d-cb452a128c79"
                              }
                            ],
                            "id": "f7d2ed85-7a8d-4ce5-ba33-cbcda5220b00",
                            "uid": "10462328-f7d2ed85-7a8d-4ce5-ba33-cbcda5220b00"
                          }
                        ],
                        "id": "1ef6da6d-728c-4373-afaf-b2f96101e5f9",
                        "uid": "10462328-1ef6da6d-728c-4373-afaf-b2f96101e5f9"
                      }
                    ],
                    "id": "5b49e8b3-bd9c-45b9-a2b8-ba35c4f38069",
                    "uid": "10462328-5b49e8b3-bd9c-45b9-a2b8-ba35c4f38069"
                  },
                  {
                    "name": "Guatemala",
                    "item": [
                      {
                        "name": "Bam",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create bam payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "7ef493eb-1264-428f-a031-bca4d05bf9cc"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "0af9fd9a-be3c-4cad-a07c-3c6d47cae2bb"
                                    }
                                  }
                                ],
                                "id": "5cac8c2e-6d0e-4f33-9832-ea91062f7c8f",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"bam\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"GTQ\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-5cac8c2e-6d0e-4f33-9832-ea91062f7c8f"
                              }
                            ],
                            "id": "c21864de-8ae4-4671-8dd3-9d84eae747a7",
                            "uid": "10462328-c21864de-8ae4-4671-8dd3-9d84eae747a7"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create bam (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "cceb9d92-88d7-4063-94f0-b9511ef40226"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "7694d185-b91e-4742-bb22-bdcdc1e72616"
                                    }
                                  }
                                ],
                                "id": "1f333f31-a3e9-406c-9dbe-ed40c39c7729",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"bam\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"GTQ\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-1f333f31-a3e9-406c-9dbe-ed40c39c7729"
                              }
                            ],
                            "id": "e596c200-120e-461c-8767-4338df1558a1",
                            "uid": "10462328-e596c200-120e-461c-8767-4338df1558a1"
                          }
                        ],
                        "id": "ceb4e474-d5e4-41fd-a98c-b4b97e8324b7",
                        "uid": "10462328-ceb4e474-d5e4-41fd-a98c-b4b97e8324b7"
                      },
                      {
                        "name": "Banco Continental",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "f876b934-c9e6-4ed1-ba2c-5e756e45d286",
                            "uid": "10462328-f876b934-c9e6-4ed1-ba2c-5e756e45d286"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "314dfa08-c6f3-4c80-9c0f-c8e882375233",
                            "uid": "10462328-314dfa08-c6f3-4c80-9c0f-c8e882375233"
                          }
                        ],
                        "id": "753f11d9-5d05-477b-8580-c01611ffdb36",
                        "uid": "10462328-753f11d9-5d05-477b-8580-c01611ffdb36"
                      }
                    ],
                    "id": "699cef79-f31f-4b56-b6ba-81be2f91be12",
                    "uid": "10462328-699cef79-f31f-4b56-b6ba-81be2f91be12"
                  },
                  {
                    "name": "Mexico",
                    "item": [
                      {
                        "name": "Bancomer",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create BANCOMER payment (Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "9709a1a9-261d-4894-8f9b-ac7bbf52d889"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "b9f3c488-8fcb-42cc-a099-3fa434b736b4"
                                    }
                                  }
                                ],
                                "id": "2a3dc705-c749-4391-8100-3b3a3ba7a8ec",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCOMER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-2a3dc705-c749-4391-8100-3b3a3ba7a8ec"
                              }
                            ],
                            "id": "fbc7c787-bed2-4036-b342-19b4495d64ef",
                            "uid": "10462328-fbc7c787-bed2-4036-b342-19b4495d64ef"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create BANCOMER payment (payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "82055161-0707-4228-a612-56fa87068e5e"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "2145ef1f-f959-434e-a0fd-047ae39112ea"
                                    }
                                  }
                                ],
                                "id": "232df9e8-54d9-4fae-bcef-a9535a4a07d8",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCOMER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-232df9e8-54d9-4fae-bcef-a9535a4a07d8"
                              }
                            ],
                            "id": "2178dad8-f9ce-41ce-bafd-95f130356992",
                            "uid": "10462328-2178dad8-f9ce-41ce-bafd-95f130356992"
                          }
                        ],
                        "id": "0057bb4a-d796-4427-acdc-6d5ca31bae75",
                        "uid": "10462328-0057bb4a-d796-4427-acdc-6d5ca31bae75"
                      },
                      {
                        "name": "Banorte",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "1a367522-0a5f-4ed0-b95b-0ac14c1ee54e",
                            "uid": "10462328-1a367522-0a5f-4ed0-b95b-0ac14c1ee54e"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "233ca4ea-f55e-4163-ae93-58c5b385d462",
                            "uid": "10462328-233ca4ea-f55e-4163-ae93-58c5b385d462"
                          }
                        ],
                        "id": "9fe5d4a1-21fa-4656-8c60-a6abb972bb21",
                        "uid": "10462328-9fe5d4a1-21fa-4656-8c60-a6abb972bb21"
                      },
                      {
                        "name": "Bodega Aurrera",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "da9b6b74-ee52-4f5b-9e8d-b5673ae80322",
                            "uid": "10462328-da9b6b74-ee52-4f5b-9e8d-b5673ae80322"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "0a75548c-1bce-4810-9820-be9575e95c0b",
                            "uid": "10462328-0a75548c-1bce-4810-9820-be9575e95c0b"
                          }
                        ],
                        "id": "2f4f2a67-20d5-497b-8539-46860e6ed43e",
                        "uid": "10462328-2f4f2a67-20d5-497b-8539-46860e6ed43e"
                      },
                      {
                        "name": "Calimax",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "d2904a37-0b43-482b-8f10-e22857b16426",
                            "uid": "10462328-d2904a37-0b43-482b-8f10-e22857b16426"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "1bf1bc87-f265-40ab-a7f4-bcba38ee30c2",
                            "uid": "10462328-1bf1bc87-f265-40ab-a7f4-bcba38ee30c2"
                          }
                        ],
                        "id": "bf024234-e067-4ecd-af91-ab7ff88602ce",
                        "uid": "10462328-bf024234-e067-4ecd-af91-ab7ff88602ce"
                      },
                      {
                        "name": "Delahorro",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create delahorro payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "8ce3b1e5-8197-4cbb-b026-29ccf3ed4725"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "4f2960db-62f3-4a27-8e0d-8c0a78eb2867"
                                    }
                                  }
                                ],
                                "id": "b7aece09-17e9-477c-ae60-8c56fbb6f698",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"delahorro\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-b7aece09-17e9-477c-ae60-8c56fbb6f698"
                              }
                            ],
                            "id": "478101fd-afe7-484a-b465-4b8cba9132d0",
                            "uid": "10462328-478101fd-afe7-484a-b465-4b8cba9132d0"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create Delahorro payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "ecbf8a4e-df45-40f4-b91e-11e32cf65bf3"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "28cbb4cb-4992-495f-92b4-0488610d4361"
                                    }
                                  }
                                ],
                                "id": "b1878760-2134-442d-be28-e8d06b25ec06",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"delahorro\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-b1878760-2134-442d-be28-e8d06b25ec06"
                              }
                            ],
                            "id": "952b5c8f-d5ca-4e57-99f4-9f2baf276988",
                            "uid": "10462328-952b5c8f-d5ca-4e57-99f4-9f2baf276988"
                          }
                        ],
                        "id": "8708e9bb-b47b-4234-92ad-fd81e06d1239",
                        "uid": "10462328-8708e9bb-b47b-4234-92ad-fd81e06d1239"
                      },
                      {
                        "name": "7 Eleven",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create 7ELEVEN payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "9384d0b8-7862-4a9f-a128-e726a0b1af25"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "6faeed2f-008f-4bb1-a5c1-7fd3245d9d84"
                                    }
                                  }
                                ],
                                "id": "584b7f68-0b2c-4619-9e4d-8e292efa391f",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"7ELEVEN\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-584b7f68-0b2c-4619-9e4d-8e292efa391f"
                              }
                            ],
                            "id": "433200a2-b0cc-4c87-a1b3-a4da966a538c",
                            "uid": "10462328-433200a2-b0cc-4c87-a1b3-a4da966a538c"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create 7ELEVEN payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "06a64169-57e5-435f-b452-d03fd65306ae"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "1b8c8d7d-c56a-4990-bba8-99e6ba39edf1"
                                    }
                                  }
                                ],
                                "id": "dd785427-0822-4ead-8120-b033ca66de51",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"7ELEVEN\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-dd785427-0822-4ead-8120-b033ca66de51"
                              }
                            ],
                            "id": "f956dd1a-29e9-4817-ad17-767cf9ce68f9",
                            "uid": "10462328-f956dd1a-29e9-4817-ad17-767cf9ce68f9"
                          }
                        ],
                        "id": "6e934d97-39bf-4a2f-87d7-42f269ddf864",
                        "uid": "10462328-6e934d97-39bf-4a2f-87d7-42f269ddf864"
                      }
                    ],
                    "id": "963b195f-0e35-4e52-9f0c-cd766c4b7373",
                    "uid": "10462328-963b195f-0e35-4e52-9f0c-cd766c4b7373"
                  },
                  {
                    "name": "Panama",
                    "item": [],
                    "id": "503e5e2c-bd9e-4196-9a7a-66cc35c68670",
                    "uid": "10462328-503e5e2c-bd9e-4196-9a7a-66cc35c68670"
                  },
                  {
                    "name": "Peru",
                    "item": [],
                    "id": "1d3b9622-b2bf-4b75-b152-f6af4029e295",
                    "uid": "10462328-1d3b9622-b2bf-4b75-b152-f6af4029e295"
                  }
                ],
                "id": "cb8cfc9f-49fc-4a14-8f30-9223e2bddb21",
                "uid": "10462328-cb8cfc9f-49fc-4a14-8f30-9223e2bddb21"
              },
              {
                "name": "Boleto",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create BOLETO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "45f34a34-9545-4c32-a048-1668cb16a565"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4988a38c-6406-4936-bf73-0f815384a019"
                            }
                          }
                        ],
                        "id": "0f370d66-57f0-4cf1-9459-1fcb9640759a",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\",\n        \"shipping_address\": {\n            \"zip\": \"12345678\"\n        }\n    },\n    \"payment_method\": \"BOLETO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-0f370d66-57f0-4cf1-9459-1fcb9640759a"
                      }
                    ],
                    "id": "a912de7f-c87a-462d-98f9-6f61a107f74c",
                    "uid": "10462328-a912de7f-c87a-462d-98f9-6f61a107f74c"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create BOLETO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1f8a870f-24c4-43ba-9186-f085208ffbce"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9aa0a245-9ba8-4152-afa9-0bd395b41197"
                            }
                          }
                        ],
                        "id": "b695b7c0-d9c4-4c62-afc7-d793f538fb24",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"BOLETO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b695b7c0-d9c4-4c62-afc7-d793f538fb24"
                      }
                    ],
                    "id": "cf430504-5ffb-4621-a2a6-650761f441cb",
                    "uid": "10462328-cf430504-5ffb-4621-a2a6-650761f441cb"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create BOLETO payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c6d60969-d8e5-4611-b242-b6c1cdb515a3"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "de561221-0d64-4de7-a2ae-2b254b2f0443"
                            }
                          }
                        ],
                        "id": "d7970d0d-2063-4b32-b202-08d042595bf6",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\",\n        \"shipping_address\": {\n            \"zip\": \"12345678\"\n        }\n    },\n    \"payment_method\": \"BOLETO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d7970d0d-2063-4b32-b202-08d042595bf6"
                      }
                    ],
                    "id": "5872a8da-2407-4c91-8521-6b814ae7ce3e",
                    "uid": "10462328-5872a8da-2407-4c91-8521-6b814ae7ce3e"
                  }
                ],
                "id": "c506ad82-db56-468d-82dd-b39d8c01250c",
                "uid": "10462328-c506ad82-db56-468d-82dd-b39d8c01250c"
              },
              {
                "name": "Efecty",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create EFECTY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "acb685bf-d7ac-4a05-aa12-9d5df3e61c89"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "79d4be47-9cc2-4a7f-a049-063a7927411f"
                            }
                          }
                        ],
                        "id": "315776fa-9d69-4f07-a4d0-37dfbad40b5e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",    \n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"EFECTY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-315776fa-9d69-4f07-a4d0-37dfbad40b5e"
                      }
                    ],
                    "id": "6e60ae62-b636-4dbc-8a2f-4ef8531ffafa",
                    "uid": "10462328-6e60ae62-b636-4dbc-8a2f-4ef8531ffafa"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create EFECTY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "745a65d5-ae81-486a-9131-6a260d4432ec"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c862822c-8fd9-4080-ba72-5239d9ec97a5"
                            }
                          }
                        ],
                        "id": "a92ad829-6312-49c3-938b-1695ddddd104",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",    \n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"EFECTY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a92ad829-6312-49c3-938b-1695ddddd104"
                      }
                    ],
                    "id": "89a97c3f-59e3-4b4d-a3ef-321aa3003a0d",
                    "uid": "10462328-89a97c3f-59e3-4b4d-a3ef-321aa3003a0d"
                  }
                ],
                "id": "85e1e220-a3a7-47fb-b7f2-0ee0c3b7c7ab",
                "uid": "10462328-85e1e220-a3a7-47fb-b7f2-0ee0c3b7c7ab"
              },
              {
                "name": "OXXO",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create OXXO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c57cd866-4867-4b0f-95db-eb1f93c3d15f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "     pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d8dd6550-8ead-4f01-92d9-a99ac7365270"
                            }
                          }
                        ],
                        "id": "98e856e9-d7cc-4aa6-ba4e-d5857737f1d5",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OXXO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-98e856e9-d7cc-4aa6-ba4e-d5857737f1d5"
                      }
                    ],
                    "id": "a3a7da44-784a-4cb3-aa4d-2e52082687bc",
                    "uid": "10462328-a3a7da44-784a-4cb3-aa4d-2e52082687bc"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create OXXO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "749bfd6e-268f-4238-a3f9-ee8638bb8ccd"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d3450f68-4109-44ce-bc4d-dd07527a4375"
                            }
                          }
                        ],
                        "id": "cd67cd99-2842-433d-a1ff-924a796cee83",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OXXO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-cd67cd99-2842-433d-a1ff-924a796cee83"
                      }
                    ],
                    "id": "91daff6d-94b1-4330-beb5-ebb337a0875d",
                    "uid": "10462328-91daff6d-94b1-4330-beb5-ebb337a0875d"
                  }
                ],
                "id": "edde6035-3c9e-451e-b510-868a7269dd91",
                "uid": "10462328-edde6035-3c9e-451e-b510-868a7269dd91"
              },
              {
                "name": "SPEI",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create SPEI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "012dcd0b-d54b-4653-bd72-befb2b1b79f5"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b4d6e1a4-342c-41bb-99aa-cf9c1707a8ff"
                            }
                          }
                        ],
                        "id": "014c5646-d2ff-47ca-82f6-5773becebc9f",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-014c5646-d2ff-47ca-82f6-5773becebc9f"
                      }
                    ],
                    "id": "0531c6b7-4c08-42cc-b5cf-31ef445341f8",
                    "uid": "10462328-0531c6b7-4c08-42cc-b5cf-31ef445341f8"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create SPEI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "59e1348d-5dd5-4eb7-a41f-e10ffc320181"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f2a503d6-fccc-4276-8993-d2f7ff8d1941"
                            }
                          }
                        ],
                        "id": "28706923-45fc-4b7c-9e75-f78679ca7c22",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-28706923-45fc-4b7c-9e75-f78679ca7c22"
                      }
                    ],
                    "id": "868e61e0-a415-466b-b9d7-25c9136a72b5",
                    "uid": "10462328-868e61e0-a415-466b-b9d7-25c9136a72b5"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create SPEI payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ac4b422a-211c-4c90-b445-a4f4a4ed20b2"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "531028ea-a58f-4db6-a066-ecd2472f08e6"
                            }
                          }
                        ],
                        "id": "449b2ec9-e22f-42cc-b7a2-9b435d88d06c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-449b2ec9-e22f-42cc-b7a2-9b435d88d06c"
                      }
                    ],
                    "id": "8d169c3a-e69d-43c2-9449-347ceb6c1625",
                    "uid": "10462328-8d169c3a-e69d-43c2-9449-347ceb6c1625"
                  }
                ],
                "id": "448366e0-ef10-4f00-8067-0064fd0a2635",
                "uid": "10462328-448366e0-ef10-4f00-8067-0064fd0a2635"
              },
              {
                "name": "Davivienda",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create davivienda payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "391d22a3-084e-48f0-9085-da71e3d505a3"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b1324600-2847-48b1-abb0-131ef640adee"
                            }
                          }
                        ],
                        "id": "25f933fa-26ab-4610-95cd-aa54c8ce9f19",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"davivienda\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"123456789\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-25f933fa-26ab-4610-95cd-aa54c8ce9f19"
                      }
                    ],
                    "id": "18742570-6174-45ff-ac12-0103dad9f5c9",
                    "uid": "10462328-18742570-6174-45ff-ac12-0103dad9f5c9"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create davivienda payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "92dba14c-419d-4fc0-b22a-c8f7e58f6981"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9509a37c-b439-456e-a536-dcba5a03d7c7"
                            }
                          }
                        ],
                        "id": "d41b176b-5dba-4173-b275-f5ed03fd494d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"davivienda\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"123456789\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d41b176b-5dba-4173-b275-f5ed03fd494d"
                      }
                    ],
                    "id": "fff164cb-c336-4856-a90d-2f99d3dd9494",
                    "uid": "10462328-fff164cb-c336-4856-a90d-2f99d3dd9494"
                  }
                ],
                "id": "989c5cfd-a34a-46c1-80af-94ba27b5204e",
                "uid": "10462328-989c5cfd-a34a-46c1-80af-94ba27b5204e"
              },
              {
                "name": "DiMo",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Dimo payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "25e48983-9984-4f23-a25f-fc0993d0d1ae"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4f51df5d-fc33-4a3e-ac64-4e9ecfe69d3f"
                            }
                          }
                        ],
                        "id": "851713c8-24d0-4ed4-96c6-e4b34702fb3a",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-851713c8-24d0-4ed4-96c6-e4b34702fb3a"
                      }
                    ],
                    "id": "54fcc087-1730-4623-8f0d-62596b1b2413",
                    "uid": "10462328-54fcc087-1730-4623-8f0d-62596b1b2413"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Dimo payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f8cf0acf-b720-400f-902a-9c0fdd00feb1"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3edb9d68-56dd-4d2e-a07a-03630a1d9a1a"
                            }
                          }
                        ],
                        "id": "f2ae82d3-3657-49af-8e86-eccef17ab3fa",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-f2ae82d3-3657-49af-8e86-eccef17ab3fa"
                      }
                    ],
                    "id": "c1ca5c05-7752-4ee9-8f4f-9f76fb313373",
                    "uid": "10462328-c1ca5c05-7752-4ee9-8f4f-9f76fb313373"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Dimo payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b47bd0a7-9442-4a7c-b32e-d71df10d7306"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f0ffbd93-91ab-48ef-90cb-4bf4c4ea2d54"
                            }
                          }
                        ],
                        "id": "7dde90ea-1cb3-4d55-98e6-79177d1a6b55",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-7dde90ea-1cb3-4d55-98e6-79177d1a6b55"
                      }
                    ],
                    "id": "5218c4c4-2a9f-45e8-836c-9e49f5a99b8c",
                    "uid": "10462328-5218c4c4-2a9f-45e8-836c-9e49f5a99b8c"
                  }
                ],
                "id": "0198d3c2-f709-4a56-927f-865219ac6d6e",
                "uid": "10462328-0198d3c2-f709-4a56-927f-865219ac6d6e"
              },
              {
                "name": "PIX",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PIX payment(gateway)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f2f7a0e6-f65e-4721-a665-226efc6e9a0d"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6178f529-e234-4bb6-ba62-0fb575b4fdaa"
                            }
                          }
                        ],
                        "id": "a338a726-63e6-4dc8-986a-75ec7629b7af",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"PIX\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a338a726-63e6-4dc8-986a-75ec7629b7af"
                      }
                    ],
                    "id": "4155492a-e983-4fa7-9d59-23b44650314a",
                    "uid": "10462328-4155492a-e983-4fa7-9d59-23b44650314a"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PIX payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "eb0e668e-54ee-4a08-ab99-2e77db1cabf9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "14f6e810-0b77-48c1-ba9b-460b1a77683c"
                            }
                          }
                        ],
                        "id": "db164887-0aab-438a-9155-276d20dbc12a",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"PIX\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-db164887-0aab-438a-9155-276d20dbc12a"
                      }
                    ],
                    "id": "da8f8bf2-45ec-424e-87fe-9f53becfd5ab",
                    "uid": "10462328-da8f8bf2-45ec-424e-87fe-9f53becfd5ab"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create PIX payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "aec9e939-f258-4e7d-81aa-1e2f5ddd8d49"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fa539ddd-0847-41b1-8db6-56d4898fd387"
                            }
                          }
                        ],
                        "id": "2bd16de0-5a91-4b29-b7d8-0a7e1d82a6ee",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"PIX\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2bd16de0-5a91-4b29-b7d8-0a7e1d82a6ee"
                      }
                    ],
                    "id": "913b3e5d-3b97-47fc-b6e3-01a457ea131a",
                    "uid": "10462328-913b3e5d-3b97-47fc-b6e3-01a457ea131a"
                  }
                ],
                "id": "83bb4543-c6c7-4023-858b-1462b8db25d8",
                "uid": "10462328-83bb4543-c6c7-4023-858b-1462b8db25d8"
              },
              {
                "name": "QR code PicPay",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PICPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "24a0d0ad-3fbc-4c50-8dcd-785a4ffec05e"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "486fc734-2b96-4341-997d-9e013c4b1628"
                            }
                          }
                        ],
                        "id": "4e10b00e-8889-4e1f-b8f7-43dedc317f44",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PICPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n       \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-4e10b00e-8889-4e1f-b8f7-43dedc317f44"
                      }
                    ],
                    "id": "27d20002-39da-4fa0-bb5a-3d3f329f4ddc",
                    "uid": "10462328-27d20002-39da-4fa0-bb5a-3d3f329f4ddc"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PICPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3379a75c-21cc-4233-8bfd-b4e76326e671"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "92e886ca-c139-4a3e-a127-1929bb742d0b"
                            }
                          }
                        ],
                        "id": "711a5ed8-7ea0-43cc-8eec-64cabd74a5f4",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PICPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n       \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-711a5ed8-7ea0-43cc-8eec-64cabd74a5f4"
                      }
                    ],
                    "id": "df1b9f53-f733-4e66-98c7-78a28dee8b25",
                    "uid": "10462328-df1b9f53-f733-4e66-98c7-78a28dee8b25"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create PICPAY payment(ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "561d3520-9b2d-46f2-b92d-f4841fae71d3"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "73aedb79-c602-43be-a141-202f2d6ec39d"
                            }
                          }
                        ],
                        "id": "ab6fb230-6ca2-40a4-8501-a7e40c611d27",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PICPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n       \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ab6fb230-6ca2-40a4-8501-a7e40c611d27"
                      }
                    ],
                    "id": "5f94b3d8-b8ab-4217-b267-7e79f10878ca",
                    "uid": "10462328-5f94b3d8-b8ab-4217-b267-7e79f10878ca"
                  }
                ],
                "id": "d700ffcc-7439-4b56-b264-54a0aca5f178",
                "uid": "10462328-d700ffcc-7439-4b56-b264-54a0aca5f178"
              },
              {
                "name": "Codi",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create CODI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6a5e7612-51b5-4c36-97b7-4e5151b510ec"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "11d00342-b67e-4fde-8151-40c9233cd764"
                            }
                          }
                        ],
                        "id": "a5399332-fd79-48ba-b616-73bfbfc6b546",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CODI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a5399332-fd79-48ba-b616-73bfbfc6b546"
                      }
                    ],
                    "id": "a612ddc6-9978-4e4f-bd39-a641eb057f41",
                    "uid": "10462328-a612ddc6-9978-4e4f-bd39-a641eb057f41"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create CODI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "50573103-b431-4dfd-b82c-b372457ce2ab"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "17532d13-7339-45fd-9709-518e3f423c31"
                            }
                          }
                        ],
                        "id": "0c5b7b5a-ebde-4d7e-bc6e-97046f093a91",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CODI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-0c5b7b5a-ebde-4d7e-bc6e-97046f093a91"
                      }
                    ],
                    "id": "fbacb6cd-9c45-438c-ac04-f9b902a5d2d1",
                    "uid": "10462328-fbacb6cd-9c45-438c-ac04-f9b902a5d2d1"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create CODI payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fee5aa37-d096-490b-9ac3-0514b69e9244"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8ea8be52-0cb4-4a34-b584-a461a22c740a"
                            }
                          }
                        ],
                        "id": "385e54e6-f18f-4dc4-a2dd-2ecc50262fbb",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CODI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-385e54e6-f18f-4dc4-a2dd-2ecc50262fbb"
                      }
                    ],
                    "id": "6de422fb-ba78-475e-9f8f-98ac16c6d382",
                    "uid": "10462328-6de422fb-ba78-475e-9f8f-98ac16c6d382"
                  }
                ],
                "id": "7881b089-a374-440a-b8bb-0a8274d1a1a0",
                "uid": "10462328-7881b089-a374-440a-b8bb-0a8274d1a1a0"
              },
              {
                "name": "PSE",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PSE payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "615db28b-6f27-4e19-ad5c-a1ca7c42d398"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1a7f6ab0-7beb-4d88-9497-40171147c565"
                            }
                          }
                        ],
                        "id": "9068442f-767b-4f00-ad08-863848531f90",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PSE\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"bank_code\": \"1032\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"3051234567\",\n        \"document_type\": \"TID\",\n        \"identity\": \"401.162.304-01\",\n        \"living_address\": {\n            \"address\": \"1600 Pennsylvania Ave NW\"\n        }\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-9068442f-767b-4f00-ad08-863848531f90"
                      }
                    ],
                    "id": "84346ed9-c0ce-47c7-bf04-af94499cb6cd",
                    "uid": "10462328-84346ed9-c0ce-47c7-bf04-af94499cb6cd"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PSE payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9c54a84d-9587-4bdb-b2f6-07cd7b931d5e"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6d8fe345-146c-4582-81ee-88ac94f67c72"
                            }
                          }
                        ],
                        "id": "5bbb401e-5576-46bf-a6b1-d344b8e48d59",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PSE\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"bank_code\": \"1032\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"3051234567\",\n        \"document_type\": \"TID\",\n        \"identity\": \"401.162.304-01\",\n        \"living_address\": {\n            \"address\": \"1600 Pennsylvania Ave NW\"\n        }\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-5bbb401e-5576-46bf-a6b1-d344b8e48d59"
                      }
                    ],
                    "id": "545dd045-7671-472d-9fb2-a9c4db2dd499",
                    "uid": "10462328-545dd045-7671-472d-9fb2-a9c4db2dd499"
                  }
                ],
                "id": "9697a208-1d6a-41e1-9766-5f16b62c8bbd",
                "uid": "10462328-9697a208-1d6a-41e1-9766-5f16b62c8bbd"
              },
              {
                "name": "NuPay",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create NUPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8f4a01ea-2b4b-47d1-ac50-0e94093b4982"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ef9f13a9-8deb-498a-be50-38391b85b5f4"
                            }
                          }
                        ],
                        "id": "64590ddd-5022-4939-9e91-20d886afdaa9",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"count\": 1,\n                \"description\": \"test\",\n                \"name\": \"apple\",\n                \"price\": 1\n            }\n        ]\n    },\n    \"payment_method\": \"NUPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"67753423657\",\n        \"phone\": \"5501234567890\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-64590ddd-5022-4939-9e91-20d886afdaa9"
                      }
                    ],
                    "id": "b64fa6cf-3851-4003-b008-a6f81ef840f6",
                    "uid": "10462328-b64fa6cf-3851-4003-b008-a6f81ef840f6"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create NUPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3c125563-1a96-4b9c-8535-1e291d0d2903"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "95a61c7c-6bd1-4806-a0f1-1fd9e64b2447"
                            }
                          }
                        ],
                        "id": "a8c04a68-e567-446f-88ae-e4e4f7ae5001",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"count\": 1,\n                \"description\": \"test\",\n                \"name\": \"apple\",\n                \"price\": 1\n            }\n        ]\n    },\n    \"payment_method\": \"NUPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"67753423657\",\n        \"phone\": \"5501234567890\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a8c04a68-e567-446f-88ae-e4e4f7ae5001"
                      }
                    ],
                    "id": "4aacbdcc-00e5-464e-8073-ba433e5879fb",
                    "uid": "10462328-4aacbdcc-00e5-464e-8073-ba433e5879fb"
                  }
                ],
                "id": "99cb5be4-81df-4d92-a0ed-9b6a44d7e044",
                "uid": "10462328-99cb5be4-81df-4d92-a0ed-9b6a44d7e044"
              },
              {
                "name": "Pago Efectivo",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PAGOEFECTIVO payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "27980f75-4fb0-4199-b73b-e660d220670c"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5e4581e6-7acb-4787-ac1f-c468b48c084b"
                            }
                          }
                        ],
                        "id": "bcbb3b0b-f0cb-4d5d-97f9-a3bde5d7a4d1",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAGOEFECTIVO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"document_type\": \"DNI\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"phone\":\"123456789\",\n        \"identity\": \"12345678\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-bcbb3b0b-f0cb-4d5d-97f9-a3bde5d7a4d1"
                      }
                    ],
                    "id": "c323af41-ee48-42e3-bcf2-58951e51602d",
                    "uid": "10462328-c323af41-ee48-42e3-bcf2-58951e51602d"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PAGOEFECTIVO payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "158e4588-024b-4800-8566-971ab23a9511"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "216392c8-e0a1-4f66-93d2-110ee515002b"
                            }
                          }
                        ],
                        "id": "4d574b4c-9681-4847-9ebe-9e7fbf69b591",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAGOEFECTIVO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-4d574b4c-9681-4847-9ebe-9e7fbf69b591"
                      }
                    ],
                    "id": "7afb529e-3742-4b41-aaa7-a29b34342f76",
                    "uid": "10462328-7afb529e-3742-4b41-aaa7-a29b34342f76"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create PAGOEFECTIVO payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "330d9e2c-1532-4edf-aa88-eb230a3aecee"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "afe6bc18-ffde-4710-94dc-2b16ffd3d278"
                            }
                          }
                        ],
                        "id": "bdca1bd1-ab18-47f3-990c-2c81ee25d417",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAGOEFECTIVO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"document_type\": \"DNI\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"phone\":\"123456789\",\n        \"identity\": \"12345678\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-bdca1bd1-ab18-47f3-990c-2c81ee25d417"
                      }
                    ],
                    "id": "753dab58-582a-4da4-8e3f-acac0c2aa9b5",
                    "uid": "10462328-753dab58-582a-4da4-8e3f-acac0c2aa9b5"
                  }
                ],
                "id": "1c3293b5-7270-4540-86bd-b6a506634d94",
                "uid": "10462328-1c3293b5-7270-4540-86bd-b6a506634d94"
              },
              {
                "name": "Mercado Pago",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Mercado Pago payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b386ad17-e301-407c-9bde-c5f925828b73"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a0d08b45-167c-44ed-a802-17ab35dfdf77"
                            }
                          }
                        ],
                        "id": "36a4ea17-897a-4d44-9910-66281c45eaaa",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"id\": \"123456789\",\n                \"name\": \"Apple\",\n                \"description\": \"Testing apple\"\n            }\n        ]\n    },\n    \"payment_method\": \"MERCADOPAGO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-36a4ea17-897a-4d44-9910-66281c45eaaa"
                      }
                    ],
                    "id": "3142e1a8-f3a4-4634-addf-893ac8759969",
                    "uid": "10462328-3142e1a8-f3a4-4634-addf-893ac8759969"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Mercado Pago payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3b75b82f-4789-4539-b676-420b738792f4"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fa8f8fcc-5f16-4bee-b792-a7522a556a5d"
                            }
                          }
                        ],
                        "id": "d8d130f0-c091-4944-8ed9-383b58364d14",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"id\": \"123456789\",\n                \"name\": \"Apple\",\n                \"description\": \"Testing apple\"\n            }\n        ]\n    },\n    \"payment_method\": \"MERCADOPAGO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d8d130f0-c091-4944-8ed9-383b58364d14"
                      }
                    ],
                    "id": "55c71a95-baff-4111-a278-99e86d38a648",
                    "uid": "10462328-55c71a95-baff-4111-a278-99e86d38a648"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Mercado Pago payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1982331a-b245-45c4-b23e-64ad258e824c"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f329b8c1-13d9-4190-a378-1640ee172f1e"
                            }
                          }
                        ],
                        "id": "5a8a8e16-61a7-42ef-922c-47dae38945fd",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"id\": \"123456789\",\n                \"name\": \"Apple\",\n                \"description\": \"Testing apple\"\n            }\n        ]\n    },\n    \"payment_method\": \"MERCADOPAGO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-5a8a8e16-61a7-42ef-922c-47dae38945fd"
                      }
                    ],
                    "id": "f7973f28-9d0b-4362-bc1d-5996991714b9",
                    "uid": "10462328-f7973f28-9d0b-4362-bc1d-5996991714b9"
                  }
                ],
                "id": "4defec67-82b9-404c-a9ca-21077fd5ca7e",
                "uid": "10462328-4defec67-82b9-404c-a9ca-21077fd5ca7e"
              }
            ],
            "id": "c0420be8-a49c-4dcc-b200-bb99847e3540",
            "uid": "10462328-c0420be8-a49c-4dcc-b200-bb99847e3540"
          },
          {
            "name": "India",
            "item": [
              {
                "name": "Netbanking  (Internet Banking India)",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create netbankinginr payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD_IND');\r",
                                "\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c7da2232-0b77-4f27-b31e-f7c674f7537b"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7c8be12d-c7bb-4c1f-aaf7-816429265a7e"
                            }
                          }
                        ],
                        "id": "798d95d6-e9ef-422f-8c5d-5413af12bff3",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"netbankinginr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n \"ewallet_account\":\n    {\n        \"bank_code\": \"INB1111\"\n}\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-798d95d6-e9ef-422f-8c5d-5413af12bff3"
                      }
                    ],
                    "id": "be580a34-547a-45c5-80bf-c3caa80f9c6a",
                    "uid": "10462328-be580a34-547a-45c5-80bf-c3caa80f9c6a"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create netbankinginr payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7cbff69b-bc0a-47e3-bc1b-d988c0cda1ea"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f5a40150-f002-4be5-84c7-fc502cf763b7"
                            }
                          }
                        ],
                        "id": "c7310fb3-518b-4405-9e3f-fa038855beae",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"netbankinginr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c7310fb3-518b-4405-9e3f-fa038855beae"
                      }
                    ],
                    "id": "49c2705c-9fb7-4848-991c-20b3268be5e5",
                    "uid": "10462328-49c2705c-9fb7-4848-991c-20b3268be5e5"
                  }
                ],
                "id": "236e8967-2caa-4cee-ba79-b429b3be8df3",
                "uid": "10462328-236e8967-2caa-4cee-ba79-b429b3be8df3"
              },
              {
                "name": "UPI (Unified Payments Interface)",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create upi payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "81b77fe2-7027-4ccd-bfda-b301b6c0f84f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "81e1739e-f16e-494f-82b7-398a176a075f"
                            }
                          }
                        ],
                        "id": "fa1f6ca3-0ea0-4f41-8a12-7484b36ba136",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"UPI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-fa1f6ca3-0ea0-4f41-8a12-7484b36ba136"
                      }
                    ],
                    "id": "d1a00cb3-08f7-45cb-87dd-b0318dcfbe1d",
                    "uid": "10462328-d1a00cb3-08f7-45cb-87dd-b0318dcfbe1d"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create upi payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "11ff8b07-cd91-4d7a-8dab-b86d27ac60ee"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5775f672-af69-4b37-9260-94034e0d61e1"
                            }
                          }
                        ],
                        "id": "f2ebf2e7-1985-435a-9e3c-a7b03d7017e2",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"upi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-f2ebf2e7-1985-435a-9e3c-a7b03d7017e2"
                      }
                    ],
                    "id": "076a7006-9ded-42c8-85d7-5c0d20b83bd9",
                    "uid": "10462328-076a7006-9ded-42c8-85d7-5c0d20b83bd9"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create upi payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP_IND');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP_IND');\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "cbb76ab8-d846-403a-a4bd-c26ac74167fa"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "327ccc15-73a3-4101-b968-2e1a3eb97ca9"
                            }
                          }
                        ],
                        "id": "816b4edb-8215-455d-9b4b-ec7c84045901",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"upi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-816b4edb-8215-455d-9b4b-ec7c84045901"
                      }
                    ],
                    "id": "14b735c4-ccc4-49d7-a5ee-cf29b402ccf4",
                    "uid": "10462328-14b735c4-ccc4-49d7-a5ee-cf29b402ccf4"
                  }
                ],
                "id": "3c63d337-e5b9-4cd9-950a-2cd4bca161af",
                "uid": "10462328-3c63d337-e5b9-4cd9-950a-2cd4bca161af"
              },
              {
                "name": "VpaUPI",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create vpaupi payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "658cb9fb-0bd0-46df-8551-f9054fee5447"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "82f0ab14-b379-42a6-b388-2e00ce20aaf9"
                            }
                          }
                        ],
                        "id": "9cf90104-d4c9-474f-a46c-e5a63bd35d97",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"vpaupi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"user123@bank\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-9cf90104-d4c9-474f-a46c-e5a63bd35d97"
                      }
                    ],
                    "id": "a9d1e3e9-2a11-4db5-a133-4bf531cc932e",
                    "uid": "10462328-a9d1e3e9-2a11-4db5-a133-4bf531cc932e"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create vpaupi payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8b099694-26b8-410a-87d6-780fbf6f296f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "391f7487-6b38-48a3-8440-afc8109b6fe8"
                            }
                          }
                        ],
                        "id": "d018adf6-9a5c-4ffc-af47-45f42c8249f7",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"vpaupi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    }\n\n\n    \n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d018adf6-9a5c-4ffc-af47-45f42c8249f7"
                      }
                    ],
                    "id": "91ad882a-23eb-4274-b9bd-7e9d665a573c",
                    "uid": "10462328-91ad882a-23eb-4274-b9bd-7e9d665a573c"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create vpaupi payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP_IND');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP_IND');\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b588f39e-bd15-419d-b388-3228ab6aa462"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a496c720-8e41-4597-9192-52f0e2b30aad"
                            }
                          }
                        ],
                        "id": "99a4898c-c26f-48df-8bd7-fa180928fb25",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"vpaupi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"user123@bank\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-99a4898c-c26f-48df-8bd7-fa180928fb25"
                      }
                    ],
                    "id": "545f38d2-019d-48ea-8523-4e42ebdaf0bd",
                    "uid": "10462328-545f38d2-019d-48ea-8523-4e42ebdaf0bd"
                  }
                ],
                "id": "a2bc9f7a-52d1-4c0a-88e4-72c66bcfd73d",
                "uid": "10462328-a2bc9f7a-52d1-4c0a-88e4-72c66bcfd73d"
              },
              {
                "name": "Indian wallets",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create walletsinr payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD_IND');\r",
                                "\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4a09d659-40a1-4d6e-a2f1-9ec87375ddbc"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a05e3e06-90c1-4397-86bc-86f18f3c4346"
                            }
                          }
                        ],
                        "id": "eefe1c52-8932-4827-828e-78c18aaa571b",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"walletsinr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"ewallet_account\":\n    {\n        \"bank_code\": \"PHONEPE\",\n        \"id\":\"+911234567890\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-eefe1c52-8932-4827-828e-78c18aaa571b"
                      }
                    ],
                    "id": "80f5a34e-4234-4e37-bf85-4f79f59efa9c",
                    "uid": "10462328-80f5a34e-4234-4e37-bf85-4f79f59efa9c"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create walletsinr payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3b00b39e-8c0a-4171-b2e8-82414f29be99"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b689ec82-031b-4d73-8022-54ba1a8377c7"
                            }
                          }
                        ],
                        "id": "b69033fc-766f-4431-ba00-3abd616a55ed",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"walletsinr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b69033fc-766f-4431-ba00-3abd616a55ed"
                      }
                    ],
                    "id": "fa8727f3-95ee-4ba9-ba2f-6729d776c08e",
                    "uid": "10462328-fa8727f3-95ee-4ba9-ba2f-6729d776c08e"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create walletsinr payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP_IND');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP_IND');\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b6b93dd0-ed11-4520-acd1-cdd4a5faa610"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "36c547e5-4e23-48e0-9637-5b5a1adafb01"
                            }
                          }
                        ],
                        "id": "83e56dc2-d538-4253-9f3a-e9294955425a",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"walletsinr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"ewallet_account\":\n    {\n        \"bank_code\": \"PHONEPE\",\n        \"id\":\"+911234567890\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-83e56dc2-d538-4253-9f3a-e9294955425a"
                      }
                    ],
                    "id": "01c076ba-6b3c-4cb6-affd-0b289c8f31b0",
                    "uid": "10462328-01c076ba-6b3c-4cb6-affd-0b289c8f31b0"
                  }
                ],
                "id": "c301bf45-6bcd-4525-818f-a866e87b133c",
                "uid": "10462328-c301bf45-6bcd-4525-818f-a866e87b133c"
              }
            ],
            "id": "e59ff39e-75f4-4e1e-a271-ebb5f2454bbe",
            "uid": "10462328-e59ff39e-75f4-4e1e-a271-ebb5f2454bbe"
          }
        ],
        "id": "1fe8d7c3-c274-4ed4-8510-916142b05c81",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "a3299680-d676-4b14-a242-eecd58bf6051"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ],
              "id": "5aee58a5-85c5-4f68-b853-39a0dc79cbaa"
            }
          }
        ],
        "uid": "10462328-1fe8d7c3-c274-4ed4-8510-916142b05c81"
      },
      {
        "name": "Refunds",
        "item": [
          {
            "name": "Create refund",
            "item": [
              {
                "name": "Create payment for refund",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "439967a2-eb53-4a22-96d3-803ba1188414",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    pm.collectionVariables.set('payment_id_for_refund', response.payment_data.id);",
                        "    ",
                        "    postman.setNextRequest('Create refund');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "047d6fbf-5f79-418e-87cc-9f7add8223ad",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "efa231dd-b96e-4684-a81e-cd352814bef2",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-efa231dd-b96e-4684-a81e-cd352814bef2"
              },
              {
                "name": "Create refund",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "652b3dda-68c6-4e69-9f04-69720fdf7507",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "pm.expect(pm.collectionVariables.get('payment_id_for_refund')).to.not.be.undefined;",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22fa845c-7db7-4750-ac63-2779b355ef18",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('last_refund_id', response.refund_data.id);",
                        "    ",
                        "    postman.setNextRequest('Get refund by merchant order id');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "305d38e9-bb7f-45b7-8061-d5bf6f289f87",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-305d38e9-bb7f-45b7-8061-d5bf6f289f87"
              }
            ],
            "id": "89c6c15e-16e7-4962-83d5-a9cefd77462d",
            "description": "- Merchant makes POST request in JSON format to create new refund to endpoint **/api/refunds**, [see more](https://integration.unlimit.com/#createRefund)\n- Merchant can create new refund only after successfully creation of payment or recurring payment\n- Merchant must have payment id (or recurring id) and send it in refund request\n- Merchant receives response with created transaction result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "736d32a9-ae1d-4a9a-bb64-178c72c67657"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "1b06ecd6-4613-489d-918d-f64ed7d3848c"
                }
              }
            ],
            "uid": "10462328-89c6c15e-16e7-4962-83d5-a9cefd77462d"
          },
          {
            "name": "Get refunds list",
            "item": [
              {
                "name": "Get refund by merchant order id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94036c54-21a9-43c1-9152-5b0b15c3946e",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3038d06-8b79-4299-8bbc-62b102a69088",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('data');",
                        "    ",
                        "    pm.collectionVariables.set('last_refund_id', response.data[0].refund_data.id);",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "b72b7820-d8de-497e-a112-0559105ee0a1",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "merchant_order_id",
                        "value": "{{last_merchant_order_id}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-b72b7820-d8de-497e-a112-0559105ee0a1"
              },
              {
                "name": "Get refunds information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e13d68ad-2fbb-4de8-be72-b8707ec8fcf3",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9751bd07-007e-47aa-960c-23c68340caca",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('data');",
                        "    pm.expect(response).to.have.property('has_more');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "81d19863-e77b-49ee-926d-e47c584db63e",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "max_count",
                        "value": "5"
                      },
                      {
                        "key": "currency",
                        "value": "{{TERMINAL_CURRENCY}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-81d19863-e77b-49ee-926d-e47c584db63e"
              }
            ],
            "id": "20572cd4-53c7-4ead-8291-d4bfd3ba00ff",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/refunds) to get information about refunds list, [see more](https://integration.unlimit.com/#getRefunds)\n- Merchant receives GET response about transactions (refunds list)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "f2b6c88b-ed63-4b2c-9347-1b345217a49c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "6ffa5fc5-ca83-4836-b353-d37a2303ec72"
                }
              }
            ],
            "uid": "10462328-20572cd4-53c7-4ead-8291-d4bfd3ba00ff"
          },
          {
            "name": "Get refund by refund id",
            "item": [
              {
                "name": "Get refund by refund id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fc155dc-6c6e-4c9e-a2d0-b722030e2faa",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_refund_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f6ac27b-2b6b-43a7-b674-f17eebae63c2",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('refund_data');",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    pm.expect(response.refund_data.id).to.equal(pm.collectionVariables.get('last_refund_id'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "340b526a-29c9-4514-9e07-3f01acd04188",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/{{last_refund_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      "{{last_refund_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-340b526a-29c9-4514-9e07-3f01acd04188"
              }
            ],
            "id": "dbb5f766-4f23-42c0-8481-37e968a3330f",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/refunds/{refund_id}) to get information about refund by refund id, [see more](https://integration.unlimit.com/#getRefund)\n- Merchant receives GET response about transaction result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "904fa291-9995-4633-8d24-95ba3385328d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "a26ce88e-5b00-4a2f-a1da-a6d4e1e07e15"
                }
              }
            ],
            "uid": "10462328-dbb5f766-4f23-42c0-8481-37e968a3330f"
          },
          {
            "name": "Reverse refund (void)",
            "item": [
              {
                "name": "Create payment for reversed refund",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37d86847-67be-485e-bc1f-dc12888fecb6",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "595e0f50-890e-4a8a-b470-c68b8961c2ff",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    pm.collectionVariables.set('payment_id_for_reversed_refund', response.payment_data.id);",
                        "    ",
                        "    postman.setNextRequest('Create refund to reverse');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "822046ba-e15a-4fc1-a9b9-4016b3dc54e2",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-822046ba-e15a-4fc1-a9b9-4016b3dc54e2"
              },
              {
                "name": "Create refund to reverse",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f670d238-7d95-4898-89bf-35185dfbddfe",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_for_reversed_refund')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ca25b2a-a671-4c9f-8edf-7d1281be2f7e",
                      "exec": [
                        "pm.test(\"Request success\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('refund_id_to_reverse', response.refund_data.id);",
                        "    ",
                        "    postman.setNextRequest('Reverse refund');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "dfa62066-f3c3-410d-8003-f7cd2fd2ce54",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_reversed_refund}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-dfa62066-f3c3-410d-8003-f7cd2fd2ce54"
              },
              {
                "name": "Reverse refund",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd1e9e20-fb01-4105-80e0-af68670cd473",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('refund_id_to_reverse')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "afed9bdc-0205-4563-8291-a88cd2c35017",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    pm.expect(response.refund_data).to.have.property('status');",
                        "    pm.expect(response.refund_data.status).to.equal('VOIDED');",
                        "})",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "f4bdbcdf-f88d-4cb0-94c2-6704de1848f0",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"refund_data\": {\n        \"status_to\": \"REVERSE\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/{{refund_id_to_reverse}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      "{{refund_id_to_reverse}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-f4bdbcdf-f88d-4cb0-94c2-6704de1848f0"
              }
            ],
            "id": "ef56d748-1195-4ecc-97b9-9df899bce19c",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/refunds** to create new refund, [see more](https://integration.unlimit.com/#createRefund)\n- Merchant makes PATCH request in JSON format with refund id and refund_data.status_to='REVERSE' to **/api/refunds/{refund_id}** for reverse (void) refund - refund void possibility must be enabled by Unlimit manager, [see more](https://integration.unlimit.com/#updateRefund)\n- Merchant receives response with update result information (status='VOIDED')",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "id": "d29f0a45-3795-47e4-8077-c5bf44e8fd8c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "c96a911e-2d4e-4f28-926c-6ed0c7c425fc"
                }
              }
            ],
            "uid": "10462328-ef56d748-1195-4ecc-97b9-9df899bce19c"
          }
        ],
        "id": "91329739-a060-432e-9aff-0e4dc692bacf",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "d4fdecfe-8dfb-4211-8191-7edc00289a2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "4d1473a3-7182-4fc5-97c3-86461df087dd"
            }
          }
        ],
        "uid": "10462328-91329739-a060-432e-9aff-0e4dc692bacf"
      },
      {
        "name": "Payouts (cards)",
        "item": [
          {
            "name": "Create payout",
            "item": [
              {
                "name": "Create payout",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e121e80-1189-44b3-b403-a64500548ab7",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1565a53-2dd4-4176-b464-fa049952b4e7",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                        "    ",
                        "    postman.setNextRequest('Get payout by merchant order id');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "aa03d6eb-acd4-478e-8157-f3b6a49d2c92",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payout_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"expiration\": \"{{expiration}}\"\n        },\n        \"recipient_info\": \"{{$randomUUID}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-aa03d6eb-acd4-478e-8157-f3b6a49d2c92"
              }
            ],
            "id": "0dbf3207-26cb-4c04-a514-f19b74bda6b1",
            "description": "- Merchant makes POST request in JSON format to create new payout to endpoint (/api/payouts), [see more](https://integration.unlimit.com/#createPayout)\n- Merchant receives response with transaction (payout) result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "96517514-af6c-4baf-bd9e-a3249eccee41"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "3202831b-8381-4d9f-9a66-68cd35fffdf1"
                }
              }
            ],
            "uid": "10462328-0dbf3207-26cb-4c04-a514-f19b74bda6b1"
          },
          {
            "name": "Get payouts list",
            "item": [
              {
                "name": "Get payout by merchant order id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e01b29a0-b1b4-4ae8-88c5-1a7702d7a7f8",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2139f70c-e245-4f20-a9fd-cc85934f8c81",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "6ee4313b-0965-4922-8237-9d0d88223264",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "merchant_order_id",
                        "value": "{{last_merchant_order_id}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-6ee4313b-0965-4922-8237-9d0d88223264"
              },
              {
                "name": "Get payouts information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41ce5e0b-ffc7-4251-9330-805b22ed7522",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fdc8259-c14c-4b64-b942-676e6f31831d",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('data');",
                        "    pm.expect(response).to.have.property('has_more');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "30ef93f3-ed16-4776-b6fc-b57f78a9877d",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "max_count",
                        "value": "5"
                      },
                      {
                        "key": "currency",
                        "value": "{{TERMINAL_CURRENCY}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-30ef93f3-ed16-4776-b6fc-b57f78a9877d"
              }
            ],
            "id": "e1952186-3c02-45f7-8421-278af1ec9af1",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payouts) to get information about payouts, [see more](https://integration.unlimit.com/#getPayout)\n- Merchant receives GET response about transactions (payouts list)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "2fcd86ab-0616-4024-856c-ef7aaabffd5f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "8cbb76a9-5110-43d4-8c6f-3a6deb349ce6"
                }
              }
            ],
            "uid": "10462328-e1952186-3c02-45f7-8421-278af1ec9af1"
          },
          {
            "name": "Get payout by payout id",
            "item": [
              {
                "name": "Get payout by payout id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd6a5a50-a090-41f7-b565-6e9b97c3af27",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_payout_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd314900-9f2a-47a1-afa8-d62c31219fc3",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payout_data');",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    pm.expect(response.payout_data.id).to.equal(pm.collectionVariables.get('last_payout_id'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "11f5ad09-50dd-4f11-9b40-7cc073f15960",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/{{last_payout_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      "{{last_payout_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-11f5ad09-50dd-4f11-9b40-7cc073f15960"
              }
            ],
            "id": "fcb1fba4-ea04-43d6-a29f-3b1f74aaf529",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payouts/{payout_id}) to get information about payout by payout id, [see more](https://integration.unlimit.com/#getPayout)\n- Merchant receives GET response about transaction result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "9a072f30-4b7b-49dc-b631-456596c15b9b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "37ffc903-c146-4629-82e7-143101f77756"
                }
              }
            ],
            "uid": "10462328-fcb1fba4-ea04-43d6-a29f-3b1f74aaf529"
          },
          {
            "name": "Reverse payout (void)",
            "item": [
              {
                "name": "Create payout to reverse",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc46f486-eea2-4722-a36d-b8123b6b45c2",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d86d3f7c-3c99-48bd-9957-c14d898743c1",
                      "exec": [
                        "pm.test(\"Request success\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('payout_id_to_reverse', response.payout_data.id);",
                        "    ",
                        "    postman.setNextRequest('Reverse payout');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "6ceb2767-dbd1-4678-b202-ed8c9d3191e0",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payout_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        },\n        \"recipient_info\": \"{{$randomUUID}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-6ceb2767-dbd1-4678-b202-ed8c9d3191e0"
              },
              {
                "name": "Reverse payout",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1949a29-9cfd-474c-b631-1a53bd7a03f8",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payout_id_to_reverse')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d6bf636-307c-44e8-ba44-9b120263da00",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    pm.expect(response.payout_data).to.have.property('status');",
                        "    pm.expect(response.payout_data.status).to.equal('VOIDED');",
                        "       ",
                        "    postman.setNextRequest('Create one-click payment');",
                        "})",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "28595bae-7741-45e7-9aee-e0de3d15f4f4",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payout_data\": {\n        \"status_to\": \"REVERSE\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/{{payout_id_to_reverse}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      "{{payout_id_to_reverse}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-28595bae-7741-45e7-9aee-e0de3d15f4f4"
              }
            ],
            "id": "d4d3f6d4-373c-43a6-9696-27319c808e78",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payouts** to create new payout, [see more](https://integration.unlimit.com/#createPayout)\n- Merchant receives callback with transaction result information (with payout id)\n- Merchant makes PATCH request in JSON format with payout id and payout_data.status_to='REVERSE' to **/api/payouts/{payout_id}** for reverse (void) payout - payout void possibility must be enabled by Unlimit manager, [see more](https://integration.unlimit.com/#updatePayout)\n- Merchant receives response with update result information (status='VOIDED')",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "id": "d441654d-7ae0-40da-a4c0-48caa8f63ba5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "57310607-cfd1-438f-b6c2-c5e9a9e585dd"
                }
              }
            ],
            "uid": "10462328-d4d3f6d4-373c-43a6-9696-27319c808e78"
          }
        ],
        "id": "cd280bea-591d-411a-8b93-253f8cb0d581",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "4cffb8ba-eaa8-4749-bcfd-521f9b5ad406"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "f79468ca-59f8-4e92-9863-5d319ffd1795"
            }
          }
        ],
        "uid": "10462328-cd280bea-591d-411a-8b93-253f8cb0d581"
      },
      {
        "name": "Payouts (APMs)",
        "item": [
          {
            "name": "Asia",
            "item": [
              {
                "name": "South Korea",
                "item": [
                  {
                    "name": "Bank transfer South Korea",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "BANKTRANSFERKRW payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "033cd4ce-343b-4373-8cc2-5ef84ab79f3b"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0a717a32-50ea-4515-9634-e18d199b1bea"
                                }
                              }
                            ],
                            "id": "eea48e99-f7d6-401e-a2b4-5d24b6516a6f",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"BANKTRANSFERKRW\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"KRW\"\n    },\n     \"ewallet_account\": {\n        \"bank_code\": \"67\",\n        \"id\": \"1234567890\"\n    },\n    \"customer\": {\n        \"phone\":\"827123456789\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-eea48e99-f7d6-401e-a2b4-5d24b6516a6f"
                          }
                        ],
                        "id": "d77241d9-3207-48d2-831e-342416c9e24e",
                        "uid": "10462328-d77241d9-3207-48d2-831e-342416c9e24e"
                      }
                    ],
                    "id": "4f251315-64ec-422e-bf1b-6975bba20600",
                    "uid": "10462328-4f251315-64ec-422e-bf1b-6975bba20600"
                  }
                ],
                "id": "4d005c3a-8c0f-436b-b191-5f8a753f09ab",
                "uid": "10462328-4d005c3a-8c0f-436b-b191-5f8a753f09ab"
              },
              {
                "name": "Indonesia",
                "item": [
                  {
                    "name": "BANKTRANSFERSIDR",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create Indonesia Bank Transfer payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "68050832-8796-4680-b3af-8bb2e855d7c4"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "04c0c242-022d-4c84-a75d-4b24ef0ee0c4"
                                }
                              }
                            ],
                            "id": "ab8a516b-4f17-4f3e-977f-77e2a63babe8",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKTRANSFERSIDR\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ab8a516b-4f17-4f3e-977f-77e2a63babe8"
                          }
                        ],
                        "id": "b0e762cb-4a8f-49b5-b663-59bac879a6d1",
                        "uid": "10462328-b0e762cb-4a8f-49b5-b663-59bac879a6d1"
                      }
                    ],
                    "id": "47c9e1d4-1218-4dd5-9a81-008de232640b",
                    "uid": "10462328-47c9e1d4-1218-4dd5-9a81-008de232640b"
                  },
                  {
                    "name": "OVO",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVO payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "388e79aa-6a8c-4413-bbd2-5893caedb9d3"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8a31cf7c-2893-4728-a023-ff464e85b13d"
                                }
                              }
                            ],
                            "id": "7f0f1714-3d96-4d1d-856c-fb3502b959da",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVO\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-7f0f1714-3d96-4d1d-856c-fb3502b959da"
                          }
                        ],
                        "id": "85e1f04d-12fb-4820-afb9-461be3de45bb",
                        "uid": "10462328-85e1f04d-12fb-4820-afb9-461be3de45bb"
                      }
                    ],
                    "id": "aeaf8630-cc0a-4700-a16f-99e725fcc098",
                    "uid": "10462328-aeaf8630-cc0a-4700-a16f-99e725fcc098"
                  },
                  {
                    "name": "ShopeePay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create ShopeePay Mobile payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "eedec755-ae42-4b15-8cfb-5d0d5455519c"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "561a554a-fe12-411b-9886-356b408a018d"
                                }
                              }
                            ],
                            "id": "ac2eb49c-079c-481d-a0f3-ce0cbd15029e",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ac2eb49c-079c-481d-a0f3-ce0cbd15029e"
                          }
                        ],
                        "id": "fe06132c-a095-4665-9139-2cfddb53e11e",
                        "uid": "10462328-fe06132c-a095-4665-9139-2cfddb53e11e"
                      }
                    ],
                    "id": "618a12ce-fcaf-4a61-8f11-c7b92c844b13",
                    "uid": "10462328-618a12ce-fcaf-4a61-8f11-c7b92c844b13"
                  },
                  {
                    "name": "LINKAJA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create LINKAJA payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "774260af-409c-409b-b320-b7b42faf84e3"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4abd5306-51f9-4fb3-bb00-240c0b2df581"
                                }
                              }
                            ],
                            "id": "29615679-4fce-4253-aeee-b9b47dd4fd81",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"LINKAJA\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-29615679-4fce-4253-aeee-b9b47dd4fd81"
                          }
                        ],
                        "id": "306e2edc-ca99-4f72-838e-db31fea3c02a",
                        "uid": "10462328-306e2edc-ca99-4f72-838e-db31fea3c02a"
                      }
                    ],
                    "id": "d53758db-a91e-4e2c-914c-36bd3c4957b9",
                    "uid": "10462328-d53758db-a91e-4e2c-914c-36bd3c4957b9"
                  },
                  {
                    "name": "DANAWALLET",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DANA Indonesia Digital payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a94d49f5-79e9-4c5e-b69a-7457d12bf848"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "544a9382-d435-4b2d-a784-a157c8380d7f"
                                }
                              }
                            ],
                            "id": "0d625061-41b3-4ef5-b008-d4d6633968e0",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"DANAWALLET\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 10000,\n        \"currency\": \"IDR\"\n    },\n     \"ewallet_account\": {\n        \"bank_code\": \"67\",\n        \"id\": \"1234567890\"\n    },\n    \"customer\": {\n        \"phone\":\"827123456789\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-0d625061-41b3-4ef5-b008-d4d6633968e0"
                          }
                        ],
                        "id": "f97cdc84-98bf-4e4e-ae54-259de427097a",
                        "uid": "10462328-f97cdc84-98bf-4e4e-ae54-259de427097a"
                      }
                    ],
                    "id": "0c2f85bd-8df9-469a-b557-d31ac101eb4c",
                    "uid": "10462328-0c2f85bd-8df9-469a-b557-d31ac101eb4c"
                  }
                ],
                "id": "80454f47-1418-4717-8b2a-a3d74bfe2cf9",
                "uid": "10462328-80454f47-1418-4717-8b2a-a3d74bfe2cf9"
              },
              {
                "name": "Republic of the Philippines",
                "item": [
                  {
                    "name": "InstaPay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "InstaPay payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6895b940-e2b0-48e3-b6e6-e1b09059d290"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "   ",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0a73bab2-97ef-4536-ac34-0a202fd4195b"
                                }
                              }
                            ],
                            "id": "b673dc10-fdda-4224-b9a8-c7de39d0920d",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"instaph\",\n    \"payout_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\"\n    },\n        \"ewallet_account\": {\n            \"bank_code\":\"aub\",\n            \"id\": \"0123456789\"\n        }\n    }"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-b673dc10-fdda-4224-b9a8-c7de39d0920d"
                          }
                        ],
                        "id": "9a31ad96-9157-4fa8-9cea-fcaf325355f5",
                        "uid": "10462328-9a31ad96-9157-4fa8-9cea-fcaf325355f5"
                      }
                    ],
                    "id": "c69da16a-ea5c-452a-81bf-9f8ab2f6442f",
                    "uid": "10462328-c69da16a-ea5c-452a-81bf-9f8ab2f6442f"
                  },
                  {
                    "name": "Bank Transfer Philippines",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Bank Transfer Philippines  payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "1f64b51a-11d4-4519-9635-c4545c97a797"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "   ",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0e84c7c3-4c4f-4d44-8f8e-acdb005adbd9"
                                }
                              }
                            ],
                            "id": "8bd3494e-2762-4d7d-b32f-3e497b2a2f12",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"banktransfersphp\",\n    \"payout_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\"\n    },\n        \"ewallet_account\": {\n            \"bank_code\":\"guinobatan\",\n            \"id\": \"0123456789\"\n        }\n    }"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-8bd3494e-2762-4d7d-b32f-3e497b2a2f12"
                          }
                        ],
                        "id": "6536d7bc-30e2-4359-aef0-6f4c7acf74ab",
                        "uid": "10462328-6536d7bc-30e2-4359-aef0-6f4c7acf74ab"
                      }
                    ],
                    "id": "912eca9f-a504-4fd2-8c64-6bd356aec3d2",
                    "uid": "10462328-912eca9f-a504-4fd2-8c64-6bd356aec3d2"
                  }
                ],
                "id": "268deca7-9420-4fea-bcc9-8a00727fc575",
                "uid": "10462328-268deca7-9420-4fea-bcc9-8a00727fc575"
              },
              {
                "name": "Bank transfer Vietnam",
                "item": [
                  {
                    "name": "Bank transfer Vietnam",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "BANKTRANSFERVND payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0a4b8d6e-0542-43ed-9b5e-b6827df709da"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e828115c-e366-4ab8-8add-fbab6c7ce0eb"
                                }
                              }
                            ],
                            "id": "155d6bbc-67d1-4b2e-8a78-f0a209b92da2",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"BANKTRANSFERVND\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": \"20000\",\n        \"currency\": \"VND\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"BIDVVNVX\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-155d6bbc-67d1-4b2e-8a78-f0a209b92da2"
                          }
                        ],
                        "id": "97863546-4525-4c65-b7af-cbe41df046ad",
                        "uid": "10462328-97863546-4525-4c65-b7af-cbe41df046ad"
                      }
                    ],
                    "id": "a98bf26e-910d-4c5e-823d-c596e6b6640e",
                    "uid": "10462328-a98bf26e-910d-4c5e-823d-c596e6b6640e"
                  }
                ],
                "id": "3b43d452-cb38-4dbd-9f54-636cb3049eea",
                "uid": "10462328-3b43d452-cb38-4dbd-9f54-636cb3049eea"
              }
            ],
            "id": "87d189bd-7d55-41fe-be9b-80ab141956fe",
            "uid": "10462328-87d189bd-7d55-41fe-be9b-80ab141956fe"
          },
          {
            "name": "Africa",
            "item": [
              {
                "name": "OPAY",
                "item": [
                  {
                    "name": "Create OPAY payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "4ed68fc4-3ae0-475e-afba-40e52840dc47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "ad8e47d5-4f5e-4f1e-9f81-dde048d0d56a"
                        }
                      }
                    ],
                    "id": "578d460f-942f-4f2d-8d43-3b79fa5a586c",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"OPAY\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\":\n    {\n        \"id\": \"2341111111111\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-578d460f-942f-4f2d-8d43-3b79fa5a586c"
                  }
                ],
                "id": "2e84125b-9de7-4bbc-9e6c-6ffdbb387064",
                "uid": "10462328-2e84125b-9de7-4bbc-9e6c-6ffdbb387064"
              },
              {
                "name": "Direct Banking Nigeria",
                "item": [
                  {
                    "name": "Create Direct Banking Nigeria payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "dc3476e5-4015-42e8-aa61-1591b72eea54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "9f962986-82c4-4c26-89ba-70e90e415ff3"
                        }
                      }
                    ],
                    "id": "5f87872f-d27e-4e7d-9466-40b2e5cbbc9e",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"DIRECTBANKINGNGA\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"NGN\"\n    },\n     \"ewallet_account\": {\n        \"bank_code\": \"1003\",\n        \"id\": \"1111111111\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-5f87872f-d27e-4e7d-9466-40b2e5cbbc9e"
                  }
                ],
                "id": "c03d701a-9f75-4a2e-bce4-045d3f5d5fcd",
                "uid": "10462328-c03d701a-9f75-4a2e-bce4-045d3f5d5fcd"
              },
              {
                "name": "FCMB",
                "item": [
                  {
                    "name": "Create banktransfersngn payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "5ae88e59-7fbf-4f14-90f0-c48cea7630b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "720c2b98-7438-49f9-bcf9-cb8c21b5cffd"
                        }
                      }
                    ],
                    "id": "407116f9-1028-4fa1-a10b-78a2ddfb3e71",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"banktransfersngn\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Post ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-407116f9-1028-4fa1-a10b-78a2ddfb3e71"
                  }
                ],
                "id": "14e2c7e6-403d-4603-8ad1-999803ef9fb3",
                "uid": "10462328-14e2c7e6-403d-4603-8ad1-999803ef9fb3"
              },
              {
                "name": "M-Pesa",
                "item": [
                  {
                    "name": "Create M-Pesa payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "ba447f92-b3cd-4825-8f5e-49b7d0a19caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "9b84e0dd-1c9c-40a1-9f15-a7c22215dc21"
                        }
                      }
                    ],
                    "id": "90fa02ea-5637-450e-8f22-5894fd83c4f8",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"MPESA\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254123456789\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-90fa02ea-5637-450e-8f22-5894fd83c4f8"
                  }
                ],
                "id": "ad9403c3-e1fe-4e1d-b268-55bd402f6291",
                "uid": "10462328-ad9403c3-e1fe-4e1d-b268-55bd402f6291"
              },
              {
                "name": "Pesalink transfer to account",
                "item": [
                  {
                    "name": "Create Pesalink account payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "256daf44-0a4b-4b53-8970-0b81d5a04368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "7b4bca7b-51bb-4aa5-a021-f8f92162ec97"
                        }
                      }
                    ],
                    "id": "817bae1f-6aa6-4b7b-87ed-45fb5f77e557",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"pesalinkaccount\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-817bae1f-6aa6-4b7b-87ed-45fb5f77e557"
                  }
                ],
                "id": "124b22fa-7241-486e-be4d-5184b1dd6e15",
                "uid": "10462328-124b22fa-7241-486e-be4d-5184b1dd6e15"
              },
              {
                "name": "Pesalink transfer to wallet",
                "item": [
                  {
                    "name": "Create Pesalink wallet payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "46351f33-a58f-417f-87a8-40304e05f8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "0db0adcd-d501-4239-91f7-123b3549d4db"
                        }
                      }
                    ],
                    "id": "fc0211a2-529a-483c-9a57-2ba9dc81195a",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PESALINKWALLET\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-fc0211a2-529a-483c-9a57-2ba9dc81195a"
                  }
                ],
                "id": "0077203a-5f93-4059-9f01-231a97b1e34e",
                "uid": "10462328-0077203a-5f93-4059-9f01-231a97b1e34e"
              },
              {
                "name": "Pesalink transfer to phone",
                "item": [
                  {
                    "name": "Create Pesalink phone payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "192da042-fc93-4073-8a66-67ee56e1f015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "b8391910-df69-44b4-aaaa-9ab71b51f2ee"
                        }
                      }
                    ],
                    "id": "93111d48-013a-427e-823f-7029af7eaaad",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"pesalinkphone\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-93111d48-013a-427e-823f-7029af7eaaad"
                  }
                ],
                "id": "7a545201-3268-4e91-b8cb-d74a6276e455",
                "uid": "10462328-7a545201-3268-4e91-b8cb-d74a6276e455"
              },
              {
                "name": "Tigopesa Tanzania",
                "item": [
                  {
                    "name": "Create Tigopesa Tanzania payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "c918aabc-abec-48b3-b53c-7d6adcc42948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "a8087026-96f1-4944-a828-eea0c81aaaef"
                        }
                      }
                    ],
                    "id": "cbf28d14-fc5f-4534-98e1-17c30a90b624",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"TIGOPESA\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255123456789\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-cbf28d14-fc5f-4534-98e1-17c30a90b624"
                  }
                ],
                "id": "a0e9ed31-0809-4fe8-877b-77c2a2db0114",
                "uid": "10462328-a0e9ed31-0809-4fe8-877b-77c2a2db0114"
              },
              {
                "name": "M-Pesa Tanzania",
                "item": [
                  {
                    "name": "Create M-Pesa Tanzania payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "65a3cf0c-8569-413e-bb5e-df90467cc1fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "d48edcb9-be79-454d-b401-030acae92063"
                        }
                      }
                    ],
                    "id": "a659280a-31cf-4e86-b1ee-7ae32a6e91cb",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"MPESATZS\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order\"\n    },\n    \"payout_data\": {\n        \"amount\": 200,\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"+255123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-a659280a-31cf-4e86-b1ee-7ae32a6e91cb"
                  }
                ],
                "id": "1e5cfb81-61e3-4fb6-a0ea-3089e407d093",
                "uid": "10462328-1e5cfb81-61e3-4fb6-a0ea-3089e407d093"
              },
              {
                "name": "Airtel Tanzania",
                "item": [
                  {
                    "name": "Create Airtel Tanzania payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "5bca3986-c7c5-4153-8ccc-ab0aa6f61346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "29692a53-a2a4-460a-aad4-f5718c8a0c46"
                        }
                      }
                    ],
                    "id": "5c53ee59-2bad-4d0d-a64c-9dec0288f8ee",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"AIRTELTZS\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255740123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-5c53ee59-2bad-4d0d-a64c-9dec0288f8ee"
                  }
                ],
                "id": "7c5fd7b4-434a-4234-83d7-073be260f648",
                "uid": "10462328-7c5fd7b4-434a-4234-83d7-073be260f648"
              },
              {
                "name": "Airtel",
                "item": [
                  {
                    "name": "Create Airtel payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "b187e505-1b55-4e59-9fc9-efdb6084854d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "c650e308-9ea9-48b5-ac08-59dc6f4684b5"
                        }
                      }
                    ],
                    "id": "9f4355d9-77ae-437e-b28f-b6690a7bb725",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"AIRTEL\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254100123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-9f4355d9-77ae-437e-b28f-b6690a7bb725"
                  }
                ],
                "id": "5efb82b6-0403-44b6-92f7-5c9ad79e0ff4",
                "uid": "10462328-5efb82b6-0403-44b6-92f7-5c9ad79e0ff4"
              }
            ],
            "id": "96b43b40-00d3-480e-869c-e7304eb4a875",
            "uid": "10462328-96b43b40-00d3-480e-869c-e7304eb4a875"
          },
          {
            "name": "Europe",
            "item": [
              {
                "name": "SEPA Instant",
                "item": [
                  {
                    "name": "Create SEPATRANSFER  payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "d87a938d-cea8-4c3a-8dd6-5d38787fc444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "36ce2209-4db2-47b6-8922-a5662dc13165"
                        }
                      }
                    ],
                    "id": "37c5f56b-c66b-4e75-8c72-94285e2f25af",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"SEPATRANSFER\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"PL12123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"living_address\": {\n            \"country\": \"PL\",\n            \"address\": \"test address\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-37c5f56b-c66b-4e75-8c72-94285e2f25af"
                  }
                ],
                "id": "1b070503-7fc2-4a8e-9e32-fa6c21e6927d",
                "uid": "10462328-1b070503-7fc2-4a8e-9e32-fa6c21e6927d"
              }
            ],
            "id": "af6d46af-fb79-4be4-a416-3d6a1760ff75",
            "uid": "10462328-af6d46af-fb79-4be4-a416-3d6a1760ff75"
          },
          {
            "name": "Latin America",
            "item": [
              {
                "name": "Davivienda",
                "item": [
                  {
                    "name": "Create Davivienda bank payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "04a94e16-0585-4a7f-ba40-759678409c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "2d5302b5-d236-49d4-95ac-54da2787a095"
                        }
                      }
                    ],
                    "id": "dea22d4e-a404-464a-b1d2-66d023c2045e",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"daviviendabank\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"016704402001\",\n        \"bank_code\": \"000007\",\n        \"type\": \"CС\"\n    },\n    \"customer\": {\n        \"identity\": \"79845632\",\n        \"document_type\": \"02\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-dea22d4e-a404-464a-b1d2-66d023c2045e"
                  }
                ],
                "id": "2f43d6db-7f5a-4822-96d0-c95aa089bfed",
                "uid": "10462328-2f43d6db-7f5a-4822-96d0-c95aa089bfed"
              },
              {
                "name": "transfiya",
                "item": [
                  {
                    "name": "Create transfiya payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "9609eb1d-1b7e-4e06-9e69-dbe79516e2ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "be5246c2-1627-45c4-89ca-2bf2251843ec"
                        }
                      }
                    ],
                    "id": "4daecf17-f1a0-40f8-936e-d376364f1ea1",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"transfiya\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-4daecf17-f1a0-40f8-936e-d376364f1ea1"
                  }
                ],
                "id": "8a4b4d68-977a-46b9-96d9-f3b87a842994",
                "uid": "10462328-8a4b4d68-977a-46b9-96d9-f3b87a842994"
              },
              {
                "name": "SPEI",
                "item": [
                  {
                    "name": "Create SPEI payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "c781e15e-dd3c-46af-ba06-4ee9b59e3dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "461ad01a-c6ff-431a-bcee-4ca2d42a3c59"
                        }
                      }
                    ],
                    "id": "0781a4b2-9cec-487f-a10c-e576000f0961",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"MXN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"123456789012345689\"\n    },\n    \"customer\":{\n        \"full_name\":\"{{$randomFullName}}\"\n\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-0781a4b2-9cec-487f-a10c-e576000f0961"
                  }
                ],
                "id": "ba70da5c-a3a7-40c1-9d21-d5c8eef07139",
                "uid": "10462328-ba70da5c-a3a7-40c1-9d21-d5c8eef07139"
              },
              {
                "name": "DiMo",
                "item": [
                  {
                    "name": "Create Dimo payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "7bd91f1c-089d-4568-9301-df355e610144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "1cc3f0c9-dd3c-4c60-bf9f-d164ba4f9828"
                        }
                      }
                    ],
                    "id": "00a75463-53a5-4421-a906-eed094fa0944",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payout_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n \n    },\n        \"ewallet_account\": {\n            \"id\": \"123456789012345678\",\n            \"bank_code\": \"40002\"\n\n        }\n    }\n"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-00a75463-53a5-4421-a906-eed094fa0944"
                  }
                ],
                "id": "43562c7b-8954-4877-b6fd-5536d2c9ff8d",
                "uid": "10462328-43562c7b-8954-4877-b6fd-5536d2c9ff8d"
              },
              {
                "name": "Bank transfer Colombia",
                "item": [
                  {
                    "name": "Create Bank transfer Colombia payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "75f3298b-ccb8-454c-b68e-6007b75f228a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "2d9ec1e9-d2ee-4783-8907-0c850930d5fb"
                        }
                      }
                    ],
                    "id": "09317316-15d1-4f08-bfd6-156c76989758",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"BANKTRANSFERSCOP\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1859642039681735\",\n        \"bank_code\": \"1001\",\n        \"type\": \"cc\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"document_type\": \"cc\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-09317316-15d1-4f08-bfd6-156c76989758"
                  }
                ],
                "id": "abbcf66d-b184-4285-97c5-0ee7926291a5",
                "uid": "10462328-abbcf66d-b184-4285-97c5-0ee7926291a5"
              },
              {
                "name": "Pix",
                "item": [
                  {
                    "name": "Regular Payout",
                    "item": [
                      {
                        "name": "Create PIX regular payout",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');",
                                "",
                                "var merchant_order_id = uuid.v4();",
                                "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e630523e-bfb0-4459-a4d6-5757f0109e29"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.have.status(201);",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response.payout_data).to.have.property('id');",
                                "    ",
                                "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                " ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2037c4cc-cdd1-412f-99e7-2145c715c02c"
                            }
                          }
                        ],
                        "id": "bdfed6f5-fe9b-486e-a6f6-a126e820d6ab",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PIX\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"BRL\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1859642039681735\",\n        \"bank_code\": \"001\",\n        \"bank_branch\": \"1234\",\n        \"type\": \"SVGS\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payouts"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-bdfed6f5-fe9b-486e-a6f6-a126e820d6ab"
                      }
                    ],
                    "id": "fdf82005-69a0-4be9-93ac-0d96626319ac",
                    "uid": "10462328-fdf82005-69a0-4be9-93ac-0d96626319ac"
                  },
                  {
                    "name": "Payout by CPF",
                    "item": [
                      {
                        "name": "Create PIX payout by CPF",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');",
                                "",
                                "var merchant_order_id = uuid.v4();",
                                "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "846ca829-2bbf-4ac8-a823-efdc49437978"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.have.status(201);",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response.payout_data).to.have.property('id');",
                                "    ",
                                "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                " ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "57a6665d-aba8-4001-9c66-a95143c2eb5b"
                            }
                          }
                        ],
                        "id": "47dc3d14-b3af-486b-8f1b-35d0cde47fca",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PIX\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"BRL\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"401.162.304-01\",\n        \"type\": \"CPF\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payouts"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-47dc3d14-b3af-486b-8f1b-35d0cde47fca"
                      }
                    ],
                    "id": "60a966df-f1b0-4a51-b618-782e05991742",
                    "uid": "10462328-60a966df-f1b0-4a51-b618-782e05991742"
                  },
                  {
                    "name": "Payout by Phone",
                    "item": [
                      {
                        "name": "Create PIX payout by Phone",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');",
                                "",
                                "var merchant_order_id = uuid.v4();",
                                "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ea060a7b-b31e-4229-acc8-97b309ad021f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.have.status(201);",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response.payout_data).to.have.property('id');",
                                "    ",
                                "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                " ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8fdebdb7-9ebd-4812-a004-1aac6793835d"
                            }
                          }
                        ],
                        "id": "70cf1397-0ae2-4793-9b22-4b0e29b31a58",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PIX\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"BRL\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"+550012345678\",\n        \"type\": \"PHONE\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payouts"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-70cf1397-0ae2-4793-9b22-4b0e29b31a58"
                      }
                    ],
                    "id": "a5f65c9b-a9b9-498f-9886-38688a84f965",
                    "uid": "10462328-a5f65c9b-a9b9-498f-9886-38688a84f965"
                  },
                  {
                    "name": "Payout by Email",
                    "item": [
                      {
                        "name": "Create PIX payout by Email",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');",
                                "",
                                "var merchant_order_id = uuid.v4();",
                                "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "02c16e58-8f27-4101-99f2-bce7c082576f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.have.status(201);",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response.payout_data).to.have.property('id');",
                                "    ",
                                "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                " ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "31637e46-c79d-4448-b4e6-51d29b1167eb"
                            }
                          }
                        ],
                        "id": "53a314be-e69b-4860-bb04-7758069de0f0",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PIX\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"BRL\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"{{CUSTOMER_EMAIL}}\",\n        \"type\": \"EMAIL\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payouts"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-53a314be-e69b-4860-bb04-7758069de0f0"
                      }
                    ],
                    "id": "19250ed6-0268-4a22-a40f-75ca846b7268",
                    "uid": "10462328-19250ed6-0268-4a22-a40f-75ca846b7268"
                  },
                  {
                    "name": "Payout by EVP (random key)",
                    "item": [
                      {
                        "name": "Create PIX payout by EVP (random key)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');",
                                "",
                                "var merchant_order_id = uuid.v4();",
                                "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b958a5d1-162b-4fcd-b7c9-803f61b8dbcb"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.have.status(201);",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response.payout_data).to.have.property('id');",
                                "    ",
                                "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                " ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ec2a5d8c-86c2-48ec-9f38-a5a31c1d4b9f"
                            }
                          }
                        ],
                        "id": "231bf988-2549-4e91-bdd8-1427dbef1fd3",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PIX\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"BRL\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"f4n7kC2a-9Jp1-5sVb-8rT3-xZ1mN2pQ3rY9\",\n        \"type\": \"EVP\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payouts"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-231bf988-2549-4e91-bdd8-1427dbef1fd3"
                      }
                    ],
                    "id": "59db12e3-d11f-499c-9fad-21627c6f5386",
                    "uid": "10462328-59db12e3-d11f-499c-9fad-21627c6f5386"
                  }
                ],
                "id": "6e0d09b6-6d8a-4f7f-bced-10a2d36c1bed",
                "uid": "10462328-6e0d09b6-6d8a-4f7f-bced-10a2d36c1bed"
              },
              {
                "name": "Bank transfer Chile",
                "item": [
                  {
                    "name": "Create Bank transfer Chile payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "bc868d65-0045-4b4c-9be2-137f1b059dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "d5ebce42-c7a0-4dd9-a513-d06efcac1ff8"
                        }
                      }
                    ],
                    "id": "df8b3540-bb76-4443-abe5-821bf7bcea68",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"banktransfersclp\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1000,\n        \"currency\": \"CLP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"123465789\",\n        \"type\": \"checking_account\",\n        \"bank_code\": \"cl_banco_ripley\"\n    },\n    \"customer\":{\n        \"full_name\":\"{{$randomFullName}}\",\n        \"identity\":\"12345678K\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-df8b3540-bb76-4443-abe5-821bf7bcea68"
                  }
                ],
                "id": "602d9b8d-e93a-46ee-8bdf-ec9021c5d050",
                "uid": "10462328-602d9b8d-e93a-46ee-8bdf-ec9021c5d050"
              }
            ],
            "id": "a9f6f5a9-391b-4306-b2b2-52e92504ca77",
            "uid": "10462328-a9f6f5a9-391b-4306-b2b2-52e92504ca77"
          }
        ],
        "id": "f47018cb-6b8e-4951-b944-b45910a93c60",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "b178dffd-41e8-4e6f-b732-f43e61bef2df"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ],
              "id": "cd29c84c-c683-4f15-ac46-8afa6e455071"
            }
          }
        ],
        "uid": "10462328-f47018cb-6b8e-4951-b944-b45910a93c60"
      },
      {
        "name": "Recurrings",
        "item": [
          {
            "name": "One-click payments",
            "item": [
              {
                "name": "Create one-click payment",
                "item": [
                  {
                    "name": "Create one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('last_recurring_one_click_id', response.recurring_data.id);",
                            "    postman.setNextRequest('Get recurring by first recurring id');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "a9a1fba0-a0bf-450a-a214-ac1d65ebbf8b",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-a9a1fba0-a0bf-450a-a214-ac1d65ebbf8b"
                  }
                ],
                "id": "749896d6-8f06-4e4d-a217-31c2d3af8a0d",
                "description": "- Merchant makes POST request in JSON format to endpoint **/api/recurrings** ([see more](https://integration.unlimit.com/#createRecurring)) to create new one-click payment (with 'initiator'='cit' in request) with card tokenization for recurrent payments\n- One-click payment is created in the system and redirect URL is returned to Merchant in JSON format (payment page URL)\n- Merchant redirects Customer to the payment page (Unlimit or Merchant site) with provided URL\n- Merchant can use filing.id (from the callback or get response) in the next one-click transactions using saved (tokenized) card",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "5e842ef4-9511-487e-8523-37aa845e71f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "baa4541c-7ac3-4c90-936b-9937ad31c86f"
                    }
                  }
                ],
                "uid": "10462328-749896d6-8f06-4e4d-a217-31c2d3af8a0d"
              },
              {
                "name": "Create next one-click payment",
                "item": [
                  {
                    "name": "Get recurring by first recurring id",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f786fc-381d-4e66-be6f-4d8fb64d5e81",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_recurring_one_click_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a70ddd4-3d57-4d77-a63a-a7504a4a17b2",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_recurring_one_click_id'));",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_filing_id', response.recurring_data.filing.id);",
                            "    ",
                            "    postman.setNextRequest('Create next one-click payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "48efc365-1f0f-4e22-b250-e611d82bd66f",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_recurring_one_click_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{last_recurring_one_click_id}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-48efc365-1f0f-4e22-b250-e611d82bd66f"
                  },
                  {
                    "name": "Create next one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac460958-2ceb-48b1-98d3-624c5c17c876",
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "pm.expect(pm.collectionVariables.get('last_filing_id')).to.not.be.undefined;",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11346c71-8220-4a06-8f44-4f2af3722ddc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data.filing.id).to.equal(pm.collectionVariables.get('last_filing_id'));",
                            "",
                            "    // emulate customer behaviour, performing GET request to redirect url",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    postman.setNextRequest('Get recurring by merchant order id');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "63332ffa-16bc-4e1f-bf56-e990daf5a738",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"filing\": {\n            \"id\": \"{{last_filing_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-63332ffa-16bc-4e1f-bf56-e990daf5a738"
                  }
                ],
                "id": "8baff04a-bb1e-4e28-8e6f-74508f28fe53",
                "description": "* Merchant makes POST request in JSON format to endpoint **/api/recurrings**, to create new one-click payment (with 'initiator'='cit', filing.id from previous one-click in request) \n* Upon authentication completion, one-click payment is processed. Customer gets payment result page (redirect URL)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "a83c135c-01f6-4522-88ff-0a0409e91d95"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "c41c2bc5-63db-4aa1-a3af-25c27fc2e16d"
                    }
                  }
                ],
                "uid": "10462328-8baff04a-bb1e-4e28-8e6f-74508f28fe53"
              },
              {
                "name": "Create pre-authorized one-click payment",
                "item": [
                  {
                    "name": "Create pre-authorized one-click payment to complete",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f302e4-f929-4c41-a1b3-d9f2edf029dd",
                          "exec": [
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64b086f-127a-420b-b5ed-8887db6c9381",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('recurring_one_click_id_to_complete', response.recurring_data.id);",
                            "    postman.setNextRequest('Complete pre-authorized one-click payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "ea8478dc-82cf-4a2b-af69-2c0215f141a1",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-ea8478dc-82cf-4a2b-af69-2c0215f141a1"
                  },
                  {
                    "name": "Complete pre-authorized one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b04ebd3-99e9-461c-af4c-3414972802c9",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('recurring_one_click_id_to_complete')).to.not.be.undefined;",
                            "",
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbcfe2c-56d8-479e-89b6-cdb8d86a6da0",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok",
                            "    pm.response.to.have.jsonBody()",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('status');",
                            "    pm.expect(response.recurring_data.status).to.equal('COMPLETED');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "6076b896-d511-408c-a303-62d9d78a6631",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"recurring_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{recurring_one_click_id_to_complete}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{recurring_one_click_id_to_complete}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-6076b896-d511-408c-a303-62d9d78a6631"
                  }
                ],
                "id": "b0395574-4ec2-4f9a-898c-ca914fb99e1f",
                "description": "- Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create new one-click payment with parameter preauth='true', [see more](https://integration.unlimit.com/#createRecurring)\n- Pre-authorized one-click payment is created in the system and redirect URL is returned to Merchant in JSON format\n- Merchant redirects Customer to the payment page with provided URL\n- Merchant can complete or reverse (void) pre-authorized one-click payment using PATCH request in JSON format with payment id and recurring_data.status_to='REVERSE' or \"COMPLETE\" to **/api/recurrings/{recurring_id}**\n- Merchant receives response with update one-click payment result information (status=\"VOIDED\" or \"COMPLETED\")\n- If merchant doesn't send complete or reverse request ([see more](https://integration.unlimit.com/#updateRecurring)), one-click payment will be completed automatically in 7 calendar days\n- Amount in completion update request can be less, equal or more than preauthorized amount in first request",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "8106993f-acbb-46a9-a889-955f53c65674"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "08c3f1d1-90ba-42cd-9a06-abaaa49d8237"
                    }
                  }
                ],
                "uid": "10462328-b0395574-4ec2-4f9a-898c-ca914fb99e1f"
              },
              {
                "name": "Reverse one-click payment (void)",
                "item": [
                  {
                    "name": "Create pre-authorized one-click payment to reverse",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc9ebef-d3eb-4bc3-bdaf-37ef83512243",
                          "exec": [
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ca1014-67ac-4f6d-b3e1-1a6102709207",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('recurring_one_click_id_to_reverse', response.recurring_data.id);",
                            "    postman.setNextRequest('Reverse pre-authorized one-click payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "7ba19668-081a-4764-bf6d-612827b9eccc",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-7ba19668-081a-4764-bf6d-612827b9eccc"
                  },
                  {
                    "name": "Reverse pre-authorized one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39562bc-1e5f-42ed-bd62-e1e9fd9185b6",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('recurring_one_click_id_to_reverse')).to.not.be.undefined;",
                            "",
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e373b2-ca70-49ea-98ab-2d470649f089",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok",
                            "    pm.response.to.have.jsonBody()",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('status');",
                            "    pm.expect(response.recurring_data.status).to.equal('VOIDED');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "abd75e83-38c5-47d0-a00b-dd93b69e390a",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"recurring_data\": {\n    \"status_to\": \"REVERSE\"\n  }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{recurring_one_click_id_to_reverse}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{recurring_one_click_id_to_reverse}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-abd75e83-38c5-47d0-a00b-dd93b69e390a"
                  }
                ],
                "id": "9fdb0e69-97e7-40a7-a979-f3daba6999e4",
                "description": "- Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create new one-click payment, [see more](https://integration.unlimit.com/#createRecurring)\n- Merchant receives callback with transaction result information (with recurring id)\n- Merchant makes PATCH request in JSON format with recurring id and recurring_data.status_to='REVERSE' to **/api/recurrings{recurring_id}** to reverse (void) one-click payment, [see more](https://integration.unlimit.com/#updateRecurring)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "23fbebf3-bb1d-4c92-8ff1-c749f14d3e9a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "fbd66f89-0adb-436a-a4e4-f0b64981a20c"
                    }
                  }
                ],
                "uid": "10462328-9fdb0e69-97e7-40a7-a979-f3daba6999e4"
              },
              {
                "name": "Get recurring payments list",
                "item": [
                  {
                    "name": "Get recurring by merchant order id",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1e1ae4-33a9-47ca-862a-e05d05e35378",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caed047b-7076-44fb-b12a-2fe5d7e7de1a",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('data');",
                            "    pm.collectionVariables.set('last_recurring_id', response.data[0].recurring_data.id);",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "75d2acbf-6837-4f7d-8cf1-807917653f2f",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          ""
                        ],
                        "query": [
                          {
                            "key": "request_id",
                            "value": "{{$guid}}"
                          },
                          {
                            "key": "merchant_order_id",
                            "value": "{{last_merchant_order_id}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-75d2acbf-6837-4f7d-8cf1-807917653f2f"
                  },
                  {
                    "name": "Get recurrings information",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4031b1-03a4-40d0-8143-20e9de17dbdc",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5409455c-d6be-4ec3-b254-00e26aa46ceb",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "        ",
                            "    pm.expect(response).to.have.property('data');",
                            "    pm.expect(response).to.have.property('has_more');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "42ee25ee-6a75-4191-b8a5-42f4db1fae0c",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          ""
                        ],
                        "query": [
                          {
                            "key": "request_id",
                            "value": "{{$guid}}"
                          },
                          {
                            "key": "max_count",
                            "value": "5"
                          },
                          {
                            "key": "currency",
                            "value": "{{TERMINAL_CURRENCY}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-42ee25ee-6a75-4191-b8a5-42f4db1fae0c"
                  }
                ],
                "id": "9a8eace6-3abf-4b64-9ba9-e0476852fe94",
                "description": "- Merchant makes GET request in JSON format to endpoint **/api/recurrings** to get information about payments list, [see more](https://integration.unlimit.com/#getRecurrings)\n- Merchant receives GET response about transactions (recurrings list)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "a9df04f0-2004-4f61-b13d-38898eaef220"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "a52d809f-a866-43ef-a9af-698311aef109"
                    }
                  }
                ],
                "uid": "10462328-9a8eace6-3abf-4b64-9ba9-e0476852fe94"
              },
              {
                "name": "Get recurring payment by recurring id",
                "item": [
                  {
                    "name": "Get recurring by recurring id",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cc9f85-9028-4f3c-8380-289e6445d78c",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_recurring_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672f9e5c-5fcf-4144-8a22-55874b43170b",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_recurring_one_click_id'));",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "00c1a390-447a-4557-8663-11ef242b8d56",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_recurring_one_click_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{last_recurring_one_click_id}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-00c1a390-447a-4557-8663-11ef242b8d56"
                  }
                ],
                "id": "9a007542-bd86-4a87-80e2-83acb871c441",
                "description": "- Merchant makes GET request in JSON format to endpoint **/api/recurrings/{recurring_id}** to get information about one-click payment by recurring id, [see more](https://integration.unlimit.com/#getRecurring)\n- Merchant receives GET response about transaction result information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "942865da-244c-4b24-b162-6f4de62dc828"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "21e8f799-7ceb-4387-80d6-e4d92e7c9592"
                    }
                  }
                ],
                "uid": "10462328-9a007542-bd86-4a87-80e2-83acb871c441"
              }
            ],
            "id": "da754610-8dda-471f-8e72-516d74565e21",
            "uid": "10462328-da754610-8dda-471f-8e72-516d74565e21"
          },
          {
            "name": "Scheduled payments",
            "item": [
              {
                "name": "Sсheduled by Acquirer (SA)",
                "item": [
                  {
                    "name": "Main flow for SA recurring payments",
                    "item": [
                      {
                        "name": "Create plan for SA payments",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan_data');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('plan_id', response.plan_data.id);",
                                "    postman.setNextRequest('Create first SA payment');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "d65bb587-55dd-4143-9415-053a88998ed0",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"plan_data\": {\n        \"amount\": \"100\",\n        \"interval\":1,\n        \"name\":\"{{$randomWord}}\",\n        \"period\": \"month\",\n        \"retries\": 3,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d65bb587-55dd-4143-9415-053a88998ed0"
                      },
                      {
                        "name": "Create first SA payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('last_sa_recurring_id', response.recurring_data.id);",
                                "    pm.collectionVariables.set('last_subscription_id', response.subscription.id);",
                                "    postman.setNextRequest('Get subscription info');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "8b9e6964-f08e-4ea8-aa70-d2a72c99dbca",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"scheduled_type\": \"SA\",\n        \"plan\": {\n            \"id\": \"{{plan_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8b9e6964-f08e-4ea8-aa70-d2a72c99dbca"
                      }
                    ],
                    "id": "b21f5c7a-2b93-4ca3-b3f1-92784af073bf",
                    "description": "A new scheduled subscription can be created in order to initiate a chain of payments that are automatically repeated based on a schedule set by the plan. A first payment in a subscription is always CIT while all following are MIT only. The value 'SA' in parameter scheduled_type must be sent. The next payment is created automatically based on the schedule set in the first request.\n\n*   Merchant makes POST request in JSON format to endpoint **/api/recurring_plans** to create plan\n*   Merchant receives response with plan.id\n*   Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create first payment.",
                    "uid": "10462328-b21f5c7a-2b93-4ca3-b3f1-92784af073bf"
                  },
                  {
                    "name": "Subscription management",
                    "item": [
                      {
                        "name": "Get subscription info",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan');",
                                "    pm.expect(response.plan).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "",
                                "    postman.setNextRequest('Update subscription');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "974a1c3a-fac4-44be-a7a3-1ed938c55048",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "GET",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": ""
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_subscriptions/{{last_subscription_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_subscriptions",
                              "{{last_subscription_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-974a1c3a-fac4-44be-a7a3-1ed938c55048"
                      },
                      {
                        "name": "Update subscription",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('subscription_data');",
                                "    pm.expect(response.subscription_data).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "",
                                "    postman.setNextRequest('Create plan');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "dd43fb24-d525-4d39-904c-0aae949270a2",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "PATCH",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"CHANGE_STATUS\",\n    \"subscription_data\": {\n        \"status_to\": \"INACTIVE\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_subscriptions/{{last_subscription_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_subscriptions",
                              "{{last_subscription_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-dd43fb24-d525-4d39-904c-0aae949270a2"
                      }
                    ],
                    "id": "fe62a775-0d24-4d3a-a8d3-b3481aac7838",
                    "description": "Cancelling a subscription cancels all future scheduled payments of that subscription. A subscription can be cancelled up until the day before the next scheduled payment, in order **Customer** not to be charged.\n\n*   Merchant makes GET request to endpoint **/api/recurring_subscriptions/{subscription_id}** to get information about subscription payments by subscription id\n*   Merchant makes PATCH request in JSON format to endpoint **/api/recurring_subscriptions/{subscription_id}** to cancel subscription",
                    "uid": "10462328-fe62a775-0d24-4d3a-a8d3-b3481aac7838"
                  },
                  {
                    "name": "Plan management",
                    "item": [
                      {
                        "name": "Create plan",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan_data');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('plan_change_id', response.plan_data.id);",
                                "    postman.setNextRequest('Update plan');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "28cf9044-6322-4823-8a11-88b50eddab38",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"plan_data\": {\n        \"amount\": \"100\",\n        \"interval\": 1,\n        \"name\":\"{{$randomAlphaNumeric}}\",\n        \"period\": \"month\",\n        \"retries\": 3,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-28cf9044-6322-4823-8a11-88b50eddab38"
                      },
                      {
                        "name": "Update plan",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan_data');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('plan_id', response.plan_data.id);",
                                "    postman.setNextRequest('Delete plan');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "aec28264-5972-4209-84dc-722bcb067c3f",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "PATCH",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"RENAME\",\n    \"plan_data\": {\n        \"name_to\":\"{{$randomWord}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans/{{plan_change_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans",
                              "{{plan_change_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-aec28264-5972-4209-84dc-722bcb067c3f"
                      },
                      {
                        "name": "Delete plan",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    postman.setNextRequest('Create first SM payment (Mexico)');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "b9a66aa3-69e5-43c8-aea2-43f91adbe35f",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "DELETE",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": ""
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans/{{plan_change_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans",
                              "{{plan_change_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b9a66aa3-69e5-43c8-aea2-43f91adbe35f"
                      }
                    ],
                    "id": "173cba06-1ef4-4686-83bd-a377dff85c1c",
                    "description": "A **Scheduled by Unlimit** subscription cannot be created without a subscription plan. A subscription plan is a set of parameters and recurrence schedule that become a basis for each new subscription. In other words - a subscription plan is a draft used for new subscription creation. Each plan has its own id and can be used multiple times to create various subscriptions. Plans can exist without subscriptions, but subscriptions cannot exist without plans.\n\n*   Merchant makes POST request in JSON format to endpoint **/api/recurring_plans** to create plan\n*   Merchant makes PATCH request in JSON format to endpoint **/api/recurring_plans/{plan_id}** to update plan\n*   Merchant makes DELETE request in JSON format to endpoint **/api/recurring_plans/{plan_id}** to delete plan",
                    "uid": "10462328-173cba06-1ef4-4686-83bd-a377dff85c1c"
                  }
                ],
                "id": "5c566f8d-cc08-49e6-af84-07601ec8b1aa",
                "uid": "10462328-5c566f8d-cc08-49e6-af84-07601ec8b1aa"
              },
              {
                "name": "Sсheduled by Merchant (SM)",
                "item": [
                  {
                    "name": "Mexico SM payments",
                    "item": [
                      {
                        "name": "Create first SM payment (Mexico)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('last_sm_recurring_id', response.recurring_data.id);",
                                "    postman.setNextRequest('Get first SM payment (Mexico)');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "b8dc0dcb-dd13-4bf9-a16d-e5b0d80a7066",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"contract_number\": \"{{$randomInt}\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b8dc0dcb-dd13-4bf9-a16d-e5b0d80a7066"
                      },
                      {
                        "name": "Get first SM payment (Mexico)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "11f786fc-381d-4e66-be6f-4d8fb64d5e81",
                              "exec": [
                                "pm.expect(pm.collectionVariables.get('last_sm_recurring_id')).to.not.be.undefined;"
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "1a70ddd4-3d57-4d77-a63a-a7504a4a17b2",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_sm_recurring_id'));",
                                "    ",
                                "    pm.expect(response.recurring_data).to.have.property('filing');",
                                "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                                "    ",
                                "    pm.collectionVariables.set('last_sm_filing_id', response.recurring_data.filing.id);",
                                "    ",
                                "    postman.setNextRequest('Create next SM payment (Mexico)');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "e276f6af-16a8-40c1-9944-f043ef7ee1ad",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "GET",
                          "header": [],
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_sm_recurring_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings",
                              "{{last_sm_recurring_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-e276f6af-16a8-40c1-9944-f043ef7ee1ad"
                      },
                      {
                        "name": "Create next SM payment (Mexico)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "ac460958-2ceb-48b1-98d3-624c5c17c876",
                              "exec": [
                                "var uuid = require('uuid');",
                                "",
                                "pm.expect(pm.collectionVariables.get('last_sm_filing_id')).to.not.be.undefined;",
                                "",
                                "var merchant_order_id = uuid.v4();",
                                "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "11346c71-8220-4a06-8f44-4f2af3722ddc",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "    ",
                                "    pm.expect(response.recurring_data).to.have.property('filing');",
                                "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                                "    ",
                                "    pm.expect(response.recurring_data.filing.id).to.equal(pm.collectionVariables.get('last_sm_filing_id'));",
                                "",
                                "    // emulate customer behaviour, performing GET request to redirect url",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    postman.setNextRequest('Create first SM payment');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "77455cd7-c953-47c5-9529-68ed5ab0ecaa",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"mit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"contract_number\": \"{{$randomInt}}\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"filing\": {\n            \"id\": \"{{last_sm_filing_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-77455cd7-c953-47c5-9529-68ed5ab0ecaa"
                      }
                    ],
                    "id": "539deca4-0b2f-4460-b294-fb0ded4b71ef",
                    "description": "Mexican recurring payments must include parameter recurring_data.contract_number. It is contract number between customer and merchant about proceeding recurring payments.\n\nSA and SM recurring payments are available for Mexican merchants.",
                    "uid": "10462328-539deca4-0b2f-4460-b294-fb0ded4b71ef"
                  },
                  {
                    "name": "Create first SM payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('last_sm_recurring_id', response.recurring_data.id);",
                            "    postman.setNextRequest('Get first SM payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "df5be6f4-f9e3-4ad0-9093-c19da050c783",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-df5be6f4-f9e3-4ad0-9093-c19da050c783"
                  },
                  {
                    "name": "Get first SM payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f786fc-381d-4e66-be6f-4d8fb64d5e81",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_sm_recurring_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a70ddd4-3d57-4d77-a63a-a7504a4a17b2",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_sm_recurring_id'));",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_sm_filing_id', response.recurring_data.filing.id);",
                            "    ",
                            "    postman.setNextRequest('Create next SM payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "5f8bd733-9609-482a-9062-6a7641431a00",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_sm_recurring_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{last_sm_recurring_id}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-5f8bd733-9609-482a-9062-6a7641431a00"
                  },
                  {
                    "name": "Create next SM payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac460958-2ceb-48b1-98d3-624c5c17c876",
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "pm.expect(pm.collectionVariables.get('last_sm_filing_id')).to.not.be.undefined;",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11346c71-8220-4a06-8f44-4f2af3722ddc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data.filing.id).to.equal(pm.collectionVariables.get('last_sm_filing_id'));",
                            "",
                            "    // emulate customer behaviour, performing GET request to redirect url",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    postman.setNextRequest('Get limits for refunds and payouts');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "bdbc73e9-b3ce-44e9-a226-82a9070d3fa3",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"mit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"filing\": {\n            \"id\": \"{{last_sm_filing_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-bdbc73e9-b3ce-44e9-a226-82a9070d3fa3"
                  }
                ],
                "id": "bc35de95-fc10-4c36-b5d3-8f7d682c16ab",
                "description": "Scheduled by **Merchant** payment have a subscription management (subscription data, **Customer** notifications, subscription schedule) on **Merchant** side. All scheduled payments by **Merchant** (first - CIT, all continue payments - MIT) must be initiated by **Merchant** API request. First and continue scheduled by **Merchant** payments must be separated in request by recurring_data. initiator parameter (CIT or MIT) in request.\n\n*   Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create the first recurring payment (with 'initiator'='cit' in request)\n*   Merchant makes GET request to endpoint **/api/recurrings/{recurring_id}** to get filing id for next payments\n*   Merchant makes POST request in JSON format to endpoint **/api/recurrings**, to create the next recurring payment (with 'initiator'='mit', filing.id from previous request)\n    \n\nPCI DSS compliant **Merchants** can store the card data on their own side and make payments with card data (without filing.id). Merchants must provide recurring_data.network_trans_id for recurring payments in this case. Merchant can ask his Unlimit manager to enable this option.",
                "uid": "10462328-bc35de95-fc10-4c36-b5d3-8f7d682c16ab"
              }
            ],
            "id": "cf45aca2-17fb-49ee-8a90-7701880d857b",
            "description": "Scheduled payments are a type of **credentials-on-file (COF)** payments designed for **Merchant**s that sell goods and services to **Customers** on an ongoing basis and bill them periodically. These can be payments for online content or for access to services. **Merchant** sets up a payment schedule specifying an amount, currency and recurrence.\n\nScheduled payments are divided into two types:\n\n*   **SA** (scheduled by Unlimit). Unlimit is responsible for managing schedule (deducts funds, retry logic etc.)\n*   **SM** (scheduled by Merchant). Merchant stores the schedule of the recurring payments and sends API requests in accordance with it.",
            "uid": "10462328-cf45aca2-17fb-49ee-8a90-7701880d857b"
          }
        ],
        "id": "6d73faf0-92b3-4de4-8895-904de8408861",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "380806e6-cf61-4810-ac28-1137fa8a370b"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "b62fc149-ae9a-4b06-b37f-e6c8f6d3c873"
            }
          }
        ],
        "uid": "10462328-6d73faf0-92b3-4de4-8895-904de8408861"
      },
      {
        "name": "Limits",
        "item": [
          {
            "name": "Get limits for refunds and payouts",
            "item": [
              {
                "name": "Get limits for refunds and payouts",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aedabcce-11d1-45a4-85cc-194d25a649de",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37d3b638-1341-4e10-9cea-ed197433e851",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('remaining_limits');",
                        "    pm.expect(response.remaining_limits).to.have.property(pm.environment.get(\"TERMINAL_CURRENCY\"));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "1179b036-116c-4708-9597-49539806d687",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/limits/?request_id={{$guid}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "limits",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-1179b036-116c-4708-9597-49539806d687"
              }
            ],
            "id": "a61204f1-ee95-421d-92eb-d96fd43d1c21",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/limits) to get available refunds and payouts limits, [see more](https://integration.unlimit.com/#limits)\n- Available withdrawal balance for refunds and payouts by all the currencies linked to the terminal_code from merchant authorization context.\n- When NULL for specific currency is returned - withdrawal balance for this currency is disabled\n- When 0 for specific currency is returned - remaining withdrawal balance for this currency is 0\n- Service returns previous limits value (cache value with life time - 1 second) in case when from one merchant was received more than 1 GET request per 1 second. Only successfully authorized merchant can make this kind of request.",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "c12ab5eb-9add-40c2-a62c-f9237c3a4602"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "0bd9e9fa-798b-4bf8-b4fe-316bb90adcd6"
                }
              }
            ],
            "uid": "10462328-a61204f1-ee95-421d-92eb-d96fd43d1c21"
          }
        ],
        "id": "af6cbcaf-cdcb-47cc-8247-9988a5745ce3",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "6041cac0-9086-40b2-8da5-da1b092b6f36"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "d9c98208-8c8e-4232-a1a5-b4b278b560ce"
            }
          }
        ],
        "uid": "10462328-af6cbcaf-cdcb-47cc-8247-9988a5745ce3"
      },
      {
        "name": "Reports",
        "item": [
          {
            "name": "Get reports",
            "item": [
              {
                "name": "Initiate the reports’ preparation",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7025d28-923a-4a63-84f1-a97bae6797b2",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "pm.variables.set(\"request_time\", new Date());",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fcd1b6d-2700-44a0-ad90-9ade88da6fc2",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "        try {",
                        "        pm.response.to.have.jsonBody();",
                        "        var response = pm.response.json();",
                        "        pm.expect(response).to.have.property('sample_id');",
                        "        pm.collectionVariables.set('reports_sample_id', response.sample_id);",
                        "        pm.execution.setNextRequest('Get a list of reports');",
                        "    } catch (a) {",
                        "        pm.collectionVariables.set('reports_sample_id', \"{{$guid}}\");",
                        "        pm.execution.setNextRequest('Get a list of reports');",
                        "    }",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "12c0dcac-0451-457c-ba04-719fe70de271",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"reports_data\": {\n        \"start_date\": \"2022-03-01\",\n        \"end_date\": \"2022-03-07\",\n        \"report_type\": [\"regular_settlement\",\"icpp_settlement\"]\n    }\n}\n\n"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/reports",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "reports"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-12c0dcac-0451-457c-ba04-719fe70de271"
              },
              {
                "name": "Get a list of reports",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8471460e-9ea5-4c38-9c18-56474556ac33",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('reports_sample_id')).to.not.be.undefined;",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bb3c294-0d95-43d5-ae8a-b429ab034b9b",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    try {",
                        "        pm.response.to.be.ok;",
                        "        pm.response.to.have.jsonBody();",
                        "        var response = pm.response.json();",
                        "        pm.response.to.be.ok;",
                        "        pm.expect(response).to.have.property('sample_id');",
                        "        pm.collectionVariables.set('reports_sample_id', response.sample_id);",
                        "        postman.setNextRequest('Download report file');",
                        "    } catch(err) {",
                        "        postman.setNextRequest('Download report file');",
                        "    }",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "5682360c-5799-42a1-8f88-d51294881692",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/reports/{{reports_sample_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "reports",
                      "{{reports_sample_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-5682360c-5799-42a1-8f88-d51294881692"
              },
              {
                "name": "Download report file",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "849eb8c8-8715-47dd-afdc-0d2395f392dd",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('reports_sample_id')).to.not.be.undefined;",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f956c45d-fb7b-4150-8806-f72bd68beddb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    try {",
                        "        pm.response.to.be.ok;",
                        "    } catch(err) {",
                        "",
                        "    }",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "42679f8a-d156-43c8-88fa-366e204e2147",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    },
                    {
                      "key": "Accept",
                      "value": "application/octet-stream",
                      "type": "text"
                    }
                  ],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/reports/download/{{reports_sample_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "reports",
                      "download",
                      "{{reports_sample_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-42679f8a-d156-43c8-88fa-366e204e2147"
              }
            ],
            "id": "d409c8ad-81f3-404a-b020-bafda61553d0",
            "description": "*   Merchant makes POST request in JSON format to endpoint (/api/reports) to initiate preparation of reports files\n*   Only successfully authorized merchant can make this kind of request\n*   If files of reports according to POST request's parameters are not found, then the empty array is returned in response to POST request\n*   Merchant makes GET request in JSON format to endpoint (/api/reports/{sample_id}) to get a list of reports with links to files' downloading\n*   Merchant makes GET request in JSON format to endpoint (/api/reports/download/{id}) to download files of report’s\n*   All report files (in archive) or single report file can be downloaded\n*   To download report file the request header 'Accept' must be set to 'application/octet-stream'",
            "uid": "10462328-d409c8ad-81f3-404a-b020-bafda61553d0"
          }
        ],
        "id": "fd09d877-69f4-48e5-8014-21c78281a62a",
        "uid": "10462328-fd09d877-69f4-48e5-8014-21c78281a62a"
      },
      {
        "name": "Invoices",
        "item": [
          {
            "name": "Create invoice (single-use)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c07165e8-1fc5-4149-a9cc-1c56675d3cb6",
                  "exec": [
                    "",
                    "var today = new Date();",
                    "var tomorrow = new Date(today);",
                    "tomorrow.setDate(tomorrow.getDate() + 2);",
                    "pm.collectionVariables.set('invoice_end_date', tomorrow.toISOString().split('.')[0]+ 'Z');"
                  ],
                  "type": "text/javascript"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad38ca0d-8c08-4798-b2d5-5d6e28d72e48",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    pm.expect(response).to.have.property('invoice_url');",
                    "});",
                    "pm.collectionVariables.set('invoice_id', pm.response.json().invoice_data.id);"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "id": "6c48878e-5af7-453d-8a05-898a2256afae",
            "protocolProfileBehavior": {
              "followAuthorizationHeader": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json",
                  "type": "text"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"invoice_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"expire_at\": \"{{invoice_end_date}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"items\": [\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"10\",\n                \"count\": 1\n            },\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"2.34\",\n                \"count\": 1\n            }\n        ]\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"payment_methods\": [\n        \"BANKCARD\"\n    ]\n}\n"
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices"
                ]
              },
              "description": "*   Merchant makes POST request in JSON format to endpoint **/api/invoice** to create a new invoice\n*   Merchant receives a response with invoice URL, merchant can provide URL via email, any messenger, sms or other way to a cardholder for payment.\n*   Merchant makes GET request in JSON format to endpoint (/api/invoices/{invoice_id}) for getting information about invoice by invoice id\n*   Merchant receives GET response about invoice result information"
            },
            "response": [],
            "uid": "10462328-6c48878e-5af7-453d-8a05-898a2256afae"
          },
          {
            "name": "Get invoice by invoice id (single-use)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f30e1ea-8670-4817-b4da-8e4aa9c7d54a",
                  "exec": [
                    "pm.expect(pm.collectionVariables.get('invoice_id')).to.not.be.undefined;",
                    "",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04b2a808-aa5b-46a0-bba9-b632938bdfd8",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "",
                    "    var response = pm.response.json();",
                    "",
                    "    pm.expect(response).to.have.property('invoice_data');",
                    "    pm.expect(response.invoice_data).to.have.property('id');",
                    "    pm.expect(response.invoice_data.id).to.equal(pm.collectionVariables.get('invoice_id'));",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "id": "0573e7b6-2479-42ca-8ade-354ea1851083",
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "type": "string",
                      "value": "{{access_token}}"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices/{{invoice_id}}",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices",
                  "{{invoice_id}}"
                ]
              }
            },
            "response": [],
            "uid": "10462328-0573e7b6-2479-42ca-8ade-354ea1851083"
          },
          {
            "name": "Create invoice (re-usable)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c07165e8-1fc5-4149-a9cc-1c56675d3cb6",
                  "exec": [
                    "",
                    "var today = new Date();",
                    "var tomorrow = new Date(today);",
                    "tomorrow.setDate(tomorrow.getDate() + 2);",
                    "pm.collectionVariables.set('invoice_end_date', tomorrow.toISOString().split('.')[0]+ 'Z');"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad38ca0d-8c08-4798-b2d5-5d6e28d72e48",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    pm.expect(response).to.have.property('invoice_url');",
                    "});",
                    "pm.collectionVariables.set('invoice_id_reuse', pm.response.json().invoice_data.id);"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              }
            ],
            "id": "6f585c16-9349-4ec9-beff-e993a2c9fe5a",
            "protocolProfileBehavior": {
              "followAuthorizationHeader": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "type": "text"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"invoice_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"expire_at\": \"{{invoice_end_date}}\",\n        \"reusable\": true,\n        \"reuse_count\": \"5\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"items\": [\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"10\",\n                \"count\": 1\n            },\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"2.34\",\n                \"count\": 1\n            }\n        ]\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"payment_methods\": [\n        \"BANKCARD\", \"BOLETO\", \"AIRTELTZ\",\"MPESA\", \"IDEAL\", \"SPEI\"\n    ]\n}"
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices"
                ]
              },
              "description": "*   Merchant makes POST request in JSON format to endpoint **/api/invoice** to create a new invoice\n*   Merchant receives a response with invoice URL, merchant can provide URL via email, any messenger, sms or other way to a cardholder for payment.\n*   Merchant makes GET request in JSON format to endpoint (/api/invoices/{invoice_id}) for getting information about invoice by invoice id\n*   Merchant receives GET response about invoice result information"
            },
            "response": [],
            "uid": "10462328-6f585c16-9349-4ec9-beff-e993a2c9fe5a"
          },
          {
            "name": "Get invoice by invoice id (re-usable)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f30e1ea-8670-4817-b4da-8e4aa9c7d54a",
                  "exec": [
                    "pm.expect(pm.collectionVariables.get('invoice_id')).to.not.be.undefined;",
                    "",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04b2a808-aa5b-46a0-bba9-b632938bdfd8",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "",
                    "    var response = pm.response.json();",
                    "",
                    "    pm.expect(response).to.have.property('invoice_data');",
                    "    pm.expect(response.invoice_data).to.have.property('id');",
                    "    pm.expect(response.invoice_data.id).to.equal(pm.collectionVariables.get('invoice_id_reuse'));",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              }
            ],
            "id": "c3f9f151-d6b9-4388-8741-763788a66d4e",
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "type": "string",
                      "value": "{{access_token}}"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices/{{invoice_id_reuse}}",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices",
                  "{{invoice_id_reuse}}"
                ]
              }
            },
            "response": [],
            "uid": "10462328-c3f9f151-d6b9-4388-8741-763788a66d4e"
          }
        ],
        "id": "1f54d238-1bee-437a-b9c6-6e1462b63d04",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "0a62195c-1c47-4ee1-b650-7488f6022a40"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "b5b40044-c877-490e-853e-edc541ab13b6"
            }
          }
        ],
        "uid": "10462328-1f54d238-1bee-437a-b9c6-6e1462b63d04"
      },
      {
        "name": "Payment authentication",
        "item": [
          {
            "name": "Server-to-server mode",
            "item": [
              {
                "name": "Frictionless flow",
                "item": [
                  {
                    "name": "Create authentication with 3-D secure (frictionless flow)",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb41ef1-729c-4586-93c0-f3f8b4c8a015",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6634c58c-32e0-4e13-8b74-626f310499de",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('authentication_data');",
                            "    pm.expect(response.authentication_data).to.have.property('id');",
                            "  ",
                            "    postman.setNextRequest('Create authentication with 3-D secure (challenge flow)');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "8e4a818e-a284-4b90-ba38-a434e94015d6",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_FRICTIONLESS_CONFIRMED}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_PA\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "authentication"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-8e4a818e-a284-4b90-ba38-a434e94015d6"
                  }
                ],
                "id": "9625bec4-3b26-448e-8d15-73c062606e1c",
                "uid": "10462328-9625bec4-3b26-448e-8d15-73c062606e1c"
              },
              {
                "name": "Challenge flow",
                "item": [
                  {
                    "name": "Create authentication with 3-D secure (challenge flow)",
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2603fce5-9daa-4ec0-9422-fa16538abe1b",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('CReq');",
                            "    pm.expect(response).to.have.property('id');",
                            "",
                            "    pm.collectionVariables.set('creq', response.CReq);",
                            "    pm.collectionVariables.set('auth_id_to_complete_3ds', response.id);",
                            "",
                            "    pm.execution.setNextRequest('Send CReq to ACS for authentication');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3bfd00-9ccb-4c22-88aa-353d2f8a65c3",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "488fc7b9-7366-4411-92d6-74b28a9c75d6",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_PA\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "authentication"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-488fc7b9-7366-4411-92d6-74b28a9c75d6"
                  },
                  {
                    "name": "Send CReq to ACS for authentication",
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f3d9c6-11dc-41da-9e36-9e8afcdacd34",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    ",
                            "    pm.execution.setNextRequest('Complete authentication with CRes');",
                            "})"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "0bc73ae9-21f2-4a64-aade-e7fd342219c6",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "method": "POST",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/sandbox-emulator/3ds2/browserCReqS2S?creq={{creq}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "sandbox-emulator",
                          "3ds2",
                          "browserCReqS2S"
                        ],
                        "query": [
                          {
                            "key": "creq",
                            "value": "{{creq}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-0bc73ae9-21f2-4a64-aade-e7fd342219c6"
                  },
                  {
                    "name": "Complete authentication with CRes",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c319631-48ce-42d5-a6cf-eb1cee2f0ed1",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cd3c7c-2cef-446e-877d-65af8ceebdfc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    try {",
                            "        pm.response.to.be.ok;",
                            "        pm.response.to.have.jsonBody();",
                            "        ",
                            "        var response = pm.response.json();",
                            "        console.log(response);",
                            "        pm.expect(response).to.have.property('authentication_data');",
                            "        pm.expect(response.authentication_data).to.have.property('id'); ",
                            "    } catch(err) {",
                            "",
                            "    }",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "8fd7795d-3053-4d4f-87aa-7165d96f4e57",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"CONFIRM_3DS\",\n    \"CRes\": \"{{creq}}\"\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{auth_id_to_complete_3ds}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "authentication",
                          "{{auth_id_to_complete_3ds}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-8fd7795d-3053-4d4f-87aa-7165d96f4e57"
                  }
                ],
                "id": "a7956c1c-3d48-4422-910b-6b4aedce8bac",
                "uid": "10462328-a7956c1c-3d48-4422-910b-6b4aedce8bac"
              }
            ],
            "id": "211d29d9-56aa-4abd-bbaf-0311372f7392",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca107f4e-de01-4390-a0d4-1a2f8ab019cc",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                    "var password = pm.environment.get('S2S_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8215f496-47ca-4a36-96c5-b06f09099fd5",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "uid": "10462328-211d29d9-56aa-4abd-bbaf-0311372f7392"
          },
          {
            "name": "Gateway mode",
            "item": [
              {
                "name": "Create 3-D Secure payment authentication (gateway mode)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2603fce5-9daa-4ec0-9422-fa16538abe1b",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_authentication_id', response.authentication_data.id);",
                        "",
                        "",
                        "",
                        "    postman.setNextRequest('Create AVS authentication (gateway mode)');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "2305c58c-5db7-493b-b9b2-1a35f47b1649",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{$randomEmail}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_PA\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-2305c58c-5db7-493b-b9b2-1a35f47b1649"
              },
              {
                "name": "Create AVS authentication (gateway mode)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2603fce5-9daa-4ec0-9422-fa16538abe1b",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('avs_authentication_id', response.authentication_data.id);",
                        "",
                        "    postman.setNextRequest('Create 3-D Secure non-payment authentication (gateway mode)');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "41f3a0d1-d5a7-4e6e-8605-7232ac0ce620",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        },\n        \"billing_address\": {\n            \"addr_line_1\": \"221b, Baker Street\",\n            \"addr_line_2\": \"\",\n            \"city\": \"London\",\n            \"country\": \"GB\",\n            \"state\": \"\",\n            \"zip\": \"NW1 6XE1\"\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{$randomEmail}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"AVS\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-41f3a0d1-d5a7-4e6e-8605-7232ac0ce620"
              },
              {
                "name": "Create 3-D Secure non-payment authentication (gateway mode)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95ee2f98-087e-410f-ae0e-4683a9255f76",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('non_payment_authentication_id', response.authentication_data.id);",
                        "",
                        "   ",
                        "",
                        "    postman.setNextRequest('Get 3-D Secure payment authentication');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "cd9cd710-434f-4503-b5c0-3fadde650ed8",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{$randomEmail}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_NPA\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"payment_method\": \"BANKCARD\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-cd9cd710-434f-4503-b5c0-3fadde650ed8"
              },
              {
                "name": "Get 3-D Secure payment authentication",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07ec6fc7-becb-4070-8797-96e72aefc202",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('authentication_data');",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "",
                        "",
                        "    postman.setNextRequest('Get AVS authentication');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "b5882fb3-fc2d-4091-b946-e67424622f62",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{payment_authentication_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication",
                      "{{payment_authentication_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-b5882fb3-fc2d-4091-b946-e67424622f62"
              },
              {
                "name": "Get AVS authentication",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07ec6fc7-becb-4070-8797-96e72aefc202",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('authentication_data');",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "  ",
                        "    postman.setNextRequest('Get 3-D Secure non-payment authentication');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "0f4e93a6-6cc4-4490-9ff6-f130ee52c490",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{avs_authentication_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication",
                      "{{avs_authentication_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-0f4e93a6-6cc4-4490-9ff6-f130ee52c490"
              },
              {
                "name": "Get 3-D Secure non-payment authentication",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b37e8a10-c92c-4e8c-a0d5-61289f39a843",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('authentication_data');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebd8a791-f2c1-4e4a-a5fd-4241f611c91a",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "27b57137-8c01-4443-9855-99d7544ad7ba",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{non_payment_authentication_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication",
                      "{{non_payment_authentication_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-27b57137-8c01-4443-9855-99d7544ad7ba"
              }
            ],
            "id": "92307e3b-3248-4a54-a2b8-a0fe80bd4e83",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c72d533-42fb-4997-a482-e885e87c11f6",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c24d077-f26b-4ddb-a2fd-4f1548048b8a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "uid": "10462328-92307e3b-3248-4a54-a2b8-a0fe80bd4e83"
          }
        ],
        "id": "6075afd6-c8d1-4578-8433-568fc87868c5",
        "description": "The authentication service implements three types of authentication to cater to different security needs:\n\n- **3-D Secure Payment Authentication (3DS PA)** - This adds an extra layer of security for online card transactions.\n    \n- **3-D Secure Non-Payment Authentication (3DS NPA)** - This is used for securing non-payment activities that require customer authentication. This method ensures that any sensitive action, such as updating account information, accessing secure areas of a website, or changing customer settings, is performed by the authorized user.\n    \n- **Address Verification System (AVS)** - This system verifies the address provided by the customer during the payment process. It matches the billing address submitted with the address on file at the issuing bank. This helps in detecting and preventing fraudulent transactions.\n    \n\n3DS PA and 3DS NPA are available in Payment page, Gateway, Server-to-server modes. AVS is available in Payment page, Gateway modes",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e76e8db-a4fc-43d0-8fc9-2b5d3a3661f7",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());"
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bf45b25-f79f-4a80-9639-a987d5aceb16",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ]
            }
          }
        ],
        "uid": "10462328-6075afd6-c8d1-4578-8433-568fc87868c5"
      },
      {
        "name": "Account details (APMs)",
        "item": [
          {
            "name": "Get Account details Pix CPF",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "04a3e9aa-ba55-4bfc-baf6-702f957a1ac7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "5627ff6b-7ea7-4acc-9219-6ff5b6029139"
                }
              }
            ],
            "id": "7f56b81a-2f7a-453c-9241-931f08395978",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"account_info\": [\n    {\n      \"type\": \"identity\",\n      \"value\": \"401.162.304-01\"\n    },\n    {\n      \"type\": \"CPF\",\n      \"value\": \"401.162.304-01\"\n    }\n  ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/pix",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "pix"
                ]
              }
            },
            "response": [],
            "uid": "10462328-7f56b81a-2f7a-453c-9241-931f08395978"
          },
          {
            "name": "Get Account details Pix Phone",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "7160cfc8-3b59-48a1-9cc2-a60647d184ff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "a89d15e3-9a47-4bd9-8211-1af2438d308b"
                }
              }
            ],
            "id": "2061b463-2223-4303-a026-2420bd99ad7e",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"account_info\": [\n    {\n      \"type\": \"identity\",\n      \"value\": \"401.162.304-01\"\n    },\n    {\n      \"type\": \"PHONE\",\n      \"value\": \"+550012345678\"\n    }\n  ]\n} ",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/pix",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "pix"
                ]
              }
            },
            "response": [],
            "uid": "10462328-2061b463-2223-4303-a026-2420bd99ad7e"
          },
          {
            "name": "Get Account details Pix Email",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "db3c4569-dd31-4725-a414-2f4d8f59679a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "806ee4b1-f810-4cce-acef-2e8cbca4cfdb"
                }
              }
            ],
            "id": "0945b9b0-3e82-4177-8bdd-a858480c322c",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"account_info\": [\n    {\n      \"type\": \"identity\",\n      \"value\": \"401.162.304-01\"\n    },\n    {\n      \"type\": \"EMAIL\",\n      \"value\": \"email@email.com\"\n    }\n  ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/pix",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "pix"
                ]
              }
            },
            "response": [],
            "uid": "10462328-0945b9b0-3e82-4177-8bdd-a858480c322c"
          },
          {
            "name": "Get Account details Pix EVP (random key)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "b025f738-03b0-4e7c-8ac9-784d7b76e645"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "5e0b853a-7416-4d6d-a275-08fff4fcb6a2"
                }
              }
            ],
            "id": "616ef8e8-7998-4a94-af8b-e498c269bb16",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"account_info\": [\n    {\n      \"type\": \"identity\",\n      \"value\": \"401.162.304-01\"\n    },\n    {\n      \"type\": \"EVP\",\n      \"value\": \"f4n7kC2a-9Jp1-5sVb-8rT3-xZ1mN2pQ3rY9\"\n    }\n  ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/pix",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "pix"
                ]
              }
            },
            "response": [],
            "uid": "10462328-616ef8e8-7998-4a94-af8b-e498c269bb16"
          },
          {
            "name": "Get Account details Dimo",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "dff5cb4f-2608-489e-9e73-f7a120f630d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('customer');",
                    "        pm.expect(response.customer).to.have.property('clabe');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "6dfc4c6b-4a0b-42a1-804e-a5d47994ba3f"
                }
              }
            ],
            "id": "e658db31-a543-4c66-963f-dfed78fb5e30",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"type\": \"phoneNumber\",\n            \"value\": \"998121214\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/dimo",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "dimo"
                ]
              }
            },
            "response": [],
            "uid": "10462328-e658db31-a543-4c66-963f-dfed78fb5e30"
          },
          {
            "name": "Get Account details banktransfersidr",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "ac455f9c-52e3-48e6-b069-c111eb78a206"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "8c0387d1-1be9-43ec-842c-5d55551fc636"
                }
              }
            ],
            "id": "e4baf17c-71a6-44c9-bec2-9c67feb4d1ec",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/banktransfersidr",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "banktransfersidr"
                ]
              }
            },
            "response": [],
            "uid": "10462328-e4baf17c-71a6-44c9-bec2-9c67feb4d1ec"
          },
          {
            "name": "Get Account details danawallet",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "5d4746a2-3687-47fd-91b0-60902e528dcb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "7ebe9985-d418-44f4-b0a6-a3364d496a75"
                }
              }
            ],
            "id": "1068e948-d09c-438a-aef9-bf59e0a57038",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/danawallet",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "danawallet"
                ]
              }
            },
            "response": [],
            "uid": "10462328-1068e948-d09c-438a-aef9-bf59e0a57038"
          },
          {
            "name": "Get Account details ovo",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "0db6af45-0568-41a6-a430-3cfc7fc6c630"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "d9186fb6-50da-472a-9470-d4e3765e8d01"
                }
              }
            ],
            "id": "b36ba33a-accb-4413-83bc-26e4550b9a56",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/ovo",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "ovo"
                ]
              }
            },
            "response": [],
            "uid": "10462328-b36ba33a-accb-4413-83bc-26e4550b9a56"
          },
          {
            "name": "Get Account details linkaja",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "13df8b43-efd6-4f58-9727-955003505703"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "9d03c06a-6994-4953-9a46-4b4b35341b23"
                }
              }
            ],
            "id": "6e5d88bb-a929-41a7-9b03-cd206d6ee82c",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/linkaja",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "linkaja"
                ]
              }
            },
            "response": [],
            "uid": "10462328-6e5d88bb-a929-41a7-9b03-cd206d6ee82c"
          },
          {
            "name": "Get Account details shopeepay",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "978c9436-911e-41c6-ab34-66659818d107"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "1c69b155-b88d-4721-a627-f008c1b34cc1"
                }
              }
            ],
            "id": "8a1d5a6d-6425-4065-b1e3-a7f146bba958",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/shopeepay",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "shopeepay"
                ]
              }
            },
            "response": [],
            "uid": "10462328-8a1d5a6d-6425-4065-b1e3-a7f146bba958"
          },
          {
            "name": "Get Account details banktransfersidr",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "8d6a1794-082b-4f31-8d64-a66043b234dc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "7e2e8c49-e6ec-489c-86fe-0cab69413bb6"
                }
              }
            ],
            "id": "b2b1bb9e-6117-4d54-883b-1ff21142321b",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/banktransfersidr",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "banktransfersidr"
                ]
              }
            },
            "response": [],
            "uid": "10462328-b2b1bb9e-6117-4d54-883b-1ff21142321b"
          },
          {
            "name": "Get Account details danawallet",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "2600f866-6072-48a3-9f7f-5276f4fc49ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "d8dc3ef9-c2d1-4805-8e7a-af36e0fd8b18"
                }
              }
            ],
            "id": "63c4905f-8669-4757-a3c6-5fba4b8806e9",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/danawallet",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "danawallet"
                ]
              }
            },
            "response": [],
            "uid": "10462328-63c4905f-8669-4757-a3c6-5fba4b8806e9"
          },
          {
            "name": "Get Account details ovo",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "58218df0-082b-45d0-9732-05504f509b71"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "cdb73b5b-2b1b-437c-84f1-39bf972b57c3"
                }
              }
            ],
            "id": "89adb5d2-1b5b-46be-8bb1-6bcc614aae66",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/ovo",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "ovo"
                ]
              }
            },
            "response": [],
            "uid": "10462328-89adb5d2-1b5b-46be-8bb1-6bcc614aae66"
          },
          {
            "name": "Get Account details linkaja",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "5fcb138e-c4c7-44c0-9ac5-138589bcdfac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "fc30dcf0-050f-467f-95dd-28a0bb91968f"
                }
              }
            ],
            "id": "7a353007-49a4-496c-ac60-2007a5dfbf02",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/linkaja",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "linkaja"
                ]
              }
            },
            "response": [],
            "uid": "10462328-7a353007-49a4-496c-ac60-2007a5dfbf02"
          },
          {
            "name": "Get Account details shopeepay",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "d50eb5ba-5a88-4461-8984-c598b9459b01"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "b131fff4-4e34-462d-9c5c-31dd4ca1f19a"
                }
              }
            ],
            "id": "9e095595-886c-4a07-8da1-2e911e3eb565",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/shopeepay",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "shopeepay"
                ]
              }
            },
            "response": [],
            "uid": "10462328-9e095595-886c-4a07-8da1-2e911e3eb565"
          }
        ],
        "id": "2b3030ed-e1aa-4e5b-a394-3087ad7c76f8",
        "uid": "10462328-2b3030ed-e1aa-4e5b-a394-3087ad7c76f8"
      },
      {
        "name": "Get banks (APMs)",
        "item": [
          {
            "name": "Banks list. Bank transfer Indonesia. IDR",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "454db083-311f-467c-8a0f-251fa37bf5b0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "41913dc2-d87d-455b-ab7f-03c68773f1ca"
                }
              }
            ],
            "id": "767e56c5-adb5-4e62-b0d0-7f18ce18ef93",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/banktransfersidr/idr",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "banktransfersidr",
                  "idr"
                ]
              }
            },
            "response": [],
            "uid": "10462328-767e56c5-adb5-4e62-b0d0-7f18ce18ef93"
          },
          {
            "name": "Banks list. Bank transfer Colombia. COP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "70fd5300-416c-4ee6-a6ae-019d5ba776ac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "52c14ac8-389d-4520-b25f-54890eae9760"
                }
              }
            ],
            "id": "e5210064-ff5b-4b48-8b94-dffe32303f8f",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/banktransferscop/cop",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "banktransferscop",
                  "cop"
                ]
              }
            },
            "response": [],
            "uid": "10462328-e5210064-ff5b-4b48-8b94-dffe32303f8f"
          },
          {
            "name": "Banks list. Bank Transfer Philippines. PHP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "297409b2-37e7-4ade-a0c4-88f4bffef915"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "5d287377-1edb-48e9-bce0-c2eb31345b52"
                }
              }
            ],
            "id": "c7bdebc3-1c2a-4f0b-b6bb-e49d8dbe528a",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/banktransfersphp/php",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "banktransfersphp",
                  "php"
                ]
              }
            },
            "response": [],
            "uid": "10462328-c7bdebc3-1c2a-4f0b-b6bb-e49d8dbe528a"
          },
          {
            "name": "Banks list. Directbankingnga. NGN",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "d5db3db4-7264-45c4-ada2-12e4f6b8d2f0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "02bd9188-0fe7-4bdd-9181-43648d7ba883"
                }
              }
            ],
            "id": "e4ce78d6-db85-475f-adc8-e0d7623a866d",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/directbankingnga/ngn",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "directbankingnga",
                  "ngn"
                ]
              }
            },
            "response": [],
            "uid": "10462328-e4ce78d6-db85-475f-adc8-e0d7623a866d"
          },
          {
            "name": "Banks list. PSE. COP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "2f1fdc33-3b74-40c5-a6d1-039774d2b2b0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "0f2849a3-5c1d-4d91-aee2-a885c4a6a3d7"
                }
              }
            ],
            "id": "b8a4e569-293c-4cb3-9de0-dff0754d59ad",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/pse/cop",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "pse",
                  "cop"
                ]
              }
            },
            "response": [],
            "uid": "10462328-b8a4e569-293c-4cb3-9de0-dff0754d59ad"
          },
          {
            "name": "Banks list. InstaPay Philippines. PHP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "b326951f-f742-498d-8441-b14ae9278974"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "d1e361c3-dd10-4118-a6df-866e52e55923"
                }
              }
            ],
            "id": "ac685160-8d89-4b7c-9bef-68fe491a8d86",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/instaph/php",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "instaph",
                  "php"
                ]
              }
            },
            "response": [],
            "uid": "10462328-ac685160-8d89-4b7c-9bef-68fe491a8d86"
          },
          {
            "name": "Banks list. P24. EUR",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "93ec68c1-cc43-418f-9080-01fa40c2110f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "137fe46b-e4b3-4a7a-9c6d-ff8cc69985cd"
                }
              }
            ],
            "id": "c54b1505-da5a-4117-8f2b-1a80f704c392",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/p24/eur",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "p24",
                  "eur"
                ]
              }
            },
            "response": [],
            "uid": "10462328-c54b1505-da5a-4117-8f2b-1a80f704c392"
          },
          {
            "name": "Banks list. Openbanking. EUR. Country",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "7d0f800a-291a-49dd-b767-acc2504da73a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "c769e098-2dc1-4263-9445-385870e69705"
                }
              }
            ],
            "id": "699282a0-9dfd-43dd-aea1-7d1fbf7ee37f",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/openbanking/eur?country=de",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "openbanking",
                  "eur"
                ],
                "query": [
                  {
                    "key": "country",
                    "value": "de"
                  }
                ]
              }
            },
            "response": [],
            "uid": "10462328-699282a0-9dfd-43dd-aea1-7d1fbf7ee37f"
          },
          {
            "name": "Banks list. Ideal. EUR",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "1785310e-64e8-4ca6-bd54-a1719636348e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "45e34bd7-b32d-46dc-bf67-673eeabc4517"
                }
              }
            ],
            "id": "e8f739ac-5f52-44c6-bc8e-269a27d83720",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/ideal/eur",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "ideal",
                  "eur"
                ]
              }
            },
            "response": [],
            "uid": "10462328-e8f739ac-5f52-44c6-bc8e-269a27d83720"
          },
          {
            "name": "Banks list. Bank transfer Vietnam. VND",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "5827bd17-9b16-4264-857c-ec819f24f37d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "c407304f-0fd6-4a77-aac8-ca361a6a370e"
                }
              }
            ],
            "id": "ed228cd7-3257-4244-b46f-dad8803b28d7",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/banktransfervnd/VND",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "banktransfervnd",
                  "VND"
                ]
              }
            },
            "response": [],
            "uid": "10462328-ed228cd7-3257-4244-b46f-dad8803b28d7"
          },
          {
            "name": "Banks list. Bank transfer Chile. CLP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "3bd32a80-e5bf-4ee2-a8bc-86e78b40f727"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "70096230-d071-4d40-98fc-f45600ae112e"
                }
              }
            ],
            "id": "4529c6b8-813a-4b19-b05f-aaeb7c4530ff",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/banktransfersclp/CLP",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "banktransfersclp",
                  "CLP"
                ]
              }
            },
            "response": [],
            "uid": "10462328-4529c6b8-813a-4b19-b05f-aaeb7c4530ff"
          }
        ],
        "id": "4743f096-b3b2-48d6-8e0d-4c8f12e73dfd",
        "uid": "10462328-4743f096-b3b2-48d6-8e0d-4c8f12e73dfd"
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "873c194e-4bce-4988-bb49-9681e667a5c2",
          "type": "text/javascript",
          "requests": {},
          "exec": [
            "var moment = require('moment');",
            "",
            "pm.variables.set('request_name', pm.info.requestName);",
            "pm.variables.set('expiration', moment().add(1, 'year').format('MM/YYYY'));",
            "pm.variables.set('customer_id', \"{{$randomUserName}}\");",
            "",
            "pm.collectionVariables.set('tokens', '(' + function () {",
            "    return {",
            "        obtain: function (terminal_code, password) {",
            "            var unlimit_api_url = pm.environment.get('UNLIMIT_API_URL');",
            "",
            "            pm.sendRequest({",
            "                url: `${unlimit_api_url}/api/auth/token`,",
            "                method: 'POST',",
            "                header: 'Content-Type:application/x-www-form-urlencoded',",
            "                body: {",
            "                    mode: 'raw',",
            "                    raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`",
            "                }",
            "",
            "            }, (err, res) => {",
            "                if (err || res.code !== 200) {",
            "                    throw new Error('Authentication Error');",
            "                }",
            "",
            "                var response = res.json();",
            "                pm.variables.set('access_token', response.access_token);",
            "            });",
            "        }",
            "    }",
            "} + ')();');"
          ]
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "4a8c32a7-71b5-473e-a673-211d62ef6e13",
          "type": "text/javascript",
          "requests": {},
          "exec": [
            ""
          ]
        }
      }
    ]
  }
}
