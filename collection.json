{
  "collection": {
    "info": {
      "_postman_id": "9dacc77f-6ab0-4094-82b5-d6b2db8b4045",
      "name": "Unlimit REST API (3.0)",
      "description": "## Installation\n\n1. Install Postman 8.5+\n2. Download and import [collection file](https://raw.githubusercontent.com/cardpay/postman-sdk-v3/master/collection.json)\n3. Download and import [environment file](https://raw.githubusercontent.com/cardpay/postman-sdk-v3/master/sandbox.json)\n    \n\n## API usage\n\nExecute any section from Postman collection  \nFor more information about API v3 please visit [documentation web-site](https://integration.unlimit.com).\n\n## Notes\n\n- constants ('UNLIMIT_API_URL', 'PAYMENTPAGE_TERMINAL_CODE' and so on) are [Postman environment variables](https://learning.postman.com/docs/postman/variables-and-environments/variables/), defined for 'sandbox' environment.\n- following variables are defined for collection scope _(click 'Edit' button on 'unlimit-api' collection and see 'Pre-request Script' section)_:\n    - request_name — name of the test that is being executed, using for 'merchant_order.description' field value, in request's 'Body' section\n    - expiration — customer's card expiration date, using for 'card_account.card.expiration' field value, in gateway request 'Body' section. Format: mm/yyyy\n    - tokens — variable with 'obtain' function which is calling in order to get API authorization tokens\n- other variables ('', '', etc) are defined in 'Pre-request Script' and 'Tests' sections for particular request.",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2025-07-07T11:54:49.000Z",
      "createdAt": "2020-02-20T08:17:14.000Z",
      "lastUpdatedBy": "10462328",
      "uid": "10462328-9dacc77f-6ab0-4094-82b5-d6b2db8b4045"
    },
    "item": [
      {
        "name": "Authorization",
        "item": [
          {
            "name": "Get authorization tokens",
            "item": [
              {
                "name": "Get authorization token",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cda8100-43d1-41d1-b96d-9e4c21f27d33",
                      "exec": [
                        "pm.test(\"Successful response\", function () {",
                        "    pm.response.to.have.status(200);",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('access_token');",
                        "    pm.expect(response).to.have.property('refresh_token');",
                        "    pm.expect(response).to.have.property('expires_in');",
                        "    pm.expect(response).to.have.property('refresh_expires_in');",
                        "",
                        "    pm.variables.set('access_token', response.access_token);",
                        "    pm.variables.set('refresh_token', response.refresh_token);",
                        "});",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "216904b4-7bcb-4ccb-bc6c-b38c29e33d71",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/x-www-form-urlencoded"
                    }
                  ],
                  "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                      {
                        "key": "grant_type",
                        "value": "password",
                        "type": "text"
                      },
                      {
                        "key": "terminal_code",
                        "value": "{{PAYMENTPAGE_TERMINAL_CODE}}",
                        "type": "text"
                      },
                      {
                        "key": "password",
                        "value": "{{PAYMENTPAGE_PASSWORD}}",
                        "type": "text"
                      }
                    ]
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/auth/token",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "auth",
                      "token"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-216904b4-7bcb-4ccb-bc6c-b38c29e33d71"
              }
            ],
            "id": "f86c2b90-083b-4486-9174-b8094b1d50b1",
            "description": "## Get authorization tokens for every transaction request\n\n- In order to perform any API call the access token must be obtained.\n- To do this Merchant needs to send POST request to the API token endpoint.\n- As a result Merchant will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values.\n- After receiving access token (one from the pair) merchant should use in one create, update or get transaction information request\n- Merchant can receiving new pair of tokens (access and refresh tokens) for every transaction request and don't use refresh token for tokens pair refreshing\n    \n\n## Get authorization tokens for more than one request\n\n- After receiving access token merchant can save access and refresh tokens in his site\n- Merchant can use this pair of tokens for more than one transaction request\n- After lifetime of access token is ended, merchant can use refresh token for refreshing (getting new pair) tokens (see more in Refresh token case below)\n- If a lifetime of refresh token is ended merchant should send new request to the API token endpoint to get new pair of tokens\n- As a result Merchant will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "f324607e-3afb-4075-8447-ca4021350953"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "58fed0ea-0275-47eb-a1fe-e84cbc779258"
                }
              }
            ],
            "uid": "10462328-f86c2b90-083b-4486-9174-b8094b1d50b1"
          },
          {
            "name": "Refresh token",
            "item": [
              {
                "name": "Refresh authorization token",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2625fb80-ac36-4624-9ce0-6bfaa757648b",
                      "exec": [
                        "pm.test(\"Successful response\", function () {",
                        "    pm.response.to.have.status(200);",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('access_token');",
                        "    pm.expect(response).to.have.property('refresh_token');",
                        "    pm.expect(response).to.have.property('expires_in');",
                        "    pm.expect(response).to.have.property('refresh_expires_in');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "117285cb-0575-469b-9b63-e76be50b4afa",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/x-www-form-urlencoded"
                    }
                  ],
                  "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                      {
                        "key": "grant_type",
                        "value": "refresh_token",
                        "type": "text"
                      },
                      {
                        "key": "refresh_token",
                        "value": "{{refresh_token}}",
                        "type": "text"
                      }
                    ]
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/auth/token",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "auth",
                      "token"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-117285cb-0575-469b-9b63-e76be50b4afa"
              }
            ],
            "id": "a43703a7-a9ef-4d94-962f-89c6435b1b4d",
            "description": "- Merchant can send a POST request to the **/api/auth/token** endpoint and specify refresh token as a request param.\n- A result of this request will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values\n- If a lifetime of refresh token is ended merchant should send new request to the API token endpoint to get new pair of tokens (see 'Get authorization token' use case)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "8a2b1fea-5c16-4acb-b51d-25c231eb6d1a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "6ef2ab5d-eda3-45b6-8c3f-fba88ecac078"
                }
              }
            ],
            "uid": "10462328-a43703a7-a9ef-4d94-962f-89c6435b1b4d"
          },
          {
            "name": "Get authorization tokens for more than one request",
            "item": [
              {
                "name": "Create pre-authorized payment (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f16b6361-598a-49d0-bccd-d6ca5bee84b9",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        "pm.variables.set('request_time', new Date());",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fe0407a-8496-49ad-b697-306cf1a92c78",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_id_to_complete', response.payment_data.id);",
                        "",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "",
                        "    postman.setNextRequest('Get payment by payment id (reusable tokens)');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "a47a7f97-4bec-4821-a050-901b170ffb22",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-a47a7f97-4bec-4821-a050-901b170ffb22"
              },
              {
                "name": "Get payment by payment id (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcb91f53-a0ae-4c45-8000-d8c53e62a8a1",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd5a0777-fe7d-4795-b467-739b95bfac3d",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.expect(response.payment_data.id).to.equal(pm.collectionVariables.get('payment_id_to_complete'));",
                        "    ",
                        "    postman.setNextRequest('Complete pre-authorized payment (reusable tokens)');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "f833ddfb-dd26-4aea-be26-3700502c0073",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-f833ddfb-dd26-4aea-be26-3700502c0073"
              },
              {
                "name": "Complete pre-authorized payment (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55f0d1dd-0f0f-4435-83f4-2a4411849b66",
                      "exec": [
                        "pm.expect(pm.variables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "pm.variables.set(\"request_time\", new Date());",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c40004c7-d1a4-421b-876c-3e7279dbbe55",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok",
                        "    pm.response.to.have.jsonBody()",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('COMPLETED');",
                        "    ",
                        "    postman.setNextRequest('Get payment by payment id again (reusable tokens)');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "8f18694d-712a-4a42-88af-5e2048bb29f3",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-8f18694d-712a-4a42-88af-5e2048bb29f3"
              },
              {
                "name": "Get payment by payment id again (reusable tokens)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9d4c1cb-856a-4723-90c4-bf0890152599",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('reusable_tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e425d46c-4193-46ff-b455-1603e51f934a",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.expect(response.payment_data.id).to.equal(pm.variables.get('payment_id_to_complete'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "6d0348b4-03ab-4b59-b43a-659ba72c51fc",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token_{{GATEWAY_POSTPONED_TERMINAL_CODE}}}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-6d0348b4-03ab-4b59-b43a-659ba72c51fc"
              }
            ],
            "id": "cd504d36-1a4c-4617-a8f7-0b2e3a042795",
            "description": "- After receiving access token merchant can save access and refresh tokens on his side\n- Merchant can use this pair of tokens for more than one transaction request\n- After lifetime of access token is ended, merchant can use refresh token for refreshing (getting new pair) tokens (see more in Refresh token case below)\n- If a lifetime of refresh token is ended merchant should send new request to the API token endpoint to get new pair of tokens\n- As a result Merchant will receive an [ApiTokens](https://integration.unlimit.com/#ApiTokens) JSON document containing a token pair and tokens lifetime values\n- See 'Pre-request Scripts' section for 'reusable_tokens' function",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe8529f3-49a2-4af2-9ae7-c95df310dc04",
                  "type": "text/javascript",
                  "exec": [
                    "pm.collectionVariables.set('reusable_tokens', '(' + function () {",
                    "    return {",
                    "        obtain: function (terminal_code, password) {",
                    "            var moment = require('moment');",
                    "            var TOKEN_MIN_VALIDITY = 100;",
                    "            var unlimit_api_url = pm.environment.get('UNLIMIT_API_URL');",
                    "",
                    "            function unsetVar(name) {",
                    "                pm.collectionVariables.unset(`${name}_${terminal_code}`);",
                    "            }",
                    "",
                    "            function setVar(name, value) {",
                    "                pm.collectionVariables.set(`${name}_${terminal_code}`, value);",
                    "            }",
                    "",
                    "            function getVar(name, defValue) {",
                    "                return pm.collectionVariables.get(`${name}_${terminal_code}`) || defValue;",
                    "            }",
                    "",
                    "            var now = moment().unix();",
                    "            var expires_in = getVar('expires_in', 0);",
                    "            var refresh_expires_in = getVar('refresh_expires_in', 0);",
                    "",
                    "            if (expires_in - now >= TOKEN_MIN_VALIDITY && getVar('access_token')) {",
                    "                setVar('access_token', getVar('access_token'));",
                    "",
                    "            } else {",
                    "                var refresh_token = getVar('refresh_token');",
                    "                var request_body = `grant_type=refresh_token&refresh_token=${refresh_token}`;",
                    "",
                    "                if (refresh_expires_in - now < TOKEN_MIN_VALIDITY || !refresh_token) {",
                    "                    request_body = `grant_type=password&terminal_code=${terminal_code}&password=${password}`;",
                    "                }",
                    "",
                    "                unsetVar('access_token');",
                    "                unsetVar('refresh_token');",
                    "                unsetVar('expires_in');",
                    "                unsetVar('refresh_expires_in');",
                    "",
                    "                pm.sendRequest({",
                    "                    url: `${unlimit_api_url}/api/auth/token`,",
                    "                    method: 'POST',",
                    "                    header: 'Content-Type:application/x-www-form-urlencoded',",
                    "                    body: {",
                    "                        mode: 'raw',",
                    "                        raw: request_body",
                    "                    }",
                    "",
                    "                }, (err, res) => {",
                    "                    if (err || res.code !== 200) {",
                    "                        throw new Error('Authentication Error');",
                    "                    }",
                    "",
                    "                    var response = res.json();",
                    "                    setVar('access_token', response.access_token);",
                    "                    setVar('refresh_token', response.refresh_token);",
                    "                    setVar('expires_in', response.expires_in + moment().unix());",
                    "                    setVar('refresh_expires_in', response.refresh_expires_in + moment().unix());",
                    "                });",
                    "            }",
                    "        }",
                    "    }",
                    "} + ')();');"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b69c1c6-4ce0-4ce6-b348-2cc4dea21527",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "uid": "10462328-cd504d36-1a4c-4617-a8f7-0b2e3a042795"
          },
          {
            "name": "Authorization through signature",
            "item": [
              {
                "name": "Create payment through signature",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f16b6361-598a-49d0-bccd-d6ca5bee84b9",
                      "exec": [
                        "pm.collectionVariables.set('guid', pm.variables.replaceIn('{{$guid}}'));",
                        "pm.collectionVariables.set('time', new Date().toISOString());",
                        "",
                        "let uuid = require('uuid');",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);",
                        "",
                        "let api_client_id = pm.variables.get('SIGNATURE_API_CLIENT_ID');",
                        "let api_key = pm.variables.get('SIGNATURE_API_KEY');",
                        "let path = '/' + pm.request.url.path.slice(0).join('/');",
                        "let body = pm.collectionVariables.replaceIn(pm.variables.replaceIn(pm.request.body));",
                        "let xsign = '' + require(\"crypto-js\").SHA256((api_client_id + path + body + '' + api_key));",
                        "pm.collectionVariables.set('signature_x_sign', xsign);",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fe0407a-8496-49ad-b697-306cf1a92c78",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        " ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "db440bed-20cb-4c67-a029-813d1c1dbc5d",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "noauth"
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Authorization",
                      "value": "Signature {{GATEWAY_TERMINAL_CODE}},{{$guid}},{{SIGNATURE_API_CLIENT_ID}},{{signature_x_sign}}"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{guid}}\",\n        \"time\": \"{{time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"User-friendly empowering standardization\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{CUSTOMER_PHONE}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{HOLDER}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-db440bed-20cb-4c67-a029-813d1c1dbc5d"
              }
            ],
            "id": "625a9992-f187-45f2-8e29-2a210241876b",
            "description": "In order to perform any API call, merchant can use authorization through signature. API client ID and API key allows to get access to all the merchants’ wallets available in the merchant group.  \nIn order to use this type of authorization, the merchant should contact Unlimit manager.",
            "uid": "10462328-625a9992-f187-45f2-8e29-2a210241876b"
          }
        ],
        "id": "3da51624-aea8-4449-bf9b-1980aabe59e2",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "5f9f66f1-361c-4202-a729-71816a4f939a"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "e9c84fed-52da-4dee-8b7d-697a16385e64"
            }
          }
        ],
        "uid": "10462328-3da51624-aea8-4449-bf9b-1980aabe59e2"
      },
      {
        "name": "Payments (cards)",
        "item": [
          {
            "name": "Create payment (payment page)",
            "item": [
              {
                "name": "Create payment (payment page)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bed6479d-a890-4ff6-8387-767713de4d17",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f324adde-9c89-4573-9bc6-32973b9b41b8",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "e19a4c47-64c1-471d-b79f-d57f255a1540",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-e19a4c47-64c1-471d-b79f-d57f255a1540"
              }
            ],
            "id": "58e60f19-bb1b-4579-ae3c-c4514ec510e5",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment, [see more](https://integration.unlimit.com/#createPayment).\n- Payment is created in the system and redirect URL is returned to Merchant in JSON format\n- Card data is filled in by customer on hosted payment page (asynchronous process - out of scope of Postman collection)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "b81bd6ee-49ba-492e-a636-afffcaa6d74a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "d56f1fcf-6a76-48ef-beaa-c4919729e773"
                }
              }
            ],
            "uid": "10462328-58e60f19-bb1b-4579-ae3c-c4514ec510e5"
          },
          {
            "name": "Create payment without 3-D Secure",
            "item": [
              {
                "name": "Create payment (without 3-D Secure, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "7a1952aa-fc9f-456d-bc16-39dd9c4573ad",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-7a1952aa-fc9f-456d-bc16-39dd9c4573ad"
              }
            ],
            "id": "a976dca0-3945-4638-ae7c-a3a1ea37afe5",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment, [see more](https://integration.unlimit.com/#createPayment).\n- Payment is created in the system and redirect URL is returned to Merchant in JSON format",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "36b91583-75e5-42c1-8591-f8e8ecb4a6f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "47fedb83-0b4f-4210-8cda-7b108ac5d55d"
                }
              }
            ],
            "uid": "10462328-a976dca0-3945-4638-ae7c-a3a1ea37afe5"
          },
          {
            "name": "Create payment with 3-D Secure 2",
            "item": [
              {
                "name": "Create payment (3-D Secure 2)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73505a4b-d55f-42d2-8dcf-d1f606d563b2",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "276a4dd0-d77c-498e-b8a3-08393a096c80",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok",
                        "    pm.response.to.have.jsonBody()",
                        "    ",
                        "    var response = pm.response.json()",
                        "    pm.expect(response).to.have.property('redirect_url')",
                        "})",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "1024360c-bdb1-4188-9b60-f06e8b42adb5",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"trans_type\": \"01\"\n    },\n    \"card_account\": {\n        \"acct_type\": \"01\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"+1 123456789\",\n        \"work_phone\": \"+1 987654321\",\n        \"home_phone\": \"+1 462526747\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-1024360c-bdb1-4188-9b60-f06e8b42adb5"
              }
            ],
            "id": "e98d537a-ecd7-4d34-b7f9-a51cc8a972fd",
            "description": "* Merchant makes POST request in JSON format (with list of special 3-D Secure 2 parameters in request) to endpoint **/api/payments** to create new payment \n* Payment is created in the system and redirect URL is returned to Merchant in JSON format\n* The results of 3-D Secure 2 verification depend on the card provided in request and can be received only after customer redirects to redirect URL and passes 3-D Secure (asynchronous process - out of scope of Postman collection)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "aa050c15-9b43-4dc5-92b6-52c273033238"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "32b0f395-1adb-40cb-9bfc-2394b363be9b"
                }
              }
            ],
            "uid": "10462328-e98d537a-ecd7-4d34-b7f9-a51cc8a972fd"
          },
          {
            "name": "Reverse payment (void)",
            "item": [
              {
                "name": "Create pre-authorized payment to reverse",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af18803d-0977-448d-ae73-3ab034b3388a",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee5b229e-3d38-4dcb-b5e1-736bdd9c7091",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    ",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_id_to_reverse', response.payment_data.id);",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    postman.setNextRequest('Reverse pre-authorized payment');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "a1a2adb1-7381-445b-b943-7e3ca6db5cb9",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-a1a2adb1-7381-445b-b943-7e3ca6db5cb9"
              },
              {
                "name": "Reverse pre-authorized payment",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff50a88d-1788-461a-940c-46d889a5a13c",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_reverse')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5aa9a46e-63a3-4479-a890-57fa3b872ca4",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    ",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('VOIDED');",
                        "})"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "17188031-7a37-4846-ad93-aff478811db4",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"REVERSE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_reverse}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_reverse}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-17188031-7a37-4846-ad93-aff478811db4"
              }
            ],
            "id": "4e586676-c021-4526-86fc-6565d5f078da",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment, [see more](https://integration.unlimit.com/#createPayment).\n- Merchant receives callback with transaction result information (with payment id)\n- Merchant makes PATCH request in JSON format with payment id and payment_data.status_to='REVERSE' to **/api/payments/{payment_id}** to reverse (void) payment, [see more](https://integration.unlimit.com/#updatePayment).",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "24b5d0c7-ddea-4ecb-88e4-a9e86df326d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "8850e862-fe7f-482d-bcad-efe437449ac0"
                }
              }
            ],
            "uid": "10462328-4e586676-c021-4526-86fc-6565d5f078da"
          },
          {
            "name": "Create pre-authorised payment",
            "item": [
              {
                "name": "Create pre-authorized payment",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "986d2ea7-3ca9-45d5-9f81-da8505ff383a",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.variables.set('merchant_order_id', merchant_order_id);",
                        "pm.variables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa27e67c-2ab1-4561-b73b-9e3009c8bb10",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_id_to_complete', response.payment_data.id);",
                        "",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "",
                        "    postman.setNextRequest('Complete pre-authorized payment');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "668ee06f-5c4e-4d61-bdf2-c3baadf66ddd",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-668ee06f-5c4e-4d61-bdf2-c3baadf66ddd"
              },
              {
                "name": "Complete pre-authorized payment",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19a4cc3a-2213-444f-9c96-d5927dcbfda1",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_complete')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fed742e8-e696-446f-a316-f8c7c82be93c",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok",
                        "    pm.response.to.have.jsonBody()",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('COMPLETED');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "1dd02330-6a25-4599-97ca-fb9fb1cc38e2",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_complete}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-1dd02330-6a25-4599-97ca-fb9fb1cc38e2"
              }
            ],
            "id": "ff4a1e82-b559-4b43-ab98-9e663c8e00f9",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new payment with parameter preauth='true', [see more](https://integration.unlimit.com/#createPayment)\n- Preauth authorization payment is created in the system and redirect URL is returned to Merchant in JSON format (payment page URL)\n- Merchant redirects Customer to the payment page with provided URL\n- Merchant can complete or reverse (void) preauthorized payment using PATCH request in JSON format with payment id and payment_data.status_to='REVERSE' or \"COMPLETE\" to **/api/payments/{payment_id}**\n- Merchant receives response with update payment result information (status='VOIDED' or 'COMPLETED')\n- If merchant doesn't send complete or reverse request ([see more](https://integration.unlimit.com/#updatePayment)) payment will be completed automatically in 7 calendar days\n- Amount in completion update request can be less or more than preauthorized amount in first request",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "a3811576-3586-4eea-bdf7-ff8dc2d04950"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "f8585be3-5148-46ab-8d90-ea7dd0c5c8c0"
                }
              }
            ],
            "uid": "10462328-ff4a1e82-b559-4b43-ab98-9e663c8e00f9"
          },
          {
            "name": "Create payment with card token",
            "item": [
              {
                "name": "Create payment with card tokenization",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b97773ed-15fa-4ce2-92fa-4b12a58e9a4f",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3574e484-9a0f-4074-8001-1c7df9f77b9f",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.collectionVariables.set('payment_id_for_card_token', response.payment_data.id);",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    postman.setNextRequest('Get payment by id for card token');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "8e819f5d-dad5-4c1a-b22f-f14f8e771e69",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"generate_token\": true\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-8e819f5d-dad5-4c1a-b22f-f14f8e771e69"
              },
              {
                "name": "Get payment by id for card token",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8221207d-7606-45eb-ad14-1b49f40f4413",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_for_card_token')).to.not.be.undefined;",
                        "",
                        "postman.setNextRequest('Create payment with card token');"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7da8c7d3-d74e-4a29-b665-6a816f6802a5",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('card_account');",
                        "    pm.expect(response.card_account).to.have.property('token');",
                        "    pm.collectionVariables.set('card_token', response.card_account.token);",
                        "    ",
                        "    postman.setNextRequest('Create payment with card token');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "8ab3fab2-7a5b-4912-8114-cb541c5a2a43",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_for_card_token}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_for_card_token}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-8ab3fab2-7a5b-4912-8114-cb541c5a2a43"
              },
              {
                "name": "Create payment with card token",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51992566-c7f1-4d75-902d-609d31dca75e",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "pm.expect(pm.collectionVariables.get('card_token')).to.not.be.undefined;",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d45750db-bce3-4d0b-8222-34f6554545cc",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "   ",
                        "    postman.setNextRequest('Get payment by merchant order id');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "b204f565-9974-41a6-acae-6f72885701df",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"card_account\": {\n        \"token\": \"{{card_token}}\",\n        \"card\": {\n        \t\"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-b204f565-9974-41a6-acae-6f72885701df"
              }
            ],
            "id": "abf9f898-580d-4dec-864e-199381d79c2b",
            "description": "- Merchant makes POST request in JSON format (with payment_data.generate_token parameter in request) to endpoint **/api/payments** to create new payment with card tokenization\n- Payment is created in the system and redirect URL is returned to Merchant in JSON format (payment page URL)\n- Merchant redirects Customer to the payment page (Unlimit or Merchant site) with provided URL\n- After successful transaction merchant can use card token (from callback) in the next transactions",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "id": "e3e5429d-1eb3-4ded-acbd-f1f98e25593f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "38dbb10a-59d8-4530-ad80-97ef2b5e6681"
                }
              }
            ],
            "uid": "10462328-abf9f898-580d-4dec-864e-199381d79c2b"
          },
          {
            "name": "Get payments list",
            "item": [
              {
                "name": "Get payment by merchant order id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7f69ffa-a7f7-4de0-a13d-ba320a26453a",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67f2ccd1-29c7-4327-8c54-554074681bba",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('data');",
                        "    ",
                        "    pm.collectionVariables.set('last_payment_id', response.data[0].payment_data.id);",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "69426992-646b-428a-9538-cb94f4d597d4",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "merchant_order_id",
                        "value": "{{last_merchant_order_id}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-69426992-646b-428a-9538-cb94f4d597d4"
              },
              {
                "name": "Get payments information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "696fb910-5b14-410b-8e62-3733c9bc710a",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0e0f99b-05a0-4ec0-9119-ac66358ddecb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('data');",
                        "    pm.expect(response).to.have.property('has_more');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "d24f2268-6faf-4176-b3b1-88fad384e47b",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "max_count",
                        "value": "5"
                      },
                      {
                        "key": "currency",
                        "value": "{{TERMINAL_CURRENCY}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-d24f2268-6faf-4176-b3b1-88fad384e47b"
              }
            ],
            "id": "97b81426-3dd0-44e3-a38a-425426ee603e",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payments) to get information about payments list, [see more](https://integration.unlimit.com/#getPayments)\n- Merchant receives GET response about transactions (payments list)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "0fec225b-59f1-4996-8300-550f77699aa7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "3b16e2fe-40ea-4874-902d-b78e88fff4c2"
                }
              }
            ],
            "uid": "10462328-97b81426-3dd0-44e3-a38a-425426ee603e"
          },
          {
            "name": "Get payment by payment id",
            "item": [
              {
                "name": "Get payment by payment id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1edfea5-d0f5-4e78-9109-7aeda314c814",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_payment_id')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06268d37-0364-482d-8af3-7ee735d8ef62",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('id');",
                        "    pm.expect(response.payment_data.id).to.equal(pm.collectionVariables.get('last_payment_id'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "bc296873-a616-492b-9d24-0775740b6892",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{last_payment_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{last_payment_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-bc296873-a616-492b-9d24-0775740b6892"
              }
            ],
            "id": "84435173-e77d-4d78-b6d6-69e51c06a1d8",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payments/{payment_id}) for getting information about payment by payment id, [see more](https://integration.unlimit.com/#getPayment)\n- Merchant receives GET response about transaction (payment) result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "d701a6db-9610-4c0a-9186-4d821e1d3b91"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "43db0711-9c92-4f51-8fb1-eb1fa5e5a0c8"
                }
              }
            ],
            "uid": "10462328-84435173-e77d-4d78-b6d6-69e51c06a1d8"
          },
          {
            "name": "Create installment payment (one-phase)",
            "item": [
              {
                "name": "Create issuer financed installment payment (one-phase)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58c7c3e5-0b6f-4706-bff2-d28a2ec4ca1a",
                      "exec": [
                        "pm.test(\"Successful request\", function () {\r",
                        "    pm.response.to.be.ok;\r",
                        "    pm.response.to.have.jsonBody();\r",
                        "    \r",
                        "    var response = pm.response.json();\r",
                        "    pm.expect(response).to.have.property('redirect_url');\r",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0cddd46-3e6c-4f1f-90e1-8162f04a24b0",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                        "\r",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "fb1d3720-0c28-44da-9fdb-ad6db9825e29",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"request\": {\r\n        \"id\": \"{{$guid}}\",\r\n        \"time\": \"{{request_time}}\"\r\n    },\r\n    \"merchant_order\": {\r\n        \"id\": \"{{$randomUUID}}\",\r\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\r\n    },\r\n    \"payment_method\": \"BANKCARD\",\r\n    \"payment_data\": {\r\n        \"amount\": \"12.34\",\r\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\r\n        \"installment_type\": \"IF\",\r\n        \"installments\": \"6\" \r\n    },\r\n    \"card_account\": {\r\n        \"card\": {\r\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\r\n            \"holder\": \"{{$randomFullName}}\",\r\n            \"expiration\": \"{{expiration}}\",\r\n            \"security_code\": \"100\"\r\n        }\r\n    },\r\n    \"customer\": {\r\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\r\n        \"id\": \"DfVg56Gvx\"\r\n    }\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-fb1d3720-0c28-44da-9fdb-ad6db9825e29"
              },
              {
                "name": "Create merchant financed installment payment (one-phase)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef421c77-bd01-4b8f-97ed-8ec7927325a2",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                        "\r",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc799e45-f58a-4c05-9b14-2a98b9bad17e",
                      "exec": [
                        "pm.test(\"Successful request\", function () {\r",
                        "    pm.response.to.be.ok;\r",
                        "    pm.response.to.have.jsonBody();\r",
                        "    \r",
                        "    var response = pm.response.json();\r",
                        "    pm.expect(response).to.have.property('redirect_url');\r",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "ea3daed1-cd46-46d3-a279-62b647ceed68",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"request\": {\r\n        \"id\": \"{{$guid}}\",\r\n        \"time\": \"{{request_time}}\"\r\n    },\r\n    \"merchant_order\": {\r\n        \"id\": \"{{$randomUUID}}\",\r\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\r\n    },\r\n    \"payment_method\": \"BANKCARD\",\r\n    \"payment_data\": {\r\n        \"amount\": \"12.34\",\r\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\r\n        \"installment_type\": \"MF_HOLD\",\r\n        \"installments\": \"6\" \r\n    },\r\n    \"card_account\": {\r\n        \"card\": {\r\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\r\n            \"holder\": \"{{$randomFullName}}\",\r\n            \"expiration\": \"{{expiration}}\",\r\n            \"security_code\": \"100\"\r\n        }\r\n    },\r\n    \"customer\": {\r\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\r\n        \"id\": \"DfVg56Gvx\"\r\n    }\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-ea3daed1-cd46-46d3-a279-62b647ceed68"
              }
            ],
            "id": "4011a210-b4a8-4369-87ca-8a96ff8df628",
            "description": "Merchant makes POST request in JSON format to endpoint **/api/payments** to create new Installment payment (one-phase), [see more](https://integration.unlimit.com/#createPayment).\n\n**How to create Installment payment:**\n\n- Make POST-request\n- Click on 3DS redirect URL from response message\n- Emulate successful 3DS validation\n    \n\nAfter successful 3DS validation payment will be completed",
            "uid": "10462328-4011a210-b4a8-4369-87ca-8a96ff8df628"
          },
          {
            "name": "Create installment payment (two-phase)",
            "item": [
              {
                "name": "Create merchant financed installment payment (two-phase)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f157e50-632d-4de7-b1ad-72be6d5c1868",
                      "exec": [
                        "var uuid = require('uuid');\r",
                        "\r",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');\r",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');\r",
                        "\r",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                        "tokens.obtain(terminal_code, password);\r",
                        "\r",
                        "var merchant_order_id = uuid.v4();\r",
                        "pm.variables.set('merchant_order_id', merchant_order_id);\r",
                        "pm.variables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5006bed-8b78-4ed6-aefe-e9310a372073",
                      "exec": [
                        "pm.test(\"Successful request\", function () {\r",
                        "    pm.response.to.be.ok;\r",
                        "    pm.response.to.have.jsonBody();\r",
                        "\r",
                        "    var response = pm.response.json();\r",
                        "    pm.expect(response).to.have.property('redirect_url');\r",
                        "    \r",
                        "    pm.expect(response.payment_data.id).to.not.be.undefined;\r",
                        "    pm.collectionVariables.set('payment_id_to_update', response.payment_data.id);\r",
                        "    \r",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {\r",
                        "        pm.expect(response_after_redirect.code).to.equal(200);\r",
                        "    });\r",
                        "    \r",
                        "    postman.setNextRequest('Update merchant financed installment payment (two-phase)');\r",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "40d6c66b-181b-4516-b065-3c94262253d1",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\r\n    \"request\": {\r\n        \"id\": \"{{$guid}}\",\r\n        \"time\": \"{{request_time}}\"\r\n    },\r\n    \"merchant_order\": {\r\n        \"id\": \"{{$randomUUID}}\",\r\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\r\n    },\r\n    \"payment_method\": \"BANKCARD\",\r\n    \"payment_data\": {\r\n        \"amount\": \"12.34\",\r\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\r\n        \"preauth\": true,\r\n        \"installment_type\": \"MF_HOLD\",\r\n        \"installments\": \"6\" \r\n    },\r\n    \"card_account\": {\r\n        \"card\": {\r\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\r\n            \"holder\": \"{{$randomFullName}}\",\r\n            \"expiration\": \"{{expiration}}\",\r\n            \"security_code\": \"100\"\r\n        }\r\n    },\r\n    \"customer\": {\r\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\r\n        \"id\": \"DfVg56Gvx\"\r\n    }\r\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-40d6c66b-181b-4516-b065-3c94262253d1"
              },
              {
                "name": "Update merchant financed installment payment (two-phase)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e4fc82a-77c4-4ab0-b1a8-4fd9107eb7d8",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_to_update')).to.not.be.undefined;",
                        "",
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faf06132-0f44-46d9-9a14-d653fccdb276",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    ",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "    pm.expect(response.payment_data).to.have.property('status');",
                        "    pm.expect(response.payment_data.status).to.equal('COMPLETED');",
                        "})"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "3cd82d25-6188-4545-85f3-d97d92e79ade",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"payment_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_update}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments",
                      "{{payment_id_to_update}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-3cd82d25-6188-4545-85f3-d97d92e79ade"
              }
            ],
            "id": "5d4d4507-58d2-4ccc-a0bf-babb183b38e5",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payments** to create new Installment payment (two-phase), [see more](https://integration.unlimit.com/#createPayment).\n    \n\n**How to create two-phase Installment payment:**\n\n- Make POST-request\n- Click on 3DS redirect URL from response message\n- Emulate successful 3DS validation\n- Make PATСH-request to update (complete) Installment payment\n    \n\n**Important:** in POST-request non-3DS card is used. These settings are relevant only for the test collection (due to Sandbox features) - real Installment payments can be created only for cards with 3DS enabled",
            "uid": "10462328-5d4d4507-58d2-4ccc-a0bf-babb183b38e5"
          },
          {
            "name": "Create payment in server-to-server mode",
            "item": [
              {
                "name": "Create payment with passing 3-D Secure independently",
                "item": [
                  {
                    "name": "Create payment with 3-D secure results",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d36774-35bf-4366-8380-1d9191161ba5",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI');",
                            "var password = pm.environment.get('S2S_PASSWORD_EXMPI');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);",
                            "",
                            "",
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7108ef8-3109-46b3-9eda-2ff4419dcc8c",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "354172de-22b2-42bb-88b0-59f73f583ff4",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    },\n    \"three_d_secure\": {\n        \"card_enrollment\": \"Y\",\n        \"cavv\": \"AAABABhVGHmHFVORcFUYEGddqYo=\",\n        \"status\": \"Y\",\n        \"three_d_secure_flow\": \"3DS2C\",\n        \"xid\": \"c7c3c5d3-77a9-4106-b677-8e91b2a052bd\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-354172de-22b2-42bb-88b0-59f73f583ff4"
                  },
                  {
                    "name": "Create payment without 3-D secure results",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daeb1068-d13f-4d6c-b7ca-b97df3875882",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI_NO3DS');",
                            "var password = pm.environment.get('S2S_PASSWORD_EXMPI_NO3DS');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);",
                            "",
                            "",
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72e6cb7-e2e5-4435-97b0-411f34a842a5",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "   ",
                            "    pm.expect(response).to.have.property('payment_data');",
                            "    pm.expect(response.payment_data).to.have.property('id');",
                            "    ",
                            "    pm.execution.setNextRequest('Create payment with 3-D secure (frictionless)');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "9b4c2695-3e50-487f-a3c1-a69b1d27548b",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-9b4c2695-3e50-487f-a3c1-a69b1d27548b"
                  }
                ],
                "id": "1adfbc65-bcbb-40db-903d-afec55e7d69f",
                "description": "In case where merchant passes 3-D Secure independently, result parameters of 3-D Secure should be collected by the merchant and sent in \"Create payment\" request with additional structure three_d_secure",
                "uid": "10462328-1adfbc65-bcbb-40db-903d-afec55e7d69f"
              },
              {
                "name": "Create payment with 3-D Secure (frictionless flow)",
                "item": [
                  {
                    "name": "Create payment with 3-D secure (frictionless)",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb41ef1-729c-4586-93c0-f3f8b4c8a015",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                            "var password = pm.environment.get('S2S_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6634c58c-32e0-4e13-8b74-626f310499de",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('payment_data');",
                            "    pm.expect(response.payment_data).to.have.property('id');",
                            "  ",
                            "    postman.setNextRequest('Create payment with 3-D secure (challenge)');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "d3cd1bdc-02c5-45c1-b3de-326da17822b9",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_FRICTIONLESS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    },\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-d3cd1bdc-02c5-45c1-b3de-326da17822b9"
                  }
                ],
                "id": "6fb2e786-cd37-4df0-b986-143f4df011cc",
                "description": "If card is 3-D Secure and authentication pass through Frictionless flow then merchant gets synchronous payment response in JSON format. In  \ncase of error JSON with error result will be returned.\n\n\"return_urls.return_url\" must be replaced with Merchant's webhook url",
                "uid": "10462328-6fb2e786-cd37-4df0-b986-143f4df011cc"
              },
              {
                "name": "Create payment with 3-D Secure (challenge flow)",
                "item": [
                  {
                    "name": "Create payment with 3-D secure (challenge)",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa87f03-1d4f-4b6b-98b5-8645ec343290",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                            "var password = pm.environment.get('S2S_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f103fef2-595e-4145-b652-c9add7d1f502",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('CReq');",
                            "    pm.expect(response).to.have.property('id');",
                            "    pm.collectionVariables.set('creq', response.CReq);",
                            "    pm.collectionVariables.set('payment_id_to_complete_3ds', response.id);",
                            "    postman.setNextRequest('Send CReq to ACS');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "d4e4d9df-04c7-4a8f-a7f9-16b0d0536672",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    },\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-d4e4d9df-04c7-4a8f-a7f9-16b0d0536672"
                  },
                  {
                    "name": "Send CReq to ACS",
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f3d9c6-11dc-41da-9e36-9e8afcdacd34",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    })",
                            "    postman.setNextRequest('Complete payment with CRes');"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "933fa4cd-6bfe-4cae-94d4-c2f8d526fb8c",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "method": "POST",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/sandbox-emulator/3ds2/browserCReqS2S?creq={{creq}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "sandbox-emulator",
                          "3ds2",
                          "browserCReqS2S"
                        ],
                        "query": [
                          {
                            "key": "creq",
                            "value": "{{creq}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-933fa4cd-6bfe-4cae-94d4-c2f8d526fb8c"
                  },
                  {
                    "name": "Complete payment with CRes",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c319631-48ce-42d5-a6cf-eb1cee2f0ed1",
                          "exec": [
                            "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                            "var password = pm.environment.get('S2S_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cd3c7c-2cef-446e-877d-65af8ceebdfc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();   ",
                            "    pm.expect(response).to.have.property('payment_data');",
                            "    pm.expect(response.payment_data).to.have.property('id'); ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "dbde63bd-3be6-40c1-8aa0-a3f250628525",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"CONFIRM_3DS\",\n    \"CRes\": \"eyJtZXNzYWdlVHlwZSI6IkNSZXEiLCJtZXNzYWdlVmVyc2lvbiI6IjIuMS4wIiwidGhyZWVEU1NlcnZlclRyYW5zSUQiOiJiM2UzZDY4Mi0zNWNkLTRjYjQtOTVmOS01Yjg2ZmVlYzg5YjciLCJhY3NUcmFuc0lEIjoiWTFMU1NhVVVoQzROWUVKMXBhM2h2aFRWeTZ1YlE4MXU1MDBQIiwiY2hhbGxlbmdlV2luZG93U2l6ZSI6IjA1In0=\"\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payments/{{payment_id_to_complete_3ds}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payments",
                          "{{payment_id_to_complete_3ds}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-dbde63bd-3be6-40c1-8aa0-a3f250628525"
                  }
                ],
                "id": "c3b9a60f-494f-4520-8e81-17f404b27f79",
                "description": "If card is 3-D Secure and authentication pass Challenge flow then merchant gets redirect_url, CReq and Id parameters in JSON  \nformat. In case of error JSON with error result will be returned.\n\n\"return_urls.return_url\" must be replaced with Merchant's webhook url",
                "uid": "10462328-c3b9a60f-494f-4520-8e81-17f404b27f79"
              }
            ],
            "id": "801d1423-ff47-4d57-938e-f0193ee00729",
            "description": "In Server-to-Server Mode the Customer interacts only with the Merchant's website and all interactions between Merchant and Unlimint are server-to-server. In this case the Merchant has to collect cardholder data on his website that must be PCI DSS certified for that and then send it as a POST request to the Unlimint Endpoint. In response to Merchant's request, Unlimint server sends URL the Customer should be redirected to if 3-D Secure is required or Result JSON response if 3-D Secure is not required.",
            "uid": "10462328-801d1423-ff47-4d57-938e-f0193ee00729"
          },
          {
            "name": "Create payments (by tokens)",
            "item": [
              {
                "name": "Create payment (ApplePay, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "7976d009-f8a1-46c7-a8e1-9ae0d6b98a04",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"APPLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-7976d009-f8a1-46c7-a8e1-9ae0d6b98a04"
              },
              {
                "name": "Create payment (ApplePay, s2s)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI_NO3DS');",
                        "var password = pm.environment.get('S2S_PASSWORD_EXMPI_NO3DS');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "2fdb1c4a-3561-428a-bd2a-d86948d411d7",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"APPLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-2fdb1c4a-3561-428a-bd2a-d86948d411d7"
              },
              {
                "name": "Create payment (GooglePay, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "7e5a15f2-dcdc-4fb9-8035-d82fda133f88",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"GOOGLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-7e5a15f2-dcdc-4fb9-8035-d82fda133f88"
              },
              {
                "name": "Create payment (GooglePay, s2s)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE_EXMPI_NO3DS');",
                        "var password = pm.environment.get('S2S_PASSWORD_EXMPI_NO3DS');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('payment_data');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "82224134-8568-44f8-8561-717fe5f7da61",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"GOOGLEPAY\",\n            \"pan\": \"{{DPAN}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"eci\": \"02\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iAAIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-82224134-8568-44f8-8561-717fe5f7da61"
              },
              {
                "name": "Create payment (GooglePay, pan only, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "a2afc693-5e98-4fa3-ad32-0b5d22a4e5db",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"GOOGLEPAY\",\n            \"pan\": \"{{DPAN_AUTH}}\",\n            \"expiration\": \"{{expiration}}\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-a2afc693-5e98-4fa3-ad32-0b5d22a4e5db"
              },
              {
                "name": "Create payment (Network token, gateway)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                        "",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "c4e15909-a55b-43b2-aafc-9e6dc553b836",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"ip\":\"{{$randomIP}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"network_token\": \"true\",\n            \"token_type\": \"NETWORK\",\n            \"pan\": \"{{DPAN_AUTH}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"token_cryptogram\": \"AFrSKRTnTT5iJKIbc07XAAADFA==\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-c4e15909-a55b-43b2-aafc-9e6dc553b836"
              }
            ],
            "id": "caccb6cc-4902-41d9-97e7-4f0f8535b5f8",
            "description": "- This section presents examples of requests with decrypted data from Google Pay, Apple Pay, and Network Tokenization\n    \n- Supported modes: Gateway and server-to-server\n    \n- 3-D Secure can be called for requests with network token and for GooglePay PAN-only case",
            "uid": "10462328-caccb6cc-4902-41d9-97e7-4f0f8535b5f8"
          }
        ],
        "id": "cb952acc-0a49-4299-b770-b07f602f5d26",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "3cef093f-6da5-4789-ad9b-7b7e7e4ce333"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "b1f50e25-b697-4f18-bcfd-9de82eef721b"
            }
          }
        ],
        "uid": "10462328-cb952acc-0a49-4299-b770-b07f602f5d26"
      },
      {
        "name": "Payments (ACT/OFT)",
        "item": [
          {
            "name": "Create Account Funding Transaction",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "41c3ce79-dc99-489b-95f2-89dc27bc4af8",
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a41f6cd9-163d-4ea6-a565-f7d70e57c4cb",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "",
                    "    var response = pm.response.json();",
                    "    pm.expect(response).to.have.property('redirect_url');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              }
            ],
            "id": "4ef4aebf-1af6-404e-ab57-923199dfb1a6",
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "type": "string",
                      "value": "{{access_token}}"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "type": "text"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"full_name\": \"MR SENDER\",\n        \"birth_date\": \"2000-04-22\",\n        \"living_address\": {\n            \"country\": \"USA\",\n            \"state\": \"NE\",\n            \"city\": \"Dallas\",\n            \"address\": \"Black Road 112, 3\"\n        }\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"MR SENDRER\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        },\n        \"recipient_info\": \"MR RECIPIENT\"\n    }\n}"
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "payments"
                ]
              }
            },
            "response": [],
            "uid": "10462328-4ef4aebf-1af6-404e-ab57-923199dfb1a6"
          },
          {
            "name": "Create Original Credit Transaction",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e121e80-1189-44b3-b403-a64500548ab7",
                  "exec": [
                    "var uuid = require('uuid');",
                    "",
                    "var merchant_order_id = uuid.v4();",
                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1565a53-2dd4-4176-b464-fa049952b4e7",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.have.status(201);",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    pm.expect(response.payout_data).to.have.property('id');",
                    "    ",
                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                    "    ",
                    "    postman.setNextRequest('Get payout by merchant order id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              }
            ],
            "id": "76981098-0d0f-4552-a566-14954e1f5e96",
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "type": "string",
                      "value": "{{access_token}}"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "type": "text"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payout_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"funding_source\": \"02\",\n        \"network_trans_id\": \"305086217313972\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"expiration\": \"{{expiration}}\"\n        },\n        \"recipient_info\": \"MR RECIPIENT\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"full_name\": \"MR SENDER\",\n        \"birth_date\": \"2000-04-22\",\n        \"living_address\": {\n            \"country\": \"USA\",\n            \"state\": \"NE\",\n            \"city\": \"Dallas\",\n            \"address\": \"Black Road 112, 3\"\n        }\n    }\n}"
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "payouts"
                ]
              }
            },
            "response": [],
            "uid": "10462328-76981098-0d0f-4552-a566-14954e1f5e96"
          }
        ],
        "id": "07fe4960-a107-4a6a-bc59-60633314ee84",
        "description": "**AFTs (Account Funding Transactions)** are special types of card operations supported by Visa Direct and MasterСard MoneySend, where funds are pulled from a card without a traditional purchase being involved.\n\nThis is used when a Customer wants to move money from their card into another account, e.g. funding a digital wallet (PayPal), transferring funds to an investment or crypto account.\n\n**OCTs (Original Credit Transactions)** are special types of card operations supported by Visa Direct and MasterСard MoneySend, where funds are _pushed_ to a card.\n\nThis is used for disbursing funds to a customer’s card in real-time or near real-time, for example:\n\n- Salary or freelancer payouts\n    \n- Cashback, insurance, or loans\n    \n- Peer-to-peer (P2P) money transfers",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0898f20-6f8b-42b1-b7be-0074a80c8658",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ac73dde-83d3-481a-bf81-91414772b1b7",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ]
            }
          }
        ],
        "uid": "10462328-07fe4960-a107-4a6a-bc59-60633314ee84"
      },
      {
        "name": "Payments (APMs)",
        "item": [
          {
            "name": "Worldwide",
            "item": [
              {
                "name": "PayPal",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PayPal payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b9852543-11ec-4ef8-b276-c943da1930d9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5e5f5553-d1d8-47a6-a321-aa33358ddfc6"
                            }
                          }
                        ],
                        "id": "ebf4eb19-1eaf-425f-a0f5-bf20dfc499ae",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAYPAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ebf4eb19-1eaf-425f-a0f5-bf20dfc499ae"
                      }
                    ],
                    "id": "ecd73b23-997d-4cd9-bf22-a343ce35db79",
                    "uid": "10462328-ecd73b23-997d-4cd9-bf22-a343ce35db79"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PayPal payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "268836e8-29fd-47f8-8390-3cea479cee71"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b1c02c2c-5abd-403a-a79a-3ea1f4d27348"
                            }
                          }
                        ],
                        "id": "151c919d-169f-46e2-90a2-cc855fb91f77",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAYPAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-151c919d-169f-46e2-90a2-cc855fb91f77"
                      }
                    ],
                    "id": "ac8165fd-e854-4201-a98f-3cb4b738b11f",
                    "uid": "10462328-ac8165fd-e854-4201-a98f-3cb4b738b11f"
                  }
                ],
                "id": "c2dd979c-a784-4f4a-a9ac-c75e54f0a974",
                "uid": "10462328-c2dd979c-a784-4f4a-a9ac-c75e54f0a974"
              },
              {
                "name": "ALIPAYPLUS",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create ALIPAYPLUS payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "cf33d0b9-e556-4192-aed5-f26cfe22c381"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "757586ce-78f4-492f-9aba-fcd2e52990a7"
                            }
                          }
                        ],
                        "id": "7f84deae-6a46-4b76-9874-1437b3832df1",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALIPAYPLUS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-7f84deae-6a46-4b76-9874-1437b3832df1"
                      }
                    ],
                    "id": "78f1df00-35c5-4c46-bcde-136480e869b1",
                    "uid": "10462328-78f1df00-35c5-4c46-bcde-136480e869b1"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create ALIPAYPLUS payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4a43660e-2525-43e0-b07e-04ba36e1e612"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c8a7fad1-aef0-4cd9-ac68-aa2c3c32277a"
                            }
                          }
                        ],
                        "id": "30e7441c-097a-4763-a900-f4d9d1b263b9",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALIPAYPLUS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-30e7441c-097a-4763-a900-f4d9d1b263b9"
                      }
                    ],
                    "id": "11db8018-4cd1-494e-9351-3ea97db04082",
                    "uid": "10462328-11db8018-4cd1-494e-9351-3ea97db04082"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create ALIPAYPLUS payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9681f4c4-cf53-4237-b5e7-b423aeac03f2"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "aeedfc61-71af-4da1-b6c5-33f2bdfb0980"
                            }
                          }
                        ],
                        "id": "a494820c-eadb-4386-9387-325f1feef0ef",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALIPAYPLUS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a494820c-eadb-4386-9387-325f1feef0ef"
                      }
                    ],
                    "id": "073581b8-8275-4483-8694-f63e0666e74b",
                    "uid": "10462328-073581b8-8275-4483-8694-f63e0666e74b"
                  }
                ],
                "id": "f7be43e5-be31-448c-b721-692f9546b038",
                "uid": "10462328-f7be43e5-be31-448c-b721-692f9546b038"
              }
            ],
            "id": "96002549-b51f-42c7-a09a-0379487c4162",
            "uid": "10462328-96002549-b51f-42c7-a09a-0379487c4162"
          },
          {
            "name": "Africa",
            "item": [
              {
                "name": "Direct Banking Nigeria",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create DIRECTBANKINGNGA payment (gateway)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "686fbdad-3957-417b-8d0c-ef204e457da5"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fb798f84-1f93-4503-a906-02ecf6c6fe33"
                            }
                          }
                        ],
                        "id": "dbb49adb-f1cf-4ad3-ba8f-96bbc1419221",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGNGA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"bank_code\": \"057\",\n        \"id\": \"1111111111\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"1234567891\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"birth_date\": \"2010-10-10\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-dbb49adb-f1cf-4ad3-ba8f-96bbc1419221"
                      }
                    ],
                    "id": "262863d5-90bf-48ee-9ed0-f17bf7130689",
                    "uid": "10462328-262863d5-90bf-48ee-9ed0-f17bf7130689"
                  },
                  {
                    "name": "Payment Page mode",
                    "item": [
                      {
                        "name": "Create DIRECTBANKINGNGA payment (payment page mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3392c9f9-a901-4936-babf-15c7aa250c76"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f2ac4f79-450f-4ad6-8d70-963701593668"
                            }
                          }
                        ],
                        "id": "9b682937-cad1-4393-950c-77f1e7912a55",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGNGA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1780004070\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"1234567891\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-9b682937-cad1-4393-950c-77f1e7912a55"
                      }
                    ],
                    "id": "0e536c4c-2096-496d-94ce-0ff048ec1fec",
                    "uid": "10462328-0e536c4c-2096-496d-94ce-0ff048ec1fec"
                  }
                ],
                "id": "cff1fb26-7fde-4970-ab39-c544842f84cb",
                "uid": "10462328-cff1fb26-7fde-4970-ab39-c544842f84cb"
              },
              {
                "name": "M-Pesa",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create MPESA payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a80c3c58-b7d0-451e-8667-973fa1411190"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "90efbed5-3c5e-47c6-97f3-b5bc32bd06de"
                            }
                          }
                        ],
                        "id": "46990125-db87-4e9d-90b7-77fb698875ad",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-46990125-db87-4e9d-90b7-77fb698875ad"
                      }
                    ],
                    "id": "ec28ce33-08cb-4bd1-b107-daccea27b862",
                    "uid": "10462328-ec28ce33-08cb-4bd1-b107-daccea27b862"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create MPESA payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e77be6e7-2438-4f1c-8feb-7cdb9f3c5ff0"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3f9670c2-9ea6-4a43-bd45-4bc046d63869"
                            }
                          }
                        ],
                        "id": "2896a309-f747-45db-8b8a-23cf12bf210f",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2896a309-f747-45db-8b8a-23cf12bf210f"
                      }
                    ],
                    "id": "124dd8a5-d33a-486f-b175-da35d2089158",
                    "uid": "10462328-124dd8a5-d33a-486f-b175-da35d2089158"
                  }
                ],
                "id": "59d0b6d1-6532-4343-ad2c-9cce4c1fc326",
                "uid": "10462328-59d0b6d1-6532-4343-ad2c-9cce4c1fc326"
              },
              {
                "name": "M-Pesa Tanzania",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create M-Pesa Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "91603103-a636-4570-9bad-2ccce11399e1"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d11a8f68-3dfd-4843-8151-070179963fa3"
                            }
                          }
                        ],
                        "id": "65a88e76-bcbb-49a7-8497-8db97886b936",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MPESATZS\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"+255740123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{$randomEmail}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-65a88e76-bcbb-49a7-8497-8db97886b936"
                      }
                    ],
                    "id": "23a9576c-4410-4ce5-a285-288944e34548",
                    "uid": "10462328-23a9576c-4410-4ce5-a285-288944e34548"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create M-Pesa Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "0073d8af-3bc2-4172-b80c-0e3939e96e46"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5460e36a-bfb5-44b8-9a2a-55735511954e"
                            }
                          }
                        ],
                        "id": "cb7c3226-a1ae-47ff-8b1f-a5d7516dfa05",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MPESATZS\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"TZS\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-cb7c3226-a1ae-47ff-8b1f-a5d7516dfa05"
                      }
                    ],
                    "id": "e7c2ab79-05b2-401b-98a5-8572772fdd4b",
                    "uid": "10462328-e7c2ab79-05b2-401b-98a5-8572772fdd4b"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create M-Pesa Tanzania payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f73c8a4a-e4c7-4c20-bfbb-3f6ab2ecaf64"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1e52a4ed-7d4d-4af1-9c84-50626faa9643"
                            }
                          }
                        ],
                        "id": "7a27a3d7-7e2f-4239-b34a-c940400e3231",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman\"\n    },\n    \"payment_method\": \"MPESATZS\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"+255740123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{$randomEmail}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-7a27a3d7-7e2f-4239-b34a-c940400e3231"
                      }
                    ],
                    "id": "63efa845-89da-4b6d-8e0b-1b6c07666246",
                    "uid": "10462328-63efa845-89da-4b6d-8e0b-1b6c07666246"
                  }
                ],
                "id": "d648bfba-d979-4268-a4a6-76bd1cf6b7d8",
                "uid": "10462328-d648bfba-d979-4268-a4a6-76bd1cf6b7d8"
              },
              {
                "name": "Payattitude",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Payattitude payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c1985e47-d416-4cae-a269-7c782a878b1a"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "89d88013-af5d-4827-82a6-1836fa041080"
                            }
                          }
                        ],
                        "id": "4ff5be4d-2035-4654-981c-17c45d4801c8",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payattitude\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"2341234567890\"\n    },\n    \"customer\": {\n            \"full_name\": \"{{$randomFullName}}\",\n            \"email\": \"{{CUSTOMER_EMAIL}}\"\n        }\n    }",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-4ff5be4d-2035-4654-981c-17c45d4801c8"
                      }
                    ],
                    "id": "25f14892-b906-47ca-aa7f-c8e2578b09d0",
                    "uid": "10462328-25f14892-b906-47ca-aa7f-c8e2578b09d0"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Payattitude payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9cb2d27a-27cf-4819-a385-4060df793e7a"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d0026281-ee32-4b61-a38b-5d44b09236f4"
                            }
                          }
                        ],
                        "id": "fb75a177-9d9e-40fc-b661-ab12fe2e3afe",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payattitude\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"2341234567890\"\n    },\n    \"customer\": {\n            \"full_name\": \"{{$randomFullName}}\",\n            \"email\": \"{{CUSTOMER_EMAIL}}\"\n        }\n    }",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-fb75a177-9d9e-40fc-b661-ab12fe2e3afe"
                      }
                    ],
                    "id": "b2f9cfa3-b3be-41e9-bdff-039aa1aa8c9e",
                    "uid": "10462328-b2f9cfa3-b3be-41e9-bdff-039aa1aa8c9e"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Payattitude payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8efff16b-53e5-41eb-a2b5-68b35b66b13d"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "04badef3-db69-4682-a08c-f0d6d216d46b"
                            }
                          }
                        ],
                        "id": "f07d7528-a2c5-437e-b833-4e278c8122e2",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payattitude\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"2341234567890\"\n    },\n    \"customer\": {\n            \"full_name\": \"{{$randomFullName}}\",\n            \"email\": \"{{CUSTOMER_EMAIL}}\"\n        }\n    }",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-f07d7528-a2c5-437e-b833-4e278c8122e2"
                      }
                    ],
                    "id": "3361db32-ed79-4a40-8eb1-b73af5a03b41",
                    "uid": "10462328-3361db32-ed79-4a40-8eb1-b73af5a03b41"
                  }
                ],
                "id": "3d666755-85ac-4622-b589-9c9db257dbb6",
                "uid": "10462328-3d666755-85ac-4622-b589-9c9db257dbb6"
              },
              {
                "name": "Pesalink",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create pesalink payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e53eee14-0bb0-4748-aa7a-71cc6571280f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f6cd1893-e256-490f-a448-eed616be45cf"
                            }
                          }
                        ],
                        "id": "a2172ac4-5587-45ae-86a5-217de90b56a8",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"pesalink\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a2172ac4-5587-45ae-86a5-217de90b56a8"
                      }
                    ],
                    "id": "3a6d6c41-83a3-4b47-be48-3dd924f920ea",
                    "uid": "10462328-3a6d6c41-83a3-4b47-be48-3dd924f920ea"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create pesalink payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6231b86b-41d3-4ef6-b614-d2fdd3216447"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a7aa7ca1-dfd9-43fb-941e-6a27903f79b4"
                            }
                          }
                        ],
                        "id": "f64444a2-c484-46f3-8806-41eb0b42a355",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"pesalink\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-f64444a2-c484-46f3-8806-41eb0b42a355"
                      }
                    ],
                    "id": "1a319381-9148-47de-9b39-fea2733c284e",
                    "uid": "10462328-1a319381-9148-47de-9b39-fea2733c284e"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create pesalink payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "62c4e588-91d6-4b49-a008-d95131ebce25"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "aab6245a-e140-493e-860d-acdb84c3b689"
                            }
                          }
                        ],
                        "id": "03f12888-dc70-41ca-b5f7-f41492347ee3",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"pesalink\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"KES\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-03f12888-dc70-41ca-b5f7-f41492347ee3"
                      }
                    ],
                    "id": "aa165bce-87a4-4524-af77-e95309761d84",
                    "uid": "10462328-aa165bce-87a4-4524-af77-e95309761d84"
                  }
                ],
                "id": "94491d3c-559e-4656-953f-58c796407ba2",
                "uid": "10462328-94491d3c-559e-4656-953f-58c796407ba2"
              },
              {
                "name": "NGN Virtual Account",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create NGNVA payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "91550729-84bc-4661-9884-f68e705c5817"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e0538b79-1ba7-48f3-89a2-4fe4e1727aee"
                            }
                          }
                        ],
                        "id": "64f830b4-f1c6-4ab1-ba27-eaa0944978b5",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"NGNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-64f830b4-f1c6-4ab1-ba27-eaa0944978b5"
                      }
                    ],
                    "id": "c922d1dd-3493-4b6d-a8c7-14852ada8b68",
                    "uid": "10462328-c922d1dd-3493-4b6d-a8c7-14852ada8b68"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create NGNVA payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "19c9bb72-962c-4ad1-b52d-dbc0265fd287"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fd9585a5-a569-4b2f-ac33-b115373fce5e"
                            }
                          }
                        ],
                        "id": "1eda600f-8db5-41d1-891e-48566e68429c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"NGNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-1eda600f-8db5-41d1-891e-48566e68429c"
                      }
                    ],
                    "id": "17bebf77-afb5-403a-9b9a-5198d01c5d61",
                    "uid": "10462328-17bebf77-afb5-403a-9b9a-5198d01c5d61"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create NGNVA payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "0f0b9803-5946-43af-9365-101c9143aff0"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9dc91264-7ca0-40ad-be02-18ca21339ccb"
                            }
                          }
                        ],
                        "id": "967cf6e2-870b-4fcf-a691-0277a165261a",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"NGNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"NGN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-967cf6e2-870b-4fcf-a691-0277a165261a"
                      }
                    ],
                    "id": "c1ae454a-8c24-4cb4-8898-f593a4fc4c3f",
                    "uid": "10462328-c1ae454a-8c24-4cb4-8898-f593a4fc4c3f"
                  }
                ],
                "id": "7cc1d85c-f913-4196-8ed3-9bec370c7859",
                "uid": "10462328-7cc1d85c-f913-4196-8ed3-9bec370c7859"
              },
              {
                "name": "Tigopesa Tanzania",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Tigopesa Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "0ec726c4-d8b0-4b90-925d-d7b09f948100"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "93ff2782-d26c-4542-8a16-ff44cb141f64"
                            }
                          }
                        ],
                        "id": "d2805d32-a7e8-44cf-ae91-6ac98c4f191c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"TIGOPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d2805d32-a7e8-44cf-ae91-6ac98c4f191c"
                      }
                    ],
                    "id": "2851ae96-de09-45b9-9fb0-c5160bdfeb2a",
                    "uid": "10462328-2851ae96-de09-45b9-9fb0-c5160bdfeb2a"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Tigopesa Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7ae17d7e-e003-43cc-9a5e-87d62fb827de"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "706c25f2-79a8-4c3c-b497-3a27b86180df"
                            }
                          }
                        ],
                        "id": "ea544d65-4c9f-48f0-990d-a427b72cda4f",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"TIGOPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ea544d65-4c9f-48f0-990d-a427b72cda4f"
                      }
                    ],
                    "id": "bf24e9ac-0a3b-45c6-a4ac-e46c24f5294f",
                    "uid": "10462328-bf24e9ac-0a3b-45c6-a4ac-e46c24f5294f"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Tigopesa Tanzania payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "30e6b3aa-d582-4974-82a5-7f5ca2ea9431"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f9d5c394-36b9-49f6-8951-d9cac1a257b5"
                            }
                          }
                        ],
                        "id": "3ade0a79-4f10-4f10-8547-a30f6a5467b5",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"TIGOPESA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-3ade0a79-4f10-4f10-8547-a30f6a5467b5"
                      }
                    ],
                    "id": "bb0224a7-c884-41c4-bf70-e68daf9f19db",
                    "uid": "10462328-bb0224a7-c884-41c4-bf70-e68daf9f19db"
                  }
                ],
                "id": "a14876a0-d93a-48dd-82fe-d39d7eb03663",
                "uid": "10462328-a14876a0-d93a-48dd-82fe-d39d7eb03663"
              },
              {
                "name": "Airtel",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Airtel payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8c48dbf4-0893-4191-b81e-462e0687638c"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "25f816da-d505-4c84-a664-e9d95b2f91eb"
                            }
                          }
                        ],
                        "id": "757e510a-2a93-4c32-9f1e-8ca95ef2a7e4",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTEL\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254100123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-757e510a-2a93-4c32-9f1e-8ca95ef2a7e4"
                      }
                    ],
                    "id": "8506c560-2961-43bb-bc4f-d9b07cec5058",
                    "uid": "10462328-8506c560-2961-43bb-bc4f-d9b07cec5058"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Airtel payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a926371c-9d45-438f-8458-2995f51e3bcf"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f774a273-ea5e-4106-864e-45ec3a262ccf"
                            }
                          }
                        ],
                        "id": "c35b617e-e47a-4433-a970-a92d5c6dab5d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTEL\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254100123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c35b617e-e47a-4433-a970-a92d5c6dab5d"
                      }
                    ],
                    "id": "e2bff59e-20f9-4e8b-8e56-c92a82e722f0",
                    "uid": "10462328-e2bff59e-20f9-4e8b-8e56-c92a82e722f0"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Airtel payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fd323e48-20a3-478d-80b3-ee02f62c6092"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "df6ac005-1eb5-48b0-bbdb-ac05ff220a68"
                            }
                          }
                        ],
                        "id": "63d93761-7c99-4be7-84dc-bc27b37a0401",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTEL\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254100123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-63d93761-7c99-4be7-84dc-bc27b37a0401"
                      }
                    ],
                    "id": "a0d0761d-cd31-4141-a02a-48469282fe8c",
                    "uid": "10462328-a0d0761d-cd31-4141-a02a-48469282fe8c"
                  }
                ],
                "id": "4973833b-e3d9-4d44-a285-775123ebbebc",
                "uid": "10462328-4973833b-e3d9-4d44-a285-775123ebbebc"
              },
              {
                "name": "Airtel Tanzania",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Airtel Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e3121a58-eca8-42ff-9d0f-4c33f0ea1f27"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "be5869b3-83cd-4853-ac5e-c54e61441cbb"
                            }
                          }
                        ],
                        "id": "1543802b-cfea-4d14-b3a0-a3bba076cd63",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTELTZS\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255780123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-1543802b-cfea-4d14-b3a0-a3bba076cd63"
                      }
                    ],
                    "id": "f0e3ba6a-fc39-4fc7-ab7d-e1178909d3d0",
                    "uid": "10462328-f0e3ba6a-fc39-4fc7-ab7d-e1178909d3d0"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Airtel Tanzania payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f5994c66-005d-45d3-a0b1-7b56ab27a70c"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5fbf4518-3cd7-47a0-b525-cb0b4728757f"
                            }
                          }
                        ],
                        "id": "2bc85732-9484-4705-a49c-15a225404e4e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTELTZS\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255780123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2bc85732-9484-4705-a49c-15a225404e4e"
                      }
                    ],
                    "id": "3ef6c92c-6e48-4eb1-b693-7461d40c137c",
                    "uid": "10462328-3ef6c92c-6e48-4eb1-b693-7461d40c137c"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Airtel Tanzania payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "09ba6d24-f59f-4d25-b1cb-cf3c9b4ccbf2"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2bd662fa-b0a1-46f6-8fe4-348477125774"
                            }
                          }
                        ],
                        "id": "3edee631-bd4f-4c3d-abee-d75f413074dd",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"AIRTELTZS\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255780123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-3edee631-bd4f-4c3d-abee-d75f413074dd"
                      }
                    ],
                    "id": "e84e541c-3acc-4e8f-b207-4c7928f91958",
                    "uid": "10462328-e84e541c-3acc-4e8f-b207-4c7928f91958"
                  }
                ],
                "id": "b24f3cae-b53e-419d-9e6b-d2af0911cd67",
                "uid": "10462328-b24f3cae-b53e-419d-9e6b-d2af0911cd67"
              }
            ],
            "id": "6deb3e27-693b-4925-ad82-6312fb840104",
            "uid": "10462328-6deb3e27-693b-4925-ad82-6312fb840104"
          },
          {
            "name": "Europe",
            "item": [
              {
                "name": "iDEAL",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create IDEAL payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8ae7c1d6-e832-4949-9896-ff4f8323523d"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "660dd2f2-7729-48d5-9275-645251e4bc59"
                            }
                          }
                        ],
                        "id": "2f09ef38-ad95-46e3-a398-84fedfc9d9ba",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"IDEAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2f09ef38-ad95-46e3-a398-84fedfc9d9ba"
                      }
                    ],
                    "id": "069602c5-689a-49b2-93e4-bacd5944a97d",
                    "uid": "10462328-069602c5-689a-49b2-93e4-bacd5944a97d"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create IDEAL payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "570624c5-2970-47d9-86ce-0865ec27274a"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5648ce33-b16f-46ee-8adc-6078a5e1c423"
                            }
                          }
                        ],
                        "id": "94dda321-06e9-45f6-8b34-752663874a93",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"IDEAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-94dda321-06e9-45f6-8b34-752663874a93"
                      }
                    ],
                    "id": "959a7804-6e8b-4802-9665-a2ecc1acd908",
                    "uid": "10462328-959a7804-6e8b-4802-9665-a2ecc1acd908"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create IDEAL payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "8573ed43-88a8-42e2-b4fa-f9febfd609cb",
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "7615e039-9b2e-4f68-b608-705e540dc606",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "35137f32-d31d-47a5-8701-d40aabbaf7c9",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"IDEAL\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-35137f32-d31d-47a5-8701-d40aabbaf7c9"
                      }
                    ],
                    "id": "1067983a-baf0-4590-b35e-49b03bb5fc4e",
                    "uid": "10462328-1067983a-baf0-4590-b35e-49b03bb5fc4e"
                  }
                ],
                "id": "ddb6225b-30aa-4b45-8282-b1479e6ba403",
                "uid": "10462328-ddb6225b-30aa-4b45-8282-b1479e6ba403"
              },
              {
                "name": "WeChat",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create WECHAT payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "b8a30af1-6473-48e0-9e31-54e015ab9e34",
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "d24761e3-d31a-449d-93db-8b8275167754",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "2ac84ce4-113a-4d12-a3ab-c1c9adce52fe",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"WECHAT\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2ac84ce4-113a-4d12-a3ab-c1c9adce52fe"
                      }
                    ],
                    "id": "e94bc502-264d-43e7-81ca-3143d2e131a9",
                    "uid": "10462328-e94bc502-264d-43e7-81ca-3143d2e131a9"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create WECHAT payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "99a1d208-60fd-4510-9ca9-9c6954b6d8bf",
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "2ee8ab3b-d84e-48fb-ba61-4609d5f409b8",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "982d4759-ca23-41d3-82b9-f632fbbd6943",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"WECHAT\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-982d4759-ca23-41d3-82b9-f632fbbd6943"
                      }
                    ],
                    "id": "e77fee23-65bd-4e0c-9c0d-794933ad4f95",
                    "uid": "10462328-e77fee23-65bd-4e0c-9c0d-794933ad4f95"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create WECHAT payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "36daeaa8-1225-4deb-bf54-a9a38ea84261"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d34b0a2f-a7c6-45ea-8763-f5939ee143a1"
                            }
                          }
                        ],
                        "id": "be5be6bc-7576-42c3-b891-85d49bb4326b",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"WECHAT\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-be5be6bc-7576-42c3-b891-85d49bb4326b"
                      }
                    ],
                    "id": "e9a3dbe0-0244-4aba-ac77-c2e65c58af34",
                    "uid": "10462328-e9a3dbe0-0244-4aba-ac77-c2e65c58af34"
                  }
                ],
                "id": "3a2cdaf3-aafa-4db6-ab0e-200bc4591dc2",
                "uid": "10462328-3a2cdaf3-aafa-4db6-ab0e-200bc4591dc2"
              },
              {
                "name": "Multibanco",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create MULTIBANCO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f2d29789-91b3-42e4-9d0a-570c3ff329a5"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "98e8aa7f-dab0-429d-8d0f-67c7828dd5b7"
                            }
                          }
                        ],
                        "id": "c1975ab0-6875-489f-b633-e0049727f16d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MULTIBANCO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c1975ab0-6875-489f-b633-e0049727f16d"
                      }
                    ],
                    "id": "bd0503a5-fb00-42d6-94aa-e7ce1467c6fe",
                    "uid": "10462328-bd0503a5-fb00-42d6-94aa-e7ce1467c6fe"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create MULTIBANCO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d84d30bf-36fb-4040-8e50-bd978304d859"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ccf20cdc-bbc6-47c7-b1cf-a2d00b1e414c"
                            }
                          }
                        ],
                        "id": "ff873845-6102-496d-891d-15e678fc02a0",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MULTIBANCO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ff873845-6102-496d-891d-15e678fc02a0"
                      }
                    ],
                    "id": "a3fc06fd-6bba-428e-886c-a58e972e1e56",
                    "uid": "10462328-a3fc06fd-6bba-428e-886c-a58e972e1e56"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create MULTIBANCO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "bd1868d4-80f6-4b8c-90f5-5c81e9c71e08",
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "4f316840-8891-47cf-aa57-653a4fb543d3",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "5880e358-9483-47cf-b594-8d01c342dccb",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MULTIBANCO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-5880e358-9483-47cf-b594-8d01c342dccb"
                      }
                    ],
                    "id": "ae43e252-4bac-4595-87ee-80622d1096c1",
                    "uid": "10462328-ae43e252-4bac-4595-87ee-80622d1096c1"
                  }
                ],
                "id": "007a35b4-4e88-431b-a4d5-32d3677e5940",
                "uid": "10462328-007a35b4-4e88-431b-a4d5-32d3677e5940"
              },
              {
                "name": "MBWAY",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create MBWAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8ebf7676-914c-46b2-9528-0c5be60c7c08"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d0a29a1d-c271-4120-be26-aa4fdc6c7cbb"
                            }
                          }
                        ],
                        "id": "8957acdb-6997-4c5a-ab82-e7485b8745ce",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MBWAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"351123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8957acdb-6997-4c5a-ab82-e7485b8745ce"
                      }
                    ],
                    "id": "90132853-b863-409f-9510-5a88c4b015c3",
                    "uid": "10462328-90132853-b863-409f-9510-5a88c4b015c3"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create MBWAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "bf42e5b1-1f3a-4469-8e02-6ef46aabd75f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "50dbac90-2735-491b-ac2c-630a4d875db3"
                            }
                          }
                        ],
                        "id": "d1f5269e-07c5-424b-8353-a9dfc3c52e35",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MBWAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"351123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d1f5269e-07c5-424b-8353-a9dfc3c52e35"
                      }
                    ],
                    "id": "47cb1078-7df1-4526-bded-070afaa79b76",
                    "uid": "10462328-47cb1078-7df1-4526-bded-070afaa79b76"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create MBWAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "da52e06c-11f2-447e-9215-9ca06c155436",
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "94bae025-084b-475b-b35e-8d662762b5af",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "78e1dd3b-4d6d-40af-ae5b-43bd0396ba94",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MBWAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"351123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-78e1dd3b-4d6d-40af-ae5b-43bd0396ba94"
                      }
                    ],
                    "id": "b9e05adb-d40a-4045-ac92-3e49f5219413",
                    "uid": "10462328-b9e05adb-d40a-4045-ac92-3e49f5219413"
                  }
                ],
                "id": "f15d2b2d-f042-4d77-b576-316720842554",
                "uid": "10462328-f15d2b2d-f042-4d77-b576-316720842554"
              },
              {
                "name": "OPENBANKING",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create OPENBANKING payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c83375bf-0f1e-4695-a594-214b3c516ff1"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "53eb786e-3bb9-4f73-a642-71dbad713f59"
                            }
                          }
                        ],
                        "id": "c9a5169b-aad1-4367-90a4-5cded986c2fe",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OPENBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n       \"bank_code\":  \"ksk_euskirchen_oauth_client_de\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c9a5169b-aad1-4367-90a4-5cded986c2fe"
                      }
                    ],
                    "id": "6485dcd2-5dc3-4f1c-b17c-cd475d85883d",
                    "uid": "10462328-6485dcd2-5dc3-4f1c-b17c-cd475d85883d"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create OPENBANKING payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c5657158-6e39-4e25-a539-2a5f59338e92"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "149a585e-43bd-4c23-a533-fbc4319b206f"
                            }
                          }
                        ],
                        "id": "8892e1b8-e762-4822-a853-b5c4b6d07588",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OPENBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8892e1b8-e762-4822-a853-b5c4b6d07588"
                      }
                    ],
                    "id": "ad70a077-7a31-44e5-971e-51b37812a705",
                    "uid": "10462328-ad70a077-7a31-44e5-971e-51b37812a705"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create OPENBANKING payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e10599d1-6cf2-47ce-acac-82b0a0892216"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3a116623-3f25-4a38-80c4-edbce0c7484c"
                            }
                          }
                        ],
                        "id": "dfca9d88-2c8f-4248-acfe-c20df53e8cde",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OPENBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n       \"bank_code\":  \"spk_schweinfurt_hassberge_oauth_client_de\",\n       \"id\":\"CY000000000000000000000000771\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-dfca9d88-2c8f-4248-acfe-c20df53e8cde"
                      }
                    ],
                    "id": "dac27910-ed5b-40d6-9558-491c1490425c",
                    "uid": "10462328-dac27910-ed5b-40d6-9558-491c1490425c"
                  }
                ],
                "id": "7309f3ea-2ff6-470a-a7de-4be538f42794",
                "uid": "10462328-7309f3ea-2ff6-470a-a7de-4be538f42794"
              },
              {
                "name": "BLIK",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create BLIK payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7b7d1828-e7aa-43a5-9562-7a91253f0eda"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1a590040-e284-411b-9ef7-4710e9d20f42"
                            }
                          }
                        ],
                        "id": "20dc8be1-807c-492f-a261-5388bd9da4de",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BLIK\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"PLN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-20dc8be1-807c-492f-a261-5388bd9da4de"
                      }
                    ],
                    "id": "0b602d52-b82c-4380-ac93-b3d5d0058f95",
                    "uid": "10462328-0b602d52-b82c-4380-ac93-b3d5d0058f95"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create BLIK payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4903071d-b5cd-48ac-8bf8-88b278872a9e"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e34ebee6-2a02-404f-aaa8-33a6d813f24e"
                            }
                          }
                        ],
                        "id": "ccc4dbd1-da2d-4c45-bd43-1b109ba9a954",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BLIK\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"PLN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ccc4dbd1-da2d-4c45-bd43-1b109ba9a954"
                      }
                    ],
                    "id": "e6ee2cfd-b749-4313-80fc-035bf94f468f",
                    "uid": "10462328-e6ee2cfd-b749-4313-80fc-035bf94f468f"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create BLIK payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "11eae3a9-e5db-444e-a582-e833e9d5e0b8"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7bb8e516-b30a-4040-a0e9-0856d29c41f6"
                            }
                          }
                        ],
                        "id": "44da8bca-11b0-471e-a46b-aa779ccb197d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BLIK\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"PLN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-44da8bca-11b0-471e-a46b-aa779ccb197d"
                      }
                    ],
                    "id": "4d69a863-7144-4253-8406-6dbb3c5fb144",
                    "uid": "10462328-4d69a863-7144-4253-8406-6dbb3c5fb144"
                  }
                ],
                "id": "d31f50ee-0a74-43d3-90cf-d7a7da6f3700",
                "uid": "10462328-d31f50ee-0a74-43d3-90cf-d7a7da6f3700"
              },
              {
                "name": "P24",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create P24 payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "dccd20ec-8c39-48d1-acb4-47b80ba4b08d"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "99fbe818-546f-429b-9830-f1c40970a6ac"
                            }
                          }
                        ],
                        "id": "4d9847d0-ebb8-46e3-b23f-440c273e880e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"P24\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n        \"bank_code\": 64\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-4d9847d0-ebb8-46e3-b23f-440c273e880e"
                      }
                    ],
                    "id": "77644bea-83a8-48af-b7af-8550c6d4f538",
                    "uid": "10462328-77644bea-83a8-48af-b7af-8550c6d4f538"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create P24 payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9aaa6d4d-5f0f-4e29-b31f-1fe5b729c8db"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9d65f1a2-2c98-4284-9883-93eec929f169"
                            }
                          }
                        ],
                        "id": "238b645f-9ab9-45e4-8308-59a6305be455",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"P24\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-238b645f-9ab9-45e4-8308-59a6305be455"
                      }
                    ],
                    "id": "1d09fece-3532-4d4c-a80a-ada2519f86db",
                    "uid": "10462328-1d09fece-3532-4d4c-a80a-ada2519f86db"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create P24 payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "cb4af302-e28a-463f-8b51-787a9a48bff4"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2d9b11c9-6c1c-419d-89bf-dfcccaa0b6df"
                            }
                          }
                        ],
                        "id": "bb2ceb4b-32d6-4a7f-8cdc-bac1b30d1f18",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"P24\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n        \"bank_code\": 64\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-bb2ceb4b-32d6-4a7f-8cdc-bac1b30d1f18"
                      }
                    ],
                    "id": "f19c58c9-2de9-4594-90a2-0c7fd0559eb8",
                    "uid": "10462328-f19c58c9-2de9-4594-90a2-0c7fd0559eb8"
                  }
                ],
                "id": "64e8f8eb-bbd4-4d3f-8018-e8bdb69dd731",
                "uid": "10462328-64e8f8eb-bbd4-4d3f-8018-e8bdb69dd731"
              },
              {
                "name": "BIZUM",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create BIZUM payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4d9445e7-0438-47b7-bd75-9075211930a4"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4b477f3f-a577-4ebb-9131-3f40d8dbb587"
                            }
                          }
                        ],
                        "id": "96fcd868-bfce-4306-8ccd-ea6f1c1304ca",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BIZUM\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n        \"id\": \"+12345678\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-96fcd868-bfce-4306-8ccd-ea6f1c1304ca"
                      }
                    ],
                    "id": "46be8995-243e-4f3f-830e-5061747b322f",
                    "uid": "10462328-46be8995-243e-4f3f-830e-5061747b322f"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create BIZUM payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e1b20423-dc1c-492b-9f3d-4325d73a155f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "51faf1cb-a285-4ab4-bb55-6cab56a347cc"
                            }
                          }
                        ],
                        "id": "70d52703-32cb-4afa-b488-9ec61eb8f747",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BIZUM\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-70d52703-32cb-4afa-b488-9ec61eb8f747"
                      }
                    ],
                    "id": "0d7bf8b1-2ace-4ec9-810b-a925c23f820c",
                    "uid": "10462328-0d7bf8b1-2ace-4ec9-810b-a925c23f820c"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create BIZUM payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "dd829043-773a-4277-957c-a25bac7962d3"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "02c4fa0b-8193-4c3f-a45d-e2f071f8b0a5"
                            }
                          }
                        ],
                        "id": "7653414e-d8a8-46be-9f82-47d21e78af38",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BIZUM\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    },\n    \"ewallet_account\":{\n        \"id\": \"+12345678\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-7653414e-d8a8-46be-9f82-47d21e78af38"
                      }
                    ],
                    "id": "7ef287b1-cf0a-4733-b7e0-88f5cace0709",
                    "uid": "10462328-7ef287b1-cf0a-4733-b7e0-88f5cace0709"
                  }
                ],
                "id": "90936dbe-122a-416f-b0c4-d8b88cdc93d2",
                "uid": "10462328-90936dbe-122a-416f-b0c4-d8b88cdc93d2"
              },
              {
                "name": "BANCONTACT",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create BANCONTACT payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "014ac5ff-afb8-4ff6-82ba-967851227b03"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c91031d0-0296-4aec-b533-1a15af390742"
                            }
                          }
                        ],
                        "id": "749e8234-dc52-4bff-b9aa-f4d4e63c24da",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCONTACT\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-749e8234-dc52-4bff-b9aa-f4d4e63c24da"
                      }
                    ],
                    "id": "26fcf40c-6528-441e-9208-dab16bf7a9bb",
                    "uid": "10462328-26fcf40c-6528-441e-9208-dab16bf7a9bb"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create BANCONTACT payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "575b6207-e525-4b74-80ae-3f9f36468d7b"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "810e7e54-ffd1-4e0a-985d-6c3a98bba0a0"
                            }
                          }
                        ],
                        "id": "c18470bc-360a-4369-9696-c548b48cfd8c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCONTACT\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c18470bc-360a-4369-9696-c548b48cfd8c"
                      }
                    ],
                    "id": "c979a3d7-cd7a-4c5a-8e6e-925a22af768e",
                    "uid": "10462328-c979a3d7-cd7a-4c5a-8e6e-925a22af768e"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create BANCONTACT payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f42a0770-8a04-49b5-ae49-c60248487da7"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ec8df4a7-5715-43e3-8295-4192e3e40677"
                            }
                          }
                        ],
                        "id": "3462c35e-87d0-421a-8dc8-a73e64476191",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCONTACT\",\n    \"payment_data\": {\n        \"amount\": \"5\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-3462c35e-87d0-421a-8dc8-a73e64476191"
                      }
                    ],
                    "id": "aec55eec-71db-4c62-a400-289a222b4872",
                    "uid": "10462328-aec55eec-71db-4c62-a400-289a222b4872"
                  }
                ],
                "id": "1ae06794-a358-4da9-af42-0cd8fc470d28",
                "uid": "10462328-1ae06794-a358-4da9-af42-0cd8fc470d28"
              },
              {
                "name": "SEPA Instant",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create SEPATRANSFER payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7aa10a4d-55d2-42a7-9f76-2c6df4b2b8a3"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c3546515-a2f2-499d-b185-403b99012c1f"
                            }
                          }
                        ],
                        "id": "8d50819c-0d0e-41e1-980b-b96255080a30",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SEPATRANSFER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8d50819c-0d0e-41e1-980b-b96255080a30"
                      }
                    ],
                    "id": "bad4de8c-ec96-49dd-9f2b-fe2c84d008b4",
                    "uid": "10462328-bad4de8c-ec96-49dd-9f2b-fe2c84d008b4"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create SEPATRANSFER payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9912a371-bafb-49bf-93a4-6db4b7a525b8"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4f35d7a3-26c9-4fbe-bd42-bc055223ac1b"
                            }
                          }
                        ],
                        "id": "9f6f2794-cacc-4402-8fb1-73ddd9c449d5",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SEPATRANSFER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-9f6f2794-cacc-4402-8fb1-73ddd9c449d5"
                      }
                    ],
                    "id": "088de785-c8d0-4279-865b-405babe800e7",
                    "uid": "10462328-088de785-c8d0-4279-865b-405babe800e7"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create SEPATRANSFER payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2f32f54b-c108-43b9-942c-1c38b4343a6b"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ee0921b6-d682-45d8-8097-6e7c57c07deb"
                            }
                          }
                        ],
                        "id": "2d3fa5c9-ad6f-44b0-93bf-78d53b7babcd",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SEPATRANSFER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"EUR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2d3fa5c9-ad6f-44b0-93bf-78d53b7babcd"
                      }
                    ],
                    "id": "88fc3243-f1f2-4afc-b8d9-26e006dc07f1",
                    "uid": "10462328-88fc3243-f1f2-4afc-b8d9-26e006dc07f1"
                  }
                ],
                "id": "e1728714-a246-4662-a806-099c227d0220",
                "uid": "10462328-e1728714-a246-4662-a806-099c227d0220"
              }
            ],
            "id": "57b9c9c4-4e8f-40b7-ad4d-38556b0367ec",
            "uid": "10462328-57b9c9c4-4e8f-40b7-ad4d-38556b0367ec"
          },
          {
            "name": "Asia",
            "item": [
              {
                "name": "Vietnam",
                "item": [
                  {
                    "name": "Direct Banking Vietnam",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "35e96992-7e8b-421c-9c54-269d7a8025d4",
                        "uid": "10462328-35e96992-7e8b-421c-9c54-269d7a8025d4"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "019f0298-0414-43c9-8ce6-73306e7a93e3",
                        "uid": "10462328-019f0298-0414-43c9-8ce6-73306e7a93e3"
                      }
                    ],
                    "id": "31b467ce-af37-4db0-8781-1002059c3461",
                    "uid": "10462328-31b467ce-af37-4db0-8781-1002059c3461"
                  },
                  {
                    "name": "PayME Wallet",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "c586eef3-58f2-4282-a285-4b2c2c1f440e",
                        "uid": "10462328-c586eef3-58f2-4282-a285-4b2c2c1f440e"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "4792ad11-7e89-49a3-8fbd-8261e759c9eb",
                        "uid": "10462328-4792ad11-7e89-49a3-8fbd-8261e759c9eb"
                      }
                    ],
                    "id": "f1a35ada-08fd-43d9-a5ba-98b3732d595f",
                    "uid": "10462328-f1a35ada-08fd-43d9-a5ba-98b3732d595f"
                  },
                  {
                    "name": "Payment by wire transfer by QR code",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "d99c7a56-828f-4ec6-b53d-f6e12290a55b",
                        "uid": "10462328-d99c7a56-828f-4ec6-b53d-f6e12290a55b"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "97160a43-ccd8-40cc-91d4-e4ff3591fe94",
                        "uid": "10462328-97160a43-ccd8-40cc-91d4-e4ff3591fe94"
                      }
                    ],
                    "id": "b5a2e614-68d2-47cd-9782-2a9b324a0d61",
                    "uid": "10462328-b5a2e614-68d2-47cd-9782-2a9b324a0d61"
                  },
                  {
                    "name": "Bank QRCode",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "a0dd9a85-123f-4bc6-9342-192e88edeb4d",
                        "uid": "10462328-a0dd9a85-123f-4bc6-9342-192e88edeb4d"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "9dd3e332-aa29-46d8-b870-9e2bad967f7d",
                        "uid": "10462328-9dd3e332-aa29-46d8-b870-9e2bad967f7d"
                      }
                    ],
                    "id": "573cdec6-4c25-4ddc-ae6f-215386216517",
                    "uid": "10462328-573cdec6-4c25-4ddc-ae6f-215386216517"
                  }
                ],
                "id": "1d9191f2-5cc5-48e5-b54b-3973e9c71212",
                "uid": "10462328-1d9191f2-5cc5-48e5-b54b-3973e9c71212"
              },
              {
                "name": "Malaysia",
                "item": [
                  {
                    "name": "Boost",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "4bb34c50-55ad-424d-a4ce-abd9c2734b87",
                        "uid": "10462328-4bb34c50-55ad-424d-a4ce-abd9c2734b87"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "43dd6b8e-2d44-4adc-93b0-bbd296217d75",
                        "uid": "10462328-43dd6b8e-2d44-4adc-93b0-bbd296217d75"
                      }
                    ],
                    "id": "61c4ccb0-8f35-4245-b2f8-183a36597112",
                    "uid": "10462328-61c4ccb0-8f35-4245-b2f8-183a36597112"
                  },
                  {
                    "name": "GrabPay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "60767999-df5c-4a7f-8ed4-bd465958ec25",
                        "uid": "10462328-60767999-df5c-4a7f-8ed4-bd465958ec25"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "e3a846de-8a77-4a27-a7f2-e749865a69f9",
                        "uid": "10462328-e3a846de-8a77-4a27-a7f2-e749865a69f9"
                      }
                    ],
                    "id": "72cb0af6-d4b6-4957-ac02-0d6f81db843b",
                    "uid": "10462328-72cb0af6-d4b6-4957-ac02-0d6f81db843b"
                  }
                ],
                "id": "eb53d996-f1f8-458b-9cba-47a2e47bef4f",
                "uid": "10462328-eb53d996-f1f8-458b-9cba-47a2e47bef4f"
              },
              {
                "name": "Republic of the Philippines",
                "item": [
                  {
                    "name": "Over The Counter Banking",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERBANKING payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e912776b-fda7-48dc-a5ec-03b5f4083552"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ae324dee-b93e-4749-858e-4269e0e65c34"
                                }
                              }
                            ],
                            "id": "81c6a448-0a92-4cc5-a4cb-edc0a732a5a2",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BNRX\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-81c6a448-0a92-4cc5-a4cb-edc0a732a5a2"
                          }
                        ],
                        "id": "eb2f18ba-5ed1-430b-8cd6-9c1b92792ca2",
                        "uid": "10462328-eb2f18ba-5ed1-430b-8cd6-9c1b92792ca2"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERBANKING payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "bf78ea34-d222-4329-9288-b46e50c9cbda"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b53aa292-bc0c-42dc-a8d5-cdfd94f07a70"
                                }
                              }
                            ],
                            "id": "8d01b0e5-2ea1-4c65-9fe9-68c1bebf2f8f",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BNRX\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-8d01b0e5-2ea1-4c65-9fe9-68c1bebf2f8f"
                          }
                        ],
                        "id": "da5a688b-ce59-4a13-b172-6d8f63853f80",
                        "uid": "10462328-da5a688b-ce59-4a13-b172-6d8f63853f80"
                      }
                    ],
                    "id": "69bf7a4e-9651-494b-b773-e07aeaf28487",
                    "uid": "10462328-69bf7a4e-9651-494b-b773-e07aeaf28487"
                  },
                  {
                    "name": "Over The Counter Non Banking",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERNONBANKING payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "de7de9b0-58c6-4647-b4e4-c52c53a10f7d"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "20a07103-d50e-401b-9101-87ff5bd3af9a"
                                }
                              }
                            ],
                            "id": "1f44d2f8-989c-4691-9a14-6e386fd84202",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERNONBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"CEBL\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-1f44d2f8-989c-4691-9a14-6e386fd84202"
                          }
                        ],
                        "id": "17403980-bb0d-4f94-840b-1b21c3af5525",
                        "uid": "10462328-17403980-bb0d-4f94-840b-1b21c3af5525"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVERTHECOUNTERNONBANKING payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a372599e-d32e-4f39-a9a6-46795d822f9d"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d49adcbf-b5df-4478-8c3b-2cf857dfd797"
                                }
                              }
                            ],
                            "id": "4779290f-0534-4255-9357-9f7d23e8bd03",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVERTHECOUNTERNONBANKING\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"CEBL\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-4779290f-0534-4255-9357-9f7d23e8bd03"
                          }
                        ],
                        "id": "3724798b-7c98-43cf-99ab-6e3dfe13bcef",
                        "uid": "10462328-3724798b-7c98-43cf-99ab-6e3dfe13bcef"
                      }
                    ],
                    "id": "e7eb3aed-f540-45f8-bf78-d52605f5a189",
                    "uid": "10462328-e7eb3aed-f540-45f8-bf78-d52605f5a189"
                  },
                  {
                    "name": "Direct Banking Philippines",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create DIRECTBANKINGPH payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c369ff6d-30fe-41c2-b100-1034d5beab4f"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "68116d6c-9f65-424a-8890-628be62ee2ea"
                                }
                              }
                            ],
                            "id": "496465f6-3cfe-4cfc-8b69-4219f80346ef",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGPH\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BOC\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-496465f6-3cfe-4cfc-8b69-4219f80346ef"
                          }
                        ],
                        "id": "49056848-2606-4c29-9881-b70275bd192c",
                        "uid": "10462328-49056848-2606-4c29-9881-b70275bd192c"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DIRECTBANKINGPH payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8b623581-03c3-4117-8600-f849e7973956"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ff105ea7-4809-427a-b9f8-7129415c24f8"
                                }
                              }
                            ],
                            "id": "113514be-7e32-42af-b159-19f6e955b0df",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DIRECTBANKINGPH\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n\n    },\n\"ewallet_account\":{\n    \"bank_code\":\"BOC\"\n}\n}\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-113514be-7e32-42af-b159-19f6e955b0df"
                          }
                        ],
                        "id": "10692bcf-99e7-420f-9845-92405e50bab5",
                        "uid": "10462328-10692bcf-99e7-420f-9845-92405e50bab5"
                      }
                    ],
                    "id": "202f7276-62d6-4735-8185-3802fdc68d15",
                    "uid": "10462328-202f7276-62d6-4735-8185-3802fdc68d15"
                  },
                  {
                    "name": "QR Philippines",
                    "item": [
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create QR Philippines payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "aa0bf836-a3f4-44d1-ab74-cc8b09b67eaf"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "3f034809-1add-4907-b6fb-5cbcbaa69fd3"
                                }
                              }
                            ],
                            "id": "6d40e7be-aeaa-438c-8a02-d40c08a3ac02",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"qrph\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-6d40e7be-aeaa-438c-8a02-d40c08a3ac02"
                          }
                        ],
                        "id": "a4b236b3-2319-4f34-9502-22ba092ebba2",
                        "uid": "10462328-a4b236b3-2319-4f34-9502-22ba092ebba2"
                      },
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create QR Philippines payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2bce2738-2497-45a4-8ad7-fe7b5e2ee745"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "45a176b3-ee53-42ba-92f5-8f16df643e58"
                                }
                              }
                            ],
                            "id": "ed3a183a-e467-4921-8a5a-1bd871ae035e",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"qrph\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ed3a183a-e467-4921-8a5a-1bd871ae035e"
                          }
                        ],
                        "id": "188b0c43-eec5-49b6-8664-e9865a84131f",
                        "uid": "10462328-188b0c43-eec5-49b6-8664-e9865a84131f"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create QR Philippines payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a408d8c4-f439-4e6d-825e-4ee2456aafd2"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ac6a15cc-08fc-4709-93c7-5e2a70dd1d99"
                                }
                              }
                            ],
                            "id": "52dc1db7-7521-4db5-bdbe-23fbd18e2ca1",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"qrph\",\n    \"payment_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-52dc1db7-7521-4db5-bdbe-23fbd18e2ca1"
                          }
                        ],
                        "id": "4af86478-7d72-415c-a485-b06cfaace4d0",
                        "uid": "10462328-4af86478-7d72-415c-a485-b06cfaace4d0"
                      }
                    ],
                    "id": "4ead3321-1a92-4bec-bcb6-7bd1690e4fcb",
                    "uid": "10462328-4ead3321-1a92-4bec-bcb6-7bd1690e4fcb"
                  }
                ],
                "id": "9ba2e222-5d1f-4d52-a61f-d34d9dbcdc4b",
                "uid": "10462328-9ba2e222-5d1f-4d52-a61f-d34d9dbcdc4b"
              },
              {
                "name": "Thailand",
                "item": [
                  {
                    "name": "Direct Banking Thailand",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create directbankingthb payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f1e8143c-9b47-41bf-a46f-9b3957a63037"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e775dc98-39bb-4bcf-8161-0c7de6e0a58a"
                                }
                              }
                            ],
                            "id": "9c04d148-b32f-4359-ae8c-5f5c84f4bb06",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"directbankingthb\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    },\n    \"ewallet_account\":{\n        \"bank_code\":\"BBL\"\n    },\n    \"return_urls\":{\n        \"inprocess_url\": \"http://www.example.com/in-process-url\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-9c04d148-b32f-4359-ae8c-5f5c84f4bb06"
                          }
                        ],
                        "id": "bfb1cfff-c34f-4cac-aeb6-2d69492c200e",
                        "uid": "10462328-bfb1cfff-c34f-4cac-aeb6-2d69492c200e"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create directbankingthb payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "210a05a5-51be-476b-b175-807273593062"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "fedd96d5-154c-4ce3-87fd-e5d1d583ff2e"
                                }
                              }
                            ],
                            "id": "502874d5-6d37-4e59-9111-06480f223390",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"directbankingthb\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    },\n    \"ewallet_account\":{\n        \"bank_code\":\"BBL\"\n    }\n\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-502874d5-6d37-4e59-9111-06480f223390"
                          }
                        ],
                        "id": "4bb9c545-d12d-4e7d-ae78-1c2c2f3ba35d",
                        "uid": "10462328-4bb9c545-d12d-4e7d-ae78-1c2c2f3ba35d"
                      }
                    ],
                    "id": "0be3d2a4-7719-4eb6-88b3-54d3f2eb77c0",
                    "uid": "10462328-0be3d2a4-7719-4eb6-88b3-54d3f2eb77c0"
                  },
                  {
                    "name": "PromptPay QR",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create PROMPTPAYQR payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "3fba7f12-3106-4cf4-ba56-d7ba6c0af78e",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "ec2786a0-db60-4b62-905e-8520e1d50563",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "667a3051-8e09-477a-bd4c-28b55f0a6c75",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"promptpayqr\",\n    \"payment_data\": {\n        \"amount\": \"2001\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-667a3051-8e09-477a-bd4c-28b55f0a6c75"
                          }
                        ],
                        "id": "feffb151-adcd-4450-a0f3-e3866bf28a07",
                        "uid": "10462328-feffb151-adcd-4450-a0f3-e3866bf28a07"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create promptpayqr payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "2cd0b497-dcea-4fcb-b32d-335b8eaf67b5",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "c3ea9efb-11ef-4399-85d7-8cc9e5555e4d",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "9ac9c342-bf8d-4f08-946f-3dce52307d3d",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"promptpayqr\",\n    \"payment_data\": {\n        \"amount\": \"2001\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-9ac9c342-bf8d-4f08-946f-3dce52307d3d"
                          }
                        ],
                        "id": "5ef7f7aa-1c98-4fbb-b2eb-7c9be4ba5ba4",
                        "uid": "10462328-5ef7f7aa-1c98-4fbb-b2eb-7c9be4ba5ba4"
                      }
                    ],
                    "id": "e8083336-b490-493d-ade9-de1b47304775",
                    "uid": "10462328-e8083336-b490-493d-ade9-de1b47304775"
                  },
                  {
                    "name": "TrueMoney Wallet",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create TRUEMONEY payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "eb49363c-238c-4111-a16e-a36629bc5d37",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "ab31eb15-3527-4412-828e-975105875a80",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "b9b6546e-fd6f-4462-bf05-4ba668d6b03a",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"truemoney\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\":\"0123456789\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-b9b6546e-fd6f-4462-bf05-4ba668d6b03a"
                          }
                        ],
                        "id": "23b58b95-7245-42f0-aa71-7bfd95e86499",
                        "uid": "10462328-23b58b95-7245-42f0-aa71-7bfd95e86499"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create truemoney payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "3d6d1ec6-d9c0-4cca-b30c-d1fb05eadfae",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "24a941f1-456b-423c-b47a-ba1575bb195d",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "93b18362-64fe-4c9e-8b43-ab823037b6b4",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"truemoney\",\n    \"payment_data\": {\n        \"amount\": \"2000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\":\"0123456789\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-93b18362-64fe-4c9e-8b43-ab823037b6b4"
                          }
                        ],
                        "id": "fa76af84-7763-4bf0-89d4-0992d2ef1dad",
                        "uid": "10462328-fa76af84-7763-4bf0-89d4-0992d2ef1dad"
                      }
                    ],
                    "id": "030dbd50-3dbd-4211-b5bd-a340cf8c1325",
                    "uid": "10462328-030dbd50-3dbd-4211-b5bd-a340cf8c1325"
                  },
                  {
                    "name": "Tesco Bill Payment",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create tescobill payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a763fa10-8995-43ee-9fb7-6e70e88574cb"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "3456a1f1-f6cf-48c9-ad30-32898ce4f5cf"
                                }
                              }
                            ],
                            "id": "50ba8c01-5335-4df7-817e-88511cc4d561",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"tescobill\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-50ba8c01-5335-4df7-817e-88511cc4d561"
                          }
                        ],
                        "id": "343f7d01-bb6f-4843-a6fc-587c3a83c4f8",
                        "uid": "10462328-343f7d01-bb6f-4843-a6fc-587c3a83c4f8"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create tescobill payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8b35006a-b177-43fb-be2b-e695631cb19b"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5f39d1f9-3e43-4bef-b30c-178e0a6a22f8"
                                }
                              }
                            ],
                            "id": "a2815a5a-0801-47f7-a362-bf943e0a4f7f",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"tescobill\",\n    \"payment_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"THB\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-a2815a5a-0801-47f7-a362-bf943e0a4f7f"
                          }
                        ],
                        "id": "07925a1d-828a-4300-a3d3-9fc1d5dd80af",
                        "uid": "10462328-07925a1d-828a-4300-a3d3-9fc1d5dd80af"
                      }
                    ],
                    "id": "2b476dca-d645-4107-925e-f0dd95d6650c",
                    "uid": "10462328-2b476dca-d645-4107-925e-f0dd95d6650c"
                  },
                  {
                    "name": "Shopeepay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "87057185-1d9e-4162-b350-393b2ab627f7"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6a15f027-d9b7-468e-ab70-291f2602126d"
                                }
                              }
                            ],
                            "id": "6fd25be1-a0f5-47a5-bdbf-f72439c686f6",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"THB\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"66123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-6fd25be1-a0f5-47a5-bdbf-f72439c686f6"
                          }
                        ],
                        "id": "e417584f-1841-4b4d-8d22-912047c5fdfd",
                        "uid": "10462328-e417584f-1841-4b4d-8d22-912047c5fdfd"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8f6d5f22-9d50-4457-90a6-2da31c1f22b4"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "1c6991e9-f870-494d-80ec-1f09ece95509"
                                }
                              }
                            ],
                            "id": "ff394f03-cc6a-4aed-84fe-03c85cdb1f91",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"THB\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"66123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ff394f03-cc6a-4aed-84fe-03c85cdb1f91"
                          }
                        ],
                        "id": "fb1e167d-d407-4d78-a738-41b9aba304dd",
                        "uid": "10462328-fb1e167d-d407-4d78-a738-41b9aba304dd"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create Shopeepay payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0c4aebb0-832e-4ffe-8866-fb0584b2dbb6"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b95d4332-edc5-4201-a39d-6eb6146e02b4"
                                }
                              }
                            ],
                            "id": "027efaca-bb30-47c6-a67a-70a0901af3c9",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"THB\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"66123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-027efaca-bb30-47c6-a67a-70a0901af3c9"
                          }
                        ],
                        "id": "53cdcbf4-8b8b-40ff-a627-33d5cd173c40",
                        "uid": "10462328-53cdcbf4-8b8b-40ff-a627-33d5cd173c40"
                      }
                    ],
                    "id": "21d012fb-88c6-456b-aee9-a6f5ee65e79a",
                    "uid": "10462328-21d012fb-88c6-456b-aee9-a6f5ee65e79a"
                  }
                ],
                "id": "dba07185-264b-41a1-8368-b4b067c79c6e",
                "uid": "10462328-dba07185-264b-41a1-8368-b4b067c79c6e"
              },
              {
                "name": "South Korea",
                "item": [
                  {
                    "name": "Bank transfer South Korea",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "5a187539-38fa-4ef0-ae9e-8cde7dc5a523",
                        "uid": "10462328-5a187539-38fa-4ef0-ae9e-8cde7dc5a523"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "db3e363f-3fd0-468c-80c0-09a086ea8e1a",
                        "uid": "10462328-db3e363f-3fd0-468c-80c0-09a086ea8e1a"
                      }
                    ],
                    "id": "cb90b5d6-ca1d-4de0-96fa-66d928621c9d",
                    "uid": "10462328-cb90b5d6-ca1d-4de0-96fa-66d928621c9d"
                  },
                  {
                    "name": "NaverPay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create naverpay payment(Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "110ec2bb-d431-4125-929b-29950e1bec53"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "     pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ea5481fc-d86f-493d-bb20-82f068038e6a"
                                }
                              }
                            ],
                            "id": "2d55e980-8ba4-4914-bb1d-f16b9762fef2",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n             \"items\": [\n            {\n                \"count\": 2,\n                \"name\": \"bread\",\n                \"price\": 100\n            }\n        ]\n    },\n    \"payment_method\": \"naverpay\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"KRW\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-2d55e980-8ba4-4914-bb1d-f16b9762fef2"
                          }
                        ],
                        "id": "32fb52ea-cb57-4067-8ce4-43f21ab6460a",
                        "uid": "10462328-32fb52ea-cb57-4067-8ce4-43f21ab6460a"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create naverpay payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');\r",
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5dc63f50-4063-4b67-95b7-f78f2ede616a"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "297364bd-e751-4e32-82e0-2b0e37a4e748"
                                }
                              }
                            ],
                            "id": "139f17b3-7484-408c-93b5-c068299653b8",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n             \"items\": [\n            {\n                \"count\": 2,\n                \"name\": \"bread\",\n                \"price\": 100\n            }\n        ]\n    },\n    \"payment_method\": \"naverpay\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"KRW\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-139f17b3-7484-408c-93b5-c068299653b8"
                          }
                        ],
                        "id": "4a0516c2-95da-427c-8f45-deee18c8df28",
                        "uid": "10462328-4a0516c2-95da-427c-8f45-deee18c8df28"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create naverpay payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "701e1f48-57db-4c72-90fc-00a32861d805"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6061cec8-0e22-4756-8344-78d907f151f5"
                                }
                              }
                            ],
                            "id": "786f1756-1ffe-4b7e-8816-7c82c369d302",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\",\n        \"items\":[\n            {\n                \"name\": \"Apple\",\n                \"count\": \"10\",\n                \"price\": 10\n            }\n        ]\n    },\n    \"payment_method\": \"NAVERPAY\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"KRW\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-786f1756-1ffe-4b7e-8816-7c82c369d302"
                          }
                        ],
                        "id": "f4c778aa-d30f-40da-b76e-200812d39c47",
                        "uid": "10462328-f4c778aa-d30f-40da-b76e-200812d39c47"
                      }
                    ],
                    "id": "3f9c29ee-ccc6-44a9-89db-c5840e682e45",
                    "uid": "10462328-3f9c29ee-ccc6-44a9-89db-c5840e682e45"
                  }
                ],
                "id": "34882948-447c-4cb2-b904-4c8942e20609",
                "uid": "10462328-34882948-447c-4cb2-b904-4c8942e20609"
              },
              {
                "name": "Indonesia",
                "item": [
                  {
                    "name": "Alfa VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create ALFAVA payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b19ab99c-1ee5-49d2-befa-0310d38701ce"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "426a8403-06a7-49ec-82de-6f25d6f8c34b"
                                }
                              }
                            ],
                            "id": "f26bbd30-1e38-4134-a679-62dd5860a6fe",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALFAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-f26bbd30-1e38-4134-a679-62dd5860a6fe"
                          }
                        ],
                        "id": "8ac10a97-bd81-4c43-b13b-3915f6758b55",
                        "uid": "10462328-8ac10a97-bd81-4c43-b13b-3915f6758b55"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create ALFAVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "9aa861d3-fa4e-4c55-855b-891326e96bf4"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b2c879ed-3d79-4164-84f3-b3c299594926"
                                }
                              }
                            ],
                            "id": "43c2593d-1a00-4c01-9338-bcb05bd656ed",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"ALFAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-43c2593d-1a00-4c01-9338-bcb05bd656ed"
                          }
                        ],
                        "id": "265d48d5-bf74-453e-948d-26d76fadce34",
                        "uid": "10462328-265d48d5-bf74-453e-948d-26d76fadce34"
                      }
                    ],
                    "id": "ce3e0817-f656-43cf-a2c1-b2ac798991df",
                    "uid": "10462328-ce3e0817-f656-43cf-a2c1-b2ac798991df"
                  },
                  {
                    "name": "CIMB VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create CIMBVA payment (gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d57202ed-1675-4e0d-a561-45fd3ede3ed3"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "aa3afbde-5ff4-47cc-8fd1-4963c8517514"
                                }
                              }
                            ],
                            "id": "68b6ce75-a5cb-4f59-90db-bcfa845675ed",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CIMBVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-68b6ce75-a5cb-4f59-90db-bcfa845675ed"
                          }
                        ],
                        "id": "3370b93c-6f70-4f20-b295-a1f7e83bc679",
                        "uid": "10462328-3370b93c-6f70-4f20-b295-a1f7e83bc679"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create CIMBVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "34a1c765-9a99-4c26-9640-c437d073e1bf"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "62ae4b39-cb5f-4501-a762-6b49cf7b2c38"
                                }
                              }
                            ],
                            "id": "2a5467a1-4fb0-4a3c-b9e2-b6c618f1c189",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CIMBVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-2a5467a1-4fb0-4a3c-b9e2-b6c618f1c189"
                          }
                        ],
                        "id": "d3597f9d-26e0-4053-9fd0-f453ca6479ec",
                        "uid": "10462328-d3597f9d-26e0-4053-9fd0-f453ca6479ec"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create CIMBVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c3fc9e10-a3e5-446d-bf47-d3d1602318d5"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "863741e1-0220-4f14-8017-9d4d18087b40"
                                }
                              }
                            ],
                            "id": "cedc89f0-875b-403a-9863-e886be3de06c",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CIMBVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-cedc89f0-875b-403a-9863-e886be3de06c"
                          }
                        ],
                        "id": "8cf0e929-a790-4bdc-8f23-95b98a52db0a",
                        "uid": "10462328-8cf0e929-a790-4bdc-8f23-95b98a52db0a"
                      }
                    ],
                    "id": "6a127ea3-5c64-433a-ab51-0beec0cda74e",
                    "uid": "10462328-6a127ea3-5c64-433a-ab51-0beec0cda74e"
                  },
                  {
                    "name": "Danamon VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "8fcbd192-7be7-4922-9571-e7578d071282",
                        "uid": "10462328-8fcbd192-7be7-4922-9571-e7578d071282"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "3932a5f2-1858-4384-8832-4c2db637551e",
                        "uid": "10462328-3932a5f2-1858-4384-8832-4c2db637551e"
                      }
                    ],
                    "id": "6844a417-d529-4b78-bf9c-b5b4ba1e0f5c",
                    "uid": "10462328-6844a417-d529-4b78-bf9c-b5b4ba1e0f5c"
                  },
                  {
                    "name": "Permata VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create PERMATAVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2a167408-687f-4ccf-8dd8-389d9dab4f40"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "686cd1bd-2f0c-4286-9a51-c03f9a1a6209"
                                }
                              }
                            ],
                            "id": "e5134f27-1466-4a97-bb4a-a2533bb2e23b",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PERMATAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-e5134f27-1466-4a97-bb4a-a2533bb2e23b"
                          }
                        ],
                        "id": "13a54181-ced5-4f71-87e7-8b14cac4683b",
                        "uid": "10462328-13a54181-ced5-4f71-87e7-8b14cac4683b"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create PERMATAVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "98f9a28b-6abb-4aa2-a613-e4c5d7a580c5"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "939402eb-f80e-4fb2-b725-4ba18a5397f3"
                                }
                              }
                            ],
                            "id": "d288f8cf-bd12-47cd-bf1b-1f768c15dbcb",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PERMATAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-d288f8cf-bd12-47cd-bf1b-1f768c15dbcb"
                          }
                        ],
                        "id": "3f604e30-c94a-4292-b6a9-ef0dc483312e",
                        "uid": "10462328-3f604e30-c94a-4292-b6a9-ef0dc483312e"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create PERMATAVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "642b03af-78d1-4b86-98b0-b8186f9ec671"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d61810e7-d121-4cb7-955e-c1670a124dde"
                                }
                              }
                            ],
                            "id": "5bc0887e-4c54-4a04-9b54-6f205e3dadd1",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PERMATAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-5bc0887e-4c54-4a04-9b54-6f205e3dadd1"
                          }
                        ],
                        "id": "b021a986-fef5-4cf3-98fc-b9b7fbd9c4a6",
                        "uid": "10462328-b021a986-fef5-4cf3-98fc-b9b7fbd9c4a6"
                      }
                    ],
                    "id": "f4a7b23c-c865-48b2-a7f6-f8c1bef84855",
                    "uid": "10462328-f4a7b23c-c865-48b2-a7f6-f8c1bef84855"
                  },
                  {
                    "name": "Mandiri VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create MANDIRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "dc8ff88d-ddd2-4af9-b59f-8606befc3daf"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "bfbf68f6-f889-42d6-a5aa-c53044dc7456"
                                }
                              }
                            ],
                            "id": "bc8348be-8b42-4af2-974a-b463b794631c",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MANDIRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-bc8348be-8b42-4af2-974a-b463b794631c"
                          }
                        ],
                        "id": "e1b2025c-eeaa-46b0-9a63-2acb31dcc87d",
                        "uid": "10462328-e1b2025c-eeaa-46b0-9a63-2acb31dcc87d"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create MANDIRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7756cd28-82c6-4052-a922-8e6c063b9872"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4f9e97cc-3f17-416e-9b97-eb5bc3585fbc"
                                }
                              }
                            ],
                            "id": "177c18be-8ad1-46b3-b668-ce353bfe7aed",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MANDIRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-177c18be-8ad1-46b3-b668-ce353bfe7aed"
                          }
                        ],
                        "id": "ecf96fbb-4b00-4c89-a1c8-f0798dd9cb16",
                        "uid": "10462328-ecf96fbb-4b00-4c89-a1c8-f0798dd9cb16"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create MANDIRIVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "04031c70-51ec-4bb7-9a20-c1449b63c246"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "c58f7bc8-4970-407d-b4b7-58ab3fabf68b"
                                }
                              }
                            ],
                            "id": "da855c15-89a2-4532-88ff-dc4ad21c6825",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"MANDIRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-da855c15-89a2-4532-88ff-dc4ad21c6825"
                          }
                        ],
                        "id": "28c54f82-743d-42aa-9eb5-fbf7e8d8aa2d",
                        "uid": "10462328-28c54f82-743d-42aa-9eb5-fbf7e8d8aa2d"
                      }
                    ],
                    "id": "6e0e40c1-fa53-4bff-9984-f77d59bacd04",
                    "uid": "10462328-6e0e40c1-fa53-4bff-9984-f77d59bacd04"
                  },
                  {
                    "name": "Permata Internet Banking",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [],
                        "id": "f56026c9-6be8-4cd6-8439-ba3c32983f29",
                        "uid": "10462328-f56026c9-6be8-4cd6-8439-ba3c32983f29"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [],
                        "id": "16ee1c47-0fea-4c7e-b814-464b2bf1d1fe",
                        "uid": "10462328-16ee1c47-0fea-4c7e-b814-464b2bf1d1fe"
                      }
                    ],
                    "id": "b2f395f6-2b37-4825-a90a-b35958e9cd6d",
                    "uid": "10462328-b2f395f6-2b37-4825-a90a-b35958e9cd6d"
                  },
                  {
                    "name": "DOKU Wallet",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DOKUWALLET payment(gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "64090970-9902-49c7-ba45-0cb1a1c825d4"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "1a115798-7957-4f60-9468-9c437317ebeb"
                                }
                              }
                            ],
                            "id": "67ac65d9-e1e1-4fa7-9346-63abb1d62a8b",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"DOKUWALLET\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-67ac65d9-e1e1-4fa7-9346-63abb1d62a8b"
                          }
                        ],
                        "id": "911ec2a6-b69c-4d2e-b9e5-0600cb075977",
                        "uid": "10462328-911ec2a6-b69c-4d2e-b9e5-0600cb075977"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create DOKUWALLET payment(Payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8bd2469d-afa8-4545-9592-8ee85b12ba68"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "e27b3100-f44e-4621-b023-f43e234771dd"
                                }
                              }
                            ],
                            "id": "0dca1d2c-984c-40f6-bde3-55a0afc7a090",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"DOKUWALLET\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-0dca1d2c-984c-40f6-bde3-55a0afc7a090"
                          }
                        ],
                        "id": "832e089e-f1a2-4666-a426-34fe44e5fd76",
                        "uid": "10462328-832e089e-f1a2-4666-a426-34fe44e5fd76"
                      }
                    ],
                    "id": "f137ad63-d1a4-4cfb-a2f3-1db7e49f83ff",
                    "uid": "10462328-f137ad63-d1a4-4cfb-a2f3-1db7e49f83ff"
                  },
                  {
                    "name": "BNI VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BNIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4bd4d21b-e568-4139-976b-ccbe1d30cbf7"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2b1bd1dc-4688-4ca8-b9e7-4159d57edb4a"
                                }
                              }
                            ],
                            "id": "9402377b-2756-443d-ba11-e4cbc0af7a42",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BNIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-9402377b-2756-443d-ba11-e4cbc0af7a42"
                          }
                        ],
                        "id": "3c9b7ed3-3797-40a7-9f11-fe0008b9611c",
                        "uid": "10462328-3c9b7ed3-3797-40a7-9f11-fe0008b9611c"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BNIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "22669c10-441f-47ae-9b77-b7b3839cdcea"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "006e5469-b13a-43c4-a379-704c92117ea9"
                                }
                              }
                            ],
                            "id": "4de37bb5-f3d4-4867-9985-d214550905f2",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BNIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-4de37bb5-f3d4-4867-9985-d214550905f2"
                          }
                        ],
                        "id": "9158f720-da1d-4592-8a52-e04e614215e0",
                        "uid": "10462328-9158f720-da1d-4592-8a52-e04e614215e0"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BNIVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "eeacdd38-a901-4439-aa73-1be2795d567b"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "9933468a-04c2-4712-86e5-13a333e26089"
                                }
                              }
                            ],
                            "id": "01c1d440-de71-4ee5-bbe6-f4d34a8b04e6",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BNIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-01c1d440-de71-4ee5-bbe6-f4d34a8b04e6"
                          }
                        ],
                        "id": "c00fbbac-4636-4e20-a10f-d61dd7b21c6e",
                        "uid": "10462328-c00fbbac-4636-4e20-a10f-d61dd7b21c6e"
                      }
                    ],
                    "id": "c8b16dbf-e1c1-443f-bd86-60c343fc6695",
                    "uid": "10462328-c8b16dbf-e1c1-443f-bd86-60c343fc6695"
                  },
                  {
                    "name": "BRI VA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f47c7816-b856-471c-bc23-0bda17535334"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7bc71493-cf48-4532-bdb0-003924f2b7e6"
                                }
                              }
                            ],
                            "id": "8bad6327-f35d-43b4-876a-e1e963eb1330",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-8bad6327-f35d-43b4-876a-e1e963eb1330"
                          }
                        ],
                        "id": "f264e2cf-af71-452c-80c7-ce22077075e5",
                        "uid": "10462328-f264e2cf-af71-452c-80c7-ce22077075e5"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BRIVA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "84ad140e-a0d7-498e-8307-e5600208e526"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "cc375d66-b485-4c5c-8e59-1fddf3f0c196"
                                }
                              }
                            ],
                            "id": "7fb44427-6b2e-4e67-a358-95a0b7fff640",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-7fb44427-6b2e-4e67-a358-95a0b7fff640"
                          }
                        ],
                        "id": "b36ee506-fbba-40be-b1d8-c9a32298fdcd",
                        "uid": "10462328-b36ee506-fbba-40be-b1d8-c9a32298fdcd"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BRIVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7843453c-3921-4a5b-8cd6-13b3765632ba"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "84291374-24df-4790-9b81-35757700171c"
                                }
                              }
                            ],
                            "id": "c4552f53-17b8-4491-9da4-350646865e96",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BRIVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-c4552f53-17b8-4491-9da4-350646865e96"
                          }
                        ],
                        "id": "e422e2e7-aeb9-4ecb-97e2-ff526cc18985",
                        "uid": "10462328-e422e2e7-aeb9-4ecb-97e2-ff526cc18985"
                      }
                    ],
                    "id": "67763a82-3a93-494c-8f71-ed221339b335",
                    "uid": "10462328-67763a82-3a93-494c-8f71-ed221339b335"
                  },
                  {
                    "name": "DANA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DANA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "883e9691-853c-407d-adc0-614cbc01b25f",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "13d7b5a4-48fb-4968-a184-487a59a4efbe",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                                    "        pm.expect(response_after_redirect.code).to.equal(200);",
                                    "    });",
                                    "    ",
                                    " pm.collectionVariables.set('payment_id_for_refund_dana', response.payment_data.id);",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "4947ee9e-5ee3-4d2b-b54b-c1038c320709",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DANA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-4947ee9e-5ee3-4d2b-b54b-c1038c320709"
                          }
                        ],
                        "id": "38c31efd-26a6-4416-abf5-477c9e237298",
                        "uid": "10462328-38c31efd-26a6-4416-abf5-477c9e237298"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create DANA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "68efb91d-871f-449a-bae1-d252898f86e1",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "0c93d83d-b7a3-40c4-8899-567c36b26a92",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "   ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "357373e6-6a04-4e4c-aa22-cd2f417d5852",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"DANA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-357373e6-6a04-4e4c-aa22-cd2f417d5852"
                          }
                        ],
                        "id": "f4b305a8-7375-448f-afa1-118cf1dda201",
                        "uid": "10462328-f4b305a8-7375-448f-afa1-118cf1dda201"
                      },
                      {
                        "name": "Refunds",
                        "item": [
                          {
                            "name": "Create DANA Refund",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "d2f05a49-5f4c-422c-a4e9-5eeeb16e6895",
                                  "exec": [
                                    "var moment = require('moment');",
                                    "pm.variables.set(\"request_time\", moment().toISOString());",
                                    "",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                                    "",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "2ce9af3e-e42f-45cb-88cb-c935079efa86",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "   ",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "  ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "df38b08e-1075-4dbe-881a-3f91802db40b",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund_dana}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "refunds"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-df38b08e-1075-4dbe-881a-3f91802db40b"
                          }
                        ],
                        "id": "e3a50146-0876-4607-9cdb-a7bd62a1bfdf",
                        "uid": "10462328-e3a50146-0876-4607-9cdb-a7bd62a1bfdf"
                      }
                    ],
                    "id": "e4b85cdc-a4ef-4890-8c15-bb02fb29f8d7",
                    "uid": "10462328-e4b85cdc-a4ef-4890-8c15-bb02fb29f8d7"
                  },
                  {
                    "name": "OVO",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVO payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "8a47a8d2-2a76-4569-9123-6763ed27e90a",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "0994f1f0-f8cb-4da0-9211-9ef853827975",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "     pm.collectionVariables.set('payment_id_for_refund_ovo', response.payment_data.id);",
                                    "});",
                                    ""
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "fc14da77-7d64-48f2-91f7-ec50a43e5678",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVO\",\n    \"payment_data\": {\n        \"amount\": \"101\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-fc14da77-7d64-48f2-91f7-ec50a43e5678"
                          }
                        ],
                        "id": "606b3cd5-d5b9-4a23-b130-64d9b656b5f7",
                        "uid": "10462328-606b3cd5-d5b9-4a23-b130-64d9b656b5f7"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create OVO payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "71c6d703-7ed3-4bfa-ab14-b21da5016a85"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4cda8099-140d-4f06-8aca-0e5f448f0d2e"
                                }
                              }
                            ],
                            "id": "65c14051-c11b-4d36-8bad-b7a4989c5f91",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVO\",\n    \"payment_data\": {\n        \"amount\": \"101\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-65c14051-c11b-4d36-8bad-b7a4989c5f91"
                          }
                        ],
                        "id": "a8b038c5-b681-49b8-bccc-c3699f0bc211",
                        "uid": "10462328-a8b038c5-b681-49b8-bccc-c3699f0bc211"
                      },
                      {
                        "name": "Refunds",
                        "item": [
                          {
                            "name": "Create OVO Refund",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "957ffbaa-e899-4869-b17f-a43e17ab3f5a",
                                  "exec": [
                                    "var moment = require('moment');",
                                    "pm.variables.set(\"request_time\", moment().toISOString());",
                                    "",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                                    "",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "830a0dcd-f6ad-4ad7-aa45-8e200d376996",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.refund_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_refund_id', response.refund_data.id);",
                                    "    ",
                                    "    postman.setNextRequest('Get refund by merchant order id');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "06284653-ef2e-436a-8e44-0509df4f5f14",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund_ovo}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "refunds"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-06284653-ef2e-436a-8e44-0509df4f5f14"
                          }
                        ],
                        "id": "d52d6bb6-9d7a-4ef5-a293-1aa3befa2227",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "type": "text/javascript",
                              "packages": {},
                              "exec": [
                                ""
                              ],
                              "id": "ce933d92-5306-4a56-9e18-36885fe05499"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "type": "text/javascript",
                              "packages": {},
                              "exec": [
                                ""
                              ],
                              "id": "be0b1822-8c3e-4fa6-aac4-fea9522804f2"
                            }
                          }
                        ],
                        "uid": "10462328-d52d6bb6-9d7a-4ef5-a293-1aa3befa2227"
                      }
                    ],
                    "id": "fad7cbbd-1f5e-4119-9e2f-7bbd3ffa66a2",
                    "uid": "10462328-fad7cbbd-1f5e-4119-9e2f-7bbd3ffa66a2"
                  },
                  {
                    "name": "LINKAJA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create LINKAJA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8309dace-c503-4093-9a5a-84ee287207bc"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "79dd2ab4-9e54-41f2-8f0c-6f9ebe7a324b"
                                }
                              }
                            ],
                            "id": "9a6ca089-d01d-4569-b1ea-6b8924066cc6",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"LINKAJA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-9a6ca089-d01d-4569-b1ea-6b8924066cc6"
                          }
                        ],
                        "id": "90b1b6b3-50c2-4322-86cc-8c24fead7a56",
                        "uid": "10462328-90b1b6b3-50c2-4322-86cc-8c24fead7a56"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create LINKAJA payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2a5c76a1-6fe6-4cf9-bf46-a42aad826328"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ee6bf22a-c82a-42dc-9210-4de4a215a760"
                                }
                              }
                            ],
                            "id": "d82aa267-571c-410e-8eb4-3649883d35f3",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"LINKAJA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-d82aa267-571c-410e-8eb4-3649883d35f3"
                          }
                        ],
                        "id": "aae25f53-0b7e-46cf-9199-5649c7792c1b",
                        "uid": "10462328-aae25f53-0b7e-46cf-9199-5649c7792c1b"
                      }
                    ],
                    "id": "e95f31ec-71ef-4853-a2b0-f112c7bd5a55",
                    "uid": "10462328-e95f31ec-71ef-4853-a2b0-f112c7bd5a55"
                  },
                  {
                    "name": "SHOPEEPAY",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create SHOPEEPAY payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "660c6f17-08c4-4d5d-888f-e43f2b49dfb3",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "91288211-feb4-4b7a-bd22-d48348cb52e3",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "     pm.collectionVariables.set('payment_id_for_refund_shopee', response.payment_data.id);",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "ae3be289-54f3-4e58-86b3-b1e012572baf",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ae3be289-54f3-4e58-86b3-b1e012572baf"
                          }
                        ],
                        "id": "48fbfe08-2e24-461a-a2d5-86446165f8fe",
                        "uid": "10462328-48fbfe08-2e24-461a-a2d5-86446165f8fe"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create SHOPEEPAY payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d4fce7f9-9d53-4ee8-8ed3-9d18f4a11e4d"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "5df6a629-cf80-4571-81f5-bf46d4b15001"
                                }
                              }
                            ],
                            "id": "3908d072-5898-4fbc-8ad8-c867e4aab95b",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-3908d072-5898-4fbc-8ad8-c867e4aab95b"
                          }
                        ],
                        "id": "92d3f348-0aea-43e2-80a6-eb47025ccb66",
                        "uid": "10462328-92d3f348-0aea-43e2-80a6-eb47025ccb66"
                      },
                      {
                        "name": "Refunds",
                        "item": [
                          {
                            "name": "Create ShopeePay Refund",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "83a117f3-3613-4134-b972-8250bc9b8643",
                                  "exec": [
                                    "var moment = require('moment');",
                                    "pm.variables.set(\"request_time\", moment().toISOString());",
                                    "",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                                    "",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "60af0511-55ec-4bb1-adc1-0ec6cd667b49",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "   ",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "  ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "1889c05f-22b8-4586-b4f7-17dbd776b2a7",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund_shopee}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "refunds"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-1889c05f-22b8-4586-b4f7-17dbd776b2a7"
                          }
                        ],
                        "id": "c0acb831-cfd5-43c2-989a-bc60844be89f",
                        "uid": "10462328-c0acb831-cfd5-43c2-989a-bc60844be89f"
                      }
                    ],
                    "id": "db5b4a3e-3fb2-4ccb-81bb-a8f6dc4ae1fd",
                    "uid": "10462328-db5b4a3e-3fb2-4ccb-81bb-a8f6dc4ae1fd"
                  },
                  {
                    "name": "QRIS",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create QRIS payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "8e26512d-0139-487b-9613-fe03c5fdcf3c",
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "41fb8095-1300-4496-847e-bf70f84c1153",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.collectionVariables.set('payment_id_for_refund_qris', response.payment_data.id);",
                                    "});",
                                    " "
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "de2ec025-e857-401c-96aa-ddfa223c6f7b",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"QRIS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-de2ec025-e857-401c-96aa-ddfa223c6f7b"
                          }
                        ],
                        "id": "32e29abd-d251-4ef5-98b4-5403580cd3e1",
                        "uid": "10462328-32e29abd-d251-4ef5-98b4-5403580cd3e1"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create QRIS payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "70af6690-7bd2-4d6e-a7f2-44cc25cb0543"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6b6314c3-017f-49ce-a67a-afb73bfca3de"
                                }
                              }
                            ],
                            "id": "ebf1357a-fef6-4958-a8ea-03abb197dc86",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"QRIS\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"621234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ebf1357a-fef6-4958-a8ea-03abb197dc86"
                          }
                        ],
                        "id": "bb947c28-b50a-4833-b3b7-ff91533ba89f",
                        "uid": "10462328-bb947c28-b50a-4833-b3b7-ff91533ba89f"
                      },
                      {
                        "name": "Refunds",
                        "item": [
                          {
                            "name": "Create QRIS Refund",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "8911d91d-a9a0-4952-a026-0a37e9e24d80",
                                  "exec": [
                                    "var moment = require('moment');",
                                    "pm.variables.set(\"request_time\", moment().toISOString());",
                                    "",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                                    "",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "id": "762868aa-e222-4369-be63-99b0b9b3d3b1",
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "   ",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "  ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {}
                                }
                              }
                            ],
                            "id": "115e2534-44e5-4923-938c-ccd0c859159a",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund_qris}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "refunds"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-115e2534-44e5-4923-938c-ccd0c859159a"
                          }
                        ],
                        "id": "6a9f3417-6e07-42ac-895a-c3bdb415e81c",
                        "uid": "10462328-6a9f3417-6e07-42ac-895a-c3bdb415e81c"
                      }
                    ],
                    "id": "71a94f86-8cce-4b8d-8b22-2f3ee586a453",
                    "uid": "10462328-71a94f86-8cce-4b8d-8b22-2f3ee586a453"
                  },
                  {
                    "name": "PANINVA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create PANINVA payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "f70ba2ba-54a2-44bf-8f91-f53eeea82d18"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "07f71aa4-b2cd-48a7-a3f4-57e6211af6a4"
                                }
                              }
                            ],
                            "id": "6d6ec1f6-1d63-4afb-bc32-5e3261c43ad4",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PANINVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-6d6ec1f6-1d63-4afb-bc32-5e3261c43ad4"
                          }
                        ],
                        "id": "71ce2f4f-974a-499e-b8dd-38fc125a6f23",
                        "uid": "10462328-71ce2f4f-974a-499e-b8dd-38fc125a6f23"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create PANINVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "124fa242-76a7-4f0d-adbe-0b58d01069ac"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "85bc384a-8c42-4278-8b02-658dffba0295"
                                }
                              }
                            ],
                            "id": "15fe3215-cbeb-4cc8-9daa-51ca0c141cb9",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PANINVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-15fe3215-cbeb-4cc8-9daa-51ca0c141cb9"
                          }
                        ],
                        "id": "c5187f13-8b88-4b62-9592-7198a24dbfb8",
                        "uid": "10462328-c5187f13-8b88-4b62-9592-7198a24dbfb8"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create PANINVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "be23a92d-61c9-45ee-9839-a49ff52e31ae"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "89bba50d-bf0d-41cb-af1b-873d6c1c946b"
                                }
                              }
                            ],
                            "id": "b64e804b-0ffb-4f4e-ba7b-281bd3df1026",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PANINVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-b64e804b-0ffb-4f4e-ba7b-281bd3df1026"
                          }
                        ],
                        "id": "af085839-62f3-45ec-b6d4-d307a255ac91",
                        "uid": "10462328-af085839-62f3-45ec-b6d4-d307a255ac91"
                      }
                    ],
                    "id": "4261051e-c9ea-4bf2-b0ee-cc61c0cd1741",
                    "uid": "10462328-4261051e-c9ea-4bf2-b0ee-cc61c0cd1741"
                  },
                  {
                    "name": "DANAWALLET",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create danawallet payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "49672c77-e60c-4286-b538-6349a8fa81f5"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "8501537b-b2f7-4ed1-b0ca-9030f94723d3"
                                }
                              }
                            ],
                            "id": "ca62a671-2620-4414-9f3e-efaa590ddb55",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"danawallet\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ca62a671-2620-4414-9f3e-efaa590ddb55"
                          }
                        ],
                        "id": "d2677633-246a-4655-8030-f6c6358bda1f",
                        "uid": "10462328-d2677633-246a-4655-8030-f6c6358bda1f"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create danawallet payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a9d8dc35-6b05-4529-89df-555b914ac531"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "063229ec-dbe8-43de-ae5d-b21483ad858c"
                                }
                              }
                            ],
                            "id": "eb6d05f8-c577-463f-a657-9e35523e2587",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"danawallet\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-eb6d05f8-c577-463f-a657-9e35523e2587"
                          }
                        ],
                        "id": "c4d1db29-633e-4c36-9e49-eeff461304e5",
                        "uid": "10462328-c4d1db29-633e-4c36-9e49-eeff461304e5"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create danawallet payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "02d3195e-f54a-4d34-abdc-da797e33062f"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a9d846c0-01e6-4d03-96e4-a3baea1a9481"
                                }
                              }
                            ],
                            "id": "0572564b-8b08-45ef-a166-b254096b6915",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"danawallet\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-0572564b-8b08-45ef-a166-b254096b6915"
                          }
                        ],
                        "id": "d73fc038-b532-4ab6-9683-2f3666e8fa0e",
                        "uid": "10462328-d73fc038-b532-4ab6-9683-2f3666e8fa0e"
                      }
                    ],
                    "id": "da9a0a32-0519-4589-a3b8-c30e91ef7795",
                    "uid": "10462328-da9a0a32-0519-4589-a3b8-c30e91ef7795"
                  },
                  {
                    "name": "BTPN",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BTPNVA payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "25f33609-7fa8-4ad0-91ed-41f714ed0ddb"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "fca2eab3-def9-4a0a-84ab-d2cd48c83ec4"
                                }
                              }
                            ],
                            "id": "ed45a23c-e328-4f92-bb5c-7a12a8f882b1",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BTPNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ed45a23c-e328-4f92-bb5c-7a12a8f882b1"
                          }
                        ],
                        "id": "43a2e1dc-ec30-4a12-a1e8-a1a49b3d49b5",
                        "uid": "10462328-43a2e1dc-ec30-4a12-a1e8-a1a49b3d49b5"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BTPNVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "33d3c5d9-3129-4018-b41a-136bfe67d36f"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "bb911680-e872-4b86-9159-5919d4f9fcd6"
                                }
                              }
                            ],
                            "id": "bcf9a6ce-67d9-4a9f-af08-47a844f06e44",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BTPNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-bcf9a6ce-67d9-4a9f-af08-47a844f06e44"
                          }
                        ],
                        "id": "16c94b4f-ce86-4d3f-bf3c-46188539cde4",
                        "uid": "10462328-16c94b4f-ce86-4d3f-bf3c-46188539cde4"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BTPNVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "2e709340-9e42-4dab-9c42-28913734f13a"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "89e64130-4b4a-474e-b5f1-d488430f52e1"
                                }
                              }
                            ],
                            "id": "ece7bac7-71ea-46c8-8b03-bfc5cb61014b",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BTPNVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ece7bac7-71ea-46c8-8b03-bfc5cb61014b"
                          }
                        ],
                        "id": "5131107c-f2d4-4dab-ac24-a392c8d886b5",
                        "uid": "10462328-5131107c-f2d4-4dab-ac24-a392c8d886b5"
                      }
                    ],
                    "id": "cbd29c69-c2af-4985-80cc-6e04aca5dc25",
                    "uid": "10462328-cbd29c69-c2af-4985-80cc-6e04aca5dc25"
                  },
                  {
                    "name": "BCA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create BCAVA payment (Gateway mode)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "04fd1dc3-7181-4a88-808b-c11fd90c83f3"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "58b75d28-81ee-47f5-af24-6812d1903558"
                                }
                              }
                            ],
                            "id": "d64d4a47-0929-461b-ad91-b788da5ce403",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BCAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-d64d4a47-0929-461b-ad91-b788da5ce403"
                          }
                        ],
                        "id": "a30b7720-1757-4736-b539-9ecb832ab7b3",
                        "uid": "10462328-a30b7720-1757-4736-b539-9ecb832ab7b3"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create BCAVA payment (payment page)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "9b96966c-9fa7-4349-b731-13ca76d24b99"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "86df0715-9bab-4eba-8189-b0088a3e3706"
                                }
                              }
                            ],
                            "id": "e9914b76-bf6d-4018-b5d6-c278145247ce",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BCAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-e9914b76-bf6d-4018-b5d6-c278145247ce"
                          }
                        ],
                        "id": "aff76c6d-40c2-4dd4-8a7b-d1412b1f0f18",
                        "uid": "10462328-aff76c6d-40c2-4dd4-8a7b-d1412b1f0f18"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create BCAVA payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "22cac667-416c-40d1-84b4-c623a4cfc8c3"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    ",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "738747da-8463-4b63-8ae1-471f0a78fd26"
                                }
                              }
                            ],
                            "id": "bb85629d-f3f6-4897-af13-818378701917",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BCAVA\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-bb85629d-f3f6-4897-af13-818378701917"
                          }
                        ],
                        "id": "0922c8b4-a774-4342-a7cb-b40b5f51ed4e",
                        "uid": "10462328-0922c8b4-a774-4342-a7cb-b40b5f51ed4e"
                      }
                    ],
                    "id": "d6f1c3ae-a246-4585-9e28-050a24ff922e",
                    "uid": "10462328-d6f1c3ae-a246-4585-9e28-050a24ff922e"
                  }
                ],
                "id": "8bf1edb4-cbd9-450e-abb9-341010afcbf2",
                "uid": "10462328-8bf1edb4-cbd9-450e-abb9-341010afcbf2"
              },
              {
                "name": "Singapore",
                "item": [
                  {
                    "name": "Shopeepay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "7c76b162-7834-447e-b4e7-9a12919d75cf"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d85474a1-0c97-4742-9b02-e85e0f1f8ec9"
                                }
                              }
                            ],
                            "id": "9b3d7de5-5bac-4f22-b624-f907028a14bf",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"SGD\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"651234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-9b3d7de5-5bac-4f22-b624-f907028a14bf"
                          }
                        ],
                        "id": "fa2e54de-0a47-48a5-a356-d0089c5df91a",
                        "uid": "10462328-fa2e54de-0a47-48a5-a356-d0089c5df91a"
                      },
                      {
                        "name": "Payment page mode",
                        "item": [
                          {
                            "name": "Create Shopeepay payment",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "a656b910-e389-42ba-908f-eb09f34c7168"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('redirect_url');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "4e34bce2-6b95-4da5-ae5f-1e7728b3a510"
                                }
                              }
                            ],
                            "id": "e1ef2a59-fcec-4562-9cc8-cba75dc15459",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"SGD\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"651234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-e1ef2a59-fcec-4562-9cc8-cba75dc15459"
                          }
                        ],
                        "id": "22f4514d-0bc9-4d0e-bd22-cb7aa3fc79e9",
                        "uid": "10462328-22f4514d-0bc9-4d0e-bd22-cb7aa3fc79e9"
                      },
                      {
                        "name": "Extended response",
                        "item": [
                          {
                            "name": "Create Shopeepay payment (ext resp)",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "\r",
                                    "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                    "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                    "tokens.obtain(terminal_code, password);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6e2bc4cf-cb65-4ff6-a031-85d7b445f584"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.be.ok;",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('payment_data');",
                                    "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "36ee2254-868f-4a00-b2c6-25f3f1e80b35"
                                }
                              }
                            ],
                            "id": "e4a3a5e7-4e55-44f1-96da-d650b1b3cb56",
                            "protocolProfileBehavior": {
                              "strictSSL": false,
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "value": "{{access_token}}",
                                      "type": "string"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"SGD\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"651234567890\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                                "options": {
                                  "raw": {
                                    "language": "json"
                                  }
                                }
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payments"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-e4a3a5e7-4e55-44f1-96da-d650b1b3cb56"
                          }
                        ],
                        "id": "e080af53-f3b7-425b-a7f3-116fb8b07fa1",
                        "uid": "10462328-e080af53-f3b7-425b-a7f3-116fb8b07fa1"
                      }
                    ],
                    "id": "a1f7a707-1aba-4e94-b27c-1c7fff66dba4",
                    "uid": "10462328-a1f7a707-1aba-4e94-b27c-1c7fff66dba4"
                  }
                ],
                "id": "bdc01934-a959-45ce-8b06-367de17bb12c",
                "uid": "10462328-bdc01934-a959-45ce-8b06-367de17bb12c"
              }
            ],
            "id": "2a486003-eba2-432e-9527-b8be47030cd3",
            "uid": "10462328-2a486003-eba2-432e-9527-b8be47030cd3"
          },
          {
            "name": "Latin America",
            "item": [
              {
                "name": "Convenience Store",
                "item": [
                  {
                    "name": "Colombia",
                    "item": [
                      {
                        "name": "Acyvalores",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create Acyvalores payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "f51c4213-09fd-44ea-878d-a06eac5a7962"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "ee3fc7d8-2343-4995-b1a7-50bfac95e31e"
                                    }
                                  }
                                ],
                                "id": "73cb8c0d-c0d9-46ae-bbb0-c551e978795f",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"acyvalores\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-73cb8c0d-c0d9-46ae-bbb0-c551e978795f"
                              }
                            ],
                            "id": "6abbae56-bae3-40de-8a40-19fb7b5f5a98",
                            "uid": "10462328-6abbae56-bae3-40de-8a40-19fb7b5f5a98"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create Acyvalores payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "905f738d-1fa9-439b-bde3-af873468d19c"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "ad79c9fb-29ca-4414-a945-3c7ed6000415"
                                    }
                                  }
                                ],
                                "id": "32a71ea5-e378-4c6b-8c0b-a90f3cb2a01d",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"acyvalores\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-32a71ea5-e378-4c6b-8c0b-a90f3cb2a01d"
                              }
                            ],
                            "id": "49ec716e-c827-464b-9078-d444eba23286",
                            "uid": "10462328-49ec716e-c827-464b-9078-d444eba23286"
                          }
                        ],
                        "id": "faf7d1ab-1c57-45a2-818a-8c399ea1dd9c",
                        "uid": "10462328-faf7d1ab-1c57-45a2-818a-8c399ea1dd9c"
                      },
                      {
                        "name": "Daviplata",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create daviplata payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "56296ee5-c402-4a6f-960e-594f7f5f72bc"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "cbcdeac2-8099-481f-b501-50e6c9af8889"
                                    }
                                  }
                                ],
                                "id": "44a697f7-0048-46fa-9205-f2c09082d3fb",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"daviplata\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-44a697f7-0048-46fa-9205-f2c09082d3fb"
                              }
                            ],
                            "id": "4364be1a-299b-4cad-a241-39c0b789ad00",
                            "uid": "10462328-4364be1a-299b-4cad-a241-39c0b789ad00"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create daviplata payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "34807379-0850-47bf-916a-8231fd7ea833"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "438aa1a1-63c4-42be-b789-1c97da4c63fb"
                                    }
                                  }
                                ],
                                "id": "3698c92e-5f9a-44ab-9ed2-dcfbd0105559",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"daviplata\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-3698c92e-5f9a-44ab-9ed2-dcfbd0105559"
                              }
                            ],
                            "id": "77c0f933-a8d9-4756-9102-7d9b463bb90d",
                            "uid": "10462328-77c0f933-a8d9-4756-9102-7d9b463bb90d"
                          }
                        ],
                        "id": "4628ec66-d904-4a19-bbb2-3c7fbd381de7",
                        "uid": "10462328-4628ec66-d904-4a19-bbb2-3c7fbd381de7"
                      },
                      {
                        "name": "Fullcarga",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create fullcarga payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "c5ce71e7-cb6f-4069-8452-c4d51d5f88f7"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "4d8c6821-6915-4e5e-ba1f-e2ef3e2a59f7"
                                    }
                                  }
                                ],
                                "id": "0ee29ef7-94a9-4cd0-9b67-eb1fc8ded7c0",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"fullcarga\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-0ee29ef7-94a9-4cd0-9b67-eb1fc8ded7c0"
                              }
                            ],
                            "id": "ae21af20-6fc5-462d-a445-2997cac19398",
                            "uid": "10462328-ae21af20-6fc5-462d-a445-2997cac19398"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create fullcarga payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "7f97ee6a-55cd-478b-9954-a3946c5d0290"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "221c397f-27ed-43c8-8e3b-542335576e55"
                                    }
                                  }
                                ],
                                "id": "d14f7f33-9f65-4c0f-b675-c1e2184971eb",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"fullcarga\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-d14f7f33-9f65-4c0f-b675-c1e2184971eb"
                              }
                            ],
                            "id": "2f4d46f2-aed5-458d-90d3-87d9c8655b4c",
                            "uid": "10462328-2f4d46f2-aed5-458d-90d3-87d9c8655b4c"
                          }
                        ],
                        "id": "d673e912-1bec-4f9d-bff9-a091139d041a",
                        "uid": "10462328-d673e912-1bec-4f9d-bff9-a091139d041a"
                      },
                      {
                        "name": "Refacil",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create refacil payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "b128d845-1355-4fcc-887e-300dde50a716"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "41101748-0e3e-4d5a-9943-80a1f789abc0"
                                    }
                                  }
                                ],
                                "id": "84955a9e-e8c1-455c-ad83-a30f1e96ea30",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"fullcarga\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-84955a9e-e8c1-455c-ad83-a30f1e96ea30"
                              }
                            ],
                            "id": "589d3a3d-9a1c-4673-ba22-251a0c9a2686",
                            "uid": "10462328-589d3a3d-9a1c-4673-ba22-251a0c9a2686"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create refacil  payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "e4ccf45f-43d1-47f1-9fb9-68142436122a"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "eb989774-7bfd-4a5e-befe-713b6c477361"
                                    }
                                  }
                                ],
                                "id": "4765f0e5-164e-4993-9a8d-0c8ace17d144",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"refacil\",\n    \"payment_data\": {\n        \"amount\": \"100\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-4765f0e5-164e-4993-9a8d-0c8ace17d144"
                              }
                            ],
                            "id": "7f0618bf-e995-444c-8d4e-65bd594d8712",
                            "uid": "10462328-7f0618bf-e995-444c-8d4e-65bd594d8712"
                          }
                        ],
                        "id": "a7d717cb-0bf0-4889-b2bb-3b60af8c7fe9",
                        "uid": "10462328-a7d717cb-0bf0-4889-b2bb-3b60af8c7fe9"
                      }
                    ],
                    "id": "f00f198c-d045-4aaf-b03b-06c19bd2f40f",
                    "uid": "10462328-f00f198c-d045-4aaf-b03b-06c19bd2f40f"
                  },
                  {
                    "name": "Costa Rica",
                    "item": [
                      {
                        "name": "Paysera",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create payser payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "0dade86d-f212-40e6-8df7-d5c4e625051a"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "a8af566d-8d47-463f-b222-a62d0dc6b64b"
                                    }
                                  }
                                ],
                                "id": "d8ccbdfe-5acf-4d40-b2c7-b387453c0ac3",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payser\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-d8ccbdfe-5acf-4d40-b2c7-b387453c0ac3"
                              }
                            ],
                            "id": "0eb9bd5b-7a12-4909-a51f-3bee814499e8",
                            "uid": "10462328-0eb9bd5b-7a12-4909-a51f-3bee814499e8"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create payser payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "0ec88904-dbb0-4d1e-bc15-55470224152b"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "76f32237-f218-4276-ab14-32fdfe67f568"
                                    }
                                  }
                                ],
                                "id": "12b2d5d9-985e-458b-bc69-85e7ddf4d855",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"payser\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-12b2d5d9-985e-458b-bc69-85e7ddf4d855"
                              }
                            ],
                            "id": "7ae35f85-a0e8-45bd-bc63-4551c02ab703",
                            "uid": "10462328-7ae35f85-a0e8-45bd-bc63-4551c02ab703"
                          }
                        ],
                        "id": "7560c8b4-b13e-4c9e-87b8-3488dcdb2720",
                        "uid": "10462328-7560c8b4-b13e-4c9e-87b8-3488dcdb2720"
                      },
                      {
                        "name": "Puntoshey",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create PUNTOSHEY payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "279a9e37-25ab-4cd6-97de-dc5a54eab4db"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "a830098f-73d7-45ea-b6be-93657106c3cf"
                                    }
                                  }
                                ],
                                "id": "85bca235-c8cf-4c59-bf00-b88e56ffa626",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PUNTOSHEY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-85bca235-c8cf-4c59-bf00-b88e56ffa626"
                              }
                            ],
                            "id": "1c1683af-f0b2-473b-ba2b-d5e606ccdf09",
                            "uid": "10462328-1c1683af-f0b2-473b-ba2b-d5e606ccdf09"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create PUNTOSHEY payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "240680d4-daab-4438-8e61-bb1af7197c86"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "54b2968e-1d6e-44ec-a1e8-2ac14e490355"
                                    }
                                  }
                                ],
                                "id": "e69a9bee-9e63-4e9a-bf23-b0de1e6d138d",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PUNTOSHEY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"CRC\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-e69a9bee-9e63-4e9a-bf23-b0de1e6d138d"
                              }
                            ],
                            "id": "21b6be65-1125-4b54-bc62-eb066e16983d",
                            "uid": "10462328-21b6be65-1125-4b54-bc62-eb066e16983d"
                          }
                        ],
                        "id": "02941d45-8082-43b6-9f52-85ae337eb697",
                        "uid": "10462328-02941d45-8082-43b6-9f52-85ae337eb697"
                      }
                    ],
                    "id": "d0e18cf7-2659-48ac-933c-8428b062d96b",
                    "uid": "10462328-d0e18cf7-2659-48ac-933c-8428b062d96b"
                  },
                  {
                    "name": "Ecuador",
                    "item": [
                      {
                        "name": "Farmacias 911",
                        "item": [
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create farm911 payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "939e2a61-f325-4776-bb30-e73177f99e9a"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "48f8c057-d966-460f-a651-20aedcfa0afd"
                                    }
                                  }
                                ],
                                "id": "6268caac-a2f9-4848-bd78-cde7ca6a320a",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farm911\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-6268caac-a2f9-4848-bd78-cde7ca6a320a"
                              }
                            ],
                            "id": "aec31247-f1f4-4c3b-abf9-abf1a4c907c7",
                            "uid": "10462328-aec31247-f1f4-4c3b-abf9-abf1a4c907c7"
                          },
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create farm911 payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "1034289c-f091-4e24-81ea-25f057614e31"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "932a7240-4255-4e7c-996b-588891563495"
                                    }
                                  }
                                ],
                                "id": "5e1bae24-c2a4-4e17-b6cc-1232668bf591",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farm911\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-5e1bae24-c2a4-4e17-b6cc-1232668bf591"
                              }
                            ],
                            "id": "ea1da718-d8f9-40f7-a871-5bfd4f284a12",
                            "uid": "10462328-ea1da718-d8f9-40f7-a871-5bfd4f284a12"
                          }
                        ],
                        "id": "82326a63-edde-455f-a25f-3fcc873f2329",
                        "uid": "10462328-82326a63-edde-455f-a25f-3fcc873f2329"
                      },
                      {
                        "name": "Farmacias Economicas",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create farmeconomicas payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "86a2ba77-ff43-494e-81e7-8c2344ec8999"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "23251f66-7b88-4706-a519-dfc0557a2584"
                                    }
                                  }
                                ],
                                "id": "799fd70a-16a5-4061-9430-1d7eb556f35b",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmeconomicas\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-799fd70a-16a5-4061-9430-1d7eb556f35b"
                              }
                            ],
                            "id": "d2f6366f-a347-42cd-8b6e-696320de350c",
                            "uid": "10462328-d2f6366f-a347-42cd-8b6e-696320de350c"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create farmeconomicaspayment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "bb11e929-f5bb-4af5-bd17-71116bc8a3e1"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "b16a5142-b4b6-4794-b189-fb5f6517d771"
                                    }
                                  }
                                ],
                                "id": "5497b3f3-b17d-44c1-9820-82f7472b5353",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmeconomicas\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-5497b3f3-b17d-44c1-9820-82f7472b5353"
                              }
                            ],
                            "id": "4af56ece-1e73-4937-b539-8a0f4f4cc820",
                            "uid": "10462328-4af56ece-1e73-4937-b539-8a0f4f4cc820"
                          }
                        ],
                        "id": "c85bbbf5-63e7-426f-96e3-19d9059b10dc",
                        "uid": "10462328-c85bbbf5-63e7-426f-96e3-19d9059b10dc"
                      },
                      {
                        "name": "Farmacias Medicity",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create farmmedicity payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "4e8a14df-0bea-426f-be3a-5a498fd6a6ce"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "dc722d77-aef4-428c-8a8a-74c13c6fc9d4"
                                    }
                                  }
                                ],
                                "id": "f3b87415-827a-4612-a8c4-bcc24986650d",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmmedicity\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-f3b87415-827a-4612-a8c4-bcc24986650d"
                              }
                            ],
                            "id": "eebd29af-7aec-4b2d-90c9-d482a93b282f",
                            "uid": "10462328-eebd29af-7aec-4b2d-90c9-d482a93b282f"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create farmmedicity (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "2c82075d-994e-4fb9-a43c-9352a102a21e"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "4edea25d-78d2-4876-9645-5b09ca8ee1c1"
                                    }
                                  }
                                ],
                                "id": "f686d7ce-bc8b-4d29-a86d-b53721f4c4d5",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"farmmedicity\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-f686d7ce-bc8b-4d29-a86d-b53721f4c4d5"
                              }
                            ],
                            "id": "0e59c8b0-105f-4998-ab2d-4d1c753cd68d",
                            "uid": "10462328-0e59c8b0-105f-4998-ab2d-4d1c753cd68d"
                          }
                        ],
                        "id": "2970275e-2eb1-4567-a062-c94c18e3deee",
                        "uid": "10462328-2970275e-2eb1-4567-a062-c94c18e3deee"
                      },
                      {
                        "name": "Rianxeira",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create rianxeira payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "3ac73c87-f222-4a9b-8b11-3bbcaadd2974"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "d75cb97b-30dd-47fb-a362-e5d2f7e8997a"
                                    }
                                  }
                                ],
                                "id": "711bca21-c2e5-4044-9cd7-f8963d0d4dd7",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"rianxeira\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-711bca21-c2e5-4044-9cd7-f8963d0d4dd7"
                              }
                            ],
                            "id": "e515ebfd-ad34-4293-9619-3d27afeb16cc",
                            "uid": "10462328-e515ebfd-ad34-4293-9619-3d27afeb16cc"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create rianxeira (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "85693b7e-552d-450e-8b99-905a527e1d9c"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "923e301a-c78f-431f-b6dd-db11e7df045e"
                                    }
                                  }
                                ],
                                "id": "d6ad3825-6b6d-46a2-86a4-fe0605a4ab57",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"rianxeira\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-d6ad3825-6b6d-46a2-86a4-fe0605a4ab57"
                              }
                            ],
                            "id": "60cc5221-380f-48f5-a586-136ede131a90",
                            "uid": "10462328-60cc5221-380f-48f5-a586-136ede131a90"
                          }
                        ],
                        "id": "7c93eb65-65db-44c4-9e6a-f1b1638bb023",
                        "uid": "10462328-7c93eb65-65db-44c4-9e6a-f1b1638bb023"
                      },
                      {
                        "name": "Western Union",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create westernunion payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "bb7df095-0b71-4a5d-8ce2-095d9fb55fe4"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "685f796c-108c-4228-81a7-21619e7c8c50"
                                    }
                                  }
                                ],
                                "id": "b070a5dc-b092-4042-9c13-88d7a2bea9a6",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"westernunion\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-b070a5dc-b092-4042-9c13-88d7a2bea9a6"
                              }
                            ],
                            "id": "896d461d-ef8a-447c-a12b-cf4f71153d15",
                            "uid": "10462328-896d461d-ef8a-447c-a12b-cf4f71153d15"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create westernunion (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "ed9e8889-c709-4efe-95c0-5a25d291375d"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "badb61c1-3fc1-466b-a3ff-f9f4eff830fd"
                                    }
                                  }
                                ],
                                "id": "1b503067-a84e-4614-939f-1d40ebda5520",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"westernunion\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"USD\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-1b503067-a84e-4614-939f-1d40ebda5520"
                              }
                            ],
                            "id": "9e333ed6-f788-4a0a-80cf-8863ac1e5d62",
                            "uid": "10462328-9e333ed6-f788-4a0a-80cf-8863ac1e5d62"
                          }
                        ],
                        "id": "a906b950-5316-4543-8cf6-c42248559348",
                        "uid": "10462328-a906b950-5316-4543-8cf6-c42248559348"
                      }
                    ],
                    "id": "22bb2d27-ea2d-4609-aab7-23055e852977",
                    "uid": "10462328-22bb2d27-ea2d-4609-aab7-23055e852977"
                  },
                  {
                    "name": "Guatemala",
                    "item": [
                      {
                        "name": "Bam",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create bam payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "a8ca9e92-5e2a-458a-b59c-e169bd274ded"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "c8a2c549-5a77-41b1-9473-99501743566e"
                                    }
                                  }
                                ],
                                "id": "d5c52ff3-8ba7-4981-88a5-e9da7abf1648",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"bam\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"GTQ\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-d5c52ff3-8ba7-4981-88a5-e9da7abf1648"
                              }
                            ],
                            "id": "d7390509-6270-4062-b934-b282d5c28930",
                            "uid": "10462328-d7390509-6270-4062-b934-b282d5c28930"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create bam (Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "d9d1413e-a2f0-4497-8931-d4fc31ba1ef8"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "390b353d-9572-472f-b41f-3a7ac5815843"
                                    }
                                  }
                                ],
                                "id": "c3090e38-c981-43c9-b114-1a8965496b73",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"bam\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"GTQ\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-c3090e38-c981-43c9-b114-1a8965496b73"
                              }
                            ],
                            "id": "ccb124fe-cca7-4fc1-b535-d38931a39139",
                            "uid": "10462328-ccb124fe-cca7-4fc1-b535-d38931a39139"
                          }
                        ],
                        "id": "2241ad4f-bc3d-4cde-b33c-b30c8bd7e619",
                        "uid": "10462328-2241ad4f-bc3d-4cde-b33c-b30c8bd7e619"
                      },
                      {
                        "name": "Banco Continental",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "06058d34-68e0-495d-9e2a-1d36efed8ad2",
                            "uid": "10462328-06058d34-68e0-495d-9e2a-1d36efed8ad2"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "f6d103d9-982b-44b5-a030-b14c3eb2611b",
                            "uid": "10462328-f6d103d9-982b-44b5-a030-b14c3eb2611b"
                          }
                        ],
                        "id": "7e8dfb26-b961-43ab-9a8d-a8ce9babd106",
                        "uid": "10462328-7e8dfb26-b961-43ab-9a8d-a8ce9babd106"
                      }
                    ],
                    "id": "e78b4550-b542-443a-83f2-9bd28cd96af7",
                    "uid": "10462328-e78b4550-b542-443a-83f2-9bd28cd96af7"
                  },
                  {
                    "name": "Mexico",
                    "item": [
                      {
                        "name": "Bancomer",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create BANCOMER payment (Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "361ac95f-1276-4c63-8955-d4b1f5beac41"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "0c860848-75da-4434-b8c1-44b39b6bc960"
                                    }
                                  }
                                ],
                                "id": "c9058126-6420-4c4c-9d26-e07ed9c961d5",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCOMER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-c9058126-6420-4c4c-9d26-e07ed9c961d5"
                              }
                            ],
                            "id": "736d1fbf-4191-4c61-9dce-93992d35ea23",
                            "uid": "10462328-736d1fbf-4191-4c61-9dce-93992d35ea23"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create BANCOMER payment (payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "acd8c5fd-5b49-4084-9011-7ce702422a0a"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "5f3062b7-8753-44e4-ad2f-23e050681ca7"
                                    }
                                  }
                                ],
                                "id": "eb15314c-7be3-4841-a6a8-52b576ca21ff",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANCOMER\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-eb15314c-7be3-4841-a6a8-52b576ca21ff"
                              }
                            ],
                            "id": "20dba47a-41e9-444c-bbf5-0398ae53ae6c",
                            "uid": "10462328-20dba47a-41e9-444c-bbf5-0398ae53ae6c"
                          }
                        ],
                        "id": "7cd4dd45-542e-488e-a811-2995ae09a0b7",
                        "uid": "10462328-7cd4dd45-542e-488e-a811-2995ae09a0b7"
                      },
                      {
                        "name": "Banorte",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "6b331a1d-e9c3-4973-ad19-8a661bdd50f0",
                            "uid": "10462328-6b331a1d-e9c3-4973-ad19-8a661bdd50f0"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "5add8db0-ca86-4b8d-b39b-2d12a790a1e3",
                            "uid": "10462328-5add8db0-ca86-4b8d-b39b-2d12a790a1e3"
                          }
                        ],
                        "id": "0aa7df75-38f7-4f0a-aba8-29ab8be20603",
                        "uid": "10462328-0aa7df75-38f7-4f0a-aba8-29ab8be20603"
                      },
                      {
                        "name": "Bodega Aurrera",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "615f5a2b-8109-4dca-917e-5d5a280284d7",
                            "uid": "10462328-615f5a2b-8109-4dca-917e-5d5a280284d7"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "4df6082b-4f96-4e6b-817a-5f39b2147a49",
                            "uid": "10462328-4df6082b-4f96-4e6b-817a-5f39b2147a49"
                          }
                        ],
                        "id": "d458c5f6-c57e-47a7-95c8-90ff26f4a9da",
                        "uid": "10462328-d458c5f6-c57e-47a7-95c8-90ff26f4a9da"
                      },
                      {
                        "name": "Calimax",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [],
                            "id": "dd641427-82af-4ebf-a68d-d073adbe900e",
                            "uid": "10462328-dd641427-82af-4ebf-a68d-d073adbe900e"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [],
                            "id": "daada1aa-8b95-48d6-863e-da84937a8c18",
                            "uid": "10462328-daada1aa-8b95-48d6-863e-da84937a8c18"
                          }
                        ],
                        "id": "eb315089-db34-4738-a75d-6cc87c253df7",
                        "uid": "10462328-eb315089-db34-4738-a75d-6cc87c253df7"
                      },
                      {
                        "name": "Delahorro",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create delahorro payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "a514cb83-92c9-4997-8935-3256301e9332"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "3f041fba-215c-4011-a133-cf0e87b65d3d"
                                    }
                                  }
                                ],
                                "id": "a8d82080-c8e5-45c6-94ba-bea07183dc33",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"delahorro\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-a8d82080-c8e5-45c6-94ba-bea07183dc33"
                              }
                            ],
                            "id": "8730d643-1bf1-490a-8e88-68d828d1b6aa",
                            "uid": "10462328-8730d643-1bf1-490a-8e88-68d828d1b6aa"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create Delahorro payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "711097d9-7286-491f-b8de-ad6f1ea8cacd"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "a91289fa-5811-4514-9ef0-575f3a5d7e91"
                                    }
                                  }
                                ],
                                "id": "f26bbd17-a4f2-44a6-b096-9c9ba1875d8a",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"delahorro\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-f26bbd17-a4f2-44a6-b096-9c9ba1875d8a"
                              }
                            ],
                            "id": "233c649b-dcf6-48d2-8a64-6df7835347ca",
                            "uid": "10462328-233c649b-dcf6-48d2-8a64-6df7835347ca"
                          }
                        ],
                        "id": "e2181249-eb88-41a2-9c8b-fb0b8bfa8253",
                        "uid": "10462328-e2181249-eb88-41a2-9c8b-fb0b8bfa8253"
                      },
                      {
                        "name": "7 Eleven",
                        "item": [
                          {
                            "name": "Gateway mode",
                            "item": [
                              {
                                "name": "Create 7ELEVEN payment(Gateway mode)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "7314fce4-e526-4771-8c4e-87aa0331f2c3"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "     pm.expect(response).to.have.property('payment_data');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "d28dc432-9a55-447c-9415-e969895d267c"
                                    }
                                  }
                                ],
                                "id": "4b83f61d-19fb-4363-ba2a-a9264b6708da",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"7ELEVEN\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-4b83f61d-19fb-4363-ba2a-a9264b6708da"
                              }
                            ],
                            "id": "9a80c0c6-f9b7-4b0b-976b-45df5e27b21c",
                            "uid": "10462328-9a80c0c6-f9b7-4b0b-976b-45df5e27b21c"
                          },
                          {
                            "name": "Payment page mode",
                            "item": [
                              {
                                "name": "Create 7ELEVEN payment(Payment page)",
                                "event": [
                                  {
                                    "listen": "prerequest",
                                    "script": {
                                      "exec": [
                                        "var uuid = require('uuid');\r",
                                        "\r",
                                        "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                        "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                        "\r",
                                        "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                        "tokens.obtain(terminal_code, password);"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "57b648a6-ade0-4f73-a074-6d507ff27bd6"
                                    }
                                  },
                                  {
                                    "listen": "test",
                                    "script": {
                                      "exec": [
                                        "pm.test(\"Successful request\", function () {",
                                        "    pm.response.to.be.ok;",
                                        "    pm.response.to.have.jsonBody();",
                                        "    ",
                                        "    var response = pm.response.json();",
                                        "    pm.expect(response).to.have.property('redirect_url');",
                                        "});"
                                      ],
                                      "type": "text/javascript",
                                      "packages": {},
                                      "id": "b3c9a959-8384-4b7e-acb1-3ea7ee0123ce"
                                    }
                                  }
                                ],
                                "id": "055a6e98-fed2-4ca8-95dd-5e3efdb9eeec",
                                "protocolProfileBehavior": {
                                  "strictSSL": false,
                                  "disableBodyPruning": true
                                },
                                "request": {
                                  "auth": {
                                    "type": "bearer",
                                    "bearer": [
                                      {
                                        "key": "0",
                                        "value": {
                                          "key": "token",
                                          "value": "{{access_token}}",
                                          "type": "string"
                                        },
                                        "type": "any"
                                      },
                                      {
                                        "key": "token",
                                        "value": "{{access_token}}",
                                        "type": "string"
                                      }
                                    ]
                                  },
                                  "method": "POST",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json",
                                      "type": "text"
                                    }
                                  ],
                                  "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"7ELEVEN\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                                  },
                                  "url": {
                                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                                    "host": [
                                      "{{UNLIMIT_API_URL}}"
                                    ],
                                    "path": [
                                      "api",
                                      "payments"
                                    ]
                                  }
                                },
                                "response": [],
                                "uid": "10462328-055a6e98-fed2-4ca8-95dd-5e3efdb9eeec"
                              }
                            ],
                            "id": "89dd7d69-7c3b-414d-9e28-b9ac7811b26e",
                            "uid": "10462328-89dd7d69-7c3b-414d-9e28-b9ac7811b26e"
                          }
                        ],
                        "id": "c9a43530-99ca-4cc6-bd09-83cddd47c812",
                        "uid": "10462328-c9a43530-99ca-4cc6-bd09-83cddd47c812"
                      }
                    ],
                    "id": "ffd0867d-7c2b-4fd8-896b-21c9d5d2eee9",
                    "uid": "10462328-ffd0867d-7c2b-4fd8-896b-21c9d5d2eee9"
                  },
                  {
                    "name": "Panama",
                    "item": [],
                    "id": "cdbb91e3-6c8c-419b-aba1-edb7a0c34070",
                    "uid": "10462328-cdbb91e3-6c8c-419b-aba1-edb7a0c34070"
                  },
                  {
                    "name": "Peru",
                    "item": [],
                    "id": "fc369ede-20a5-428d-afa6-c6ebe42a1603",
                    "uid": "10462328-fc369ede-20a5-428d-afa6-c6ebe42a1603"
                  }
                ],
                "id": "02c3eba4-4957-400f-abc1-a837ab37aca0",
                "uid": "10462328-02c3eba4-4957-400f-abc1-a837ab37aca0"
              },
              {
                "name": "Boleto",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create BOLETO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c275498c-00f1-45bb-b898-6e3e4d1f8e16"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6338dab6-a37c-4714-8897-bd55ad305e87"
                            }
                          }
                        ],
                        "id": "14ea815e-a7b2-44b2-9326-39af5a7231b7",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\",\n        \"shipping_address\": {\n            \"zip\": \"12345678\"\n        }\n    },\n    \"payment_method\": \"BOLETO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-14ea815e-a7b2-44b2-9326-39af5a7231b7"
                      }
                    ],
                    "id": "d1e07ddc-c628-469e-9fdc-bee3f86fca23",
                    "uid": "10462328-d1e07ddc-c628-469e-9fdc-bee3f86fca23"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create BOLETO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "62b18c57-d51f-430f-b007-275112ace7e4"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "09b50025-c034-4c23-9f53-768b0bc1787e"
                            }
                          }
                        ],
                        "id": "2b20ea06-1524-4036-b91c-9e7193f442cc",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"BOLETO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2b20ea06-1524-4036-b91c-9e7193f442cc"
                      }
                    ],
                    "id": "51aa2b06-3a01-4b5a-9b74-07fd26230691",
                    "uid": "10462328-51aa2b06-3a01-4b5a-9b74-07fd26230691"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create BOLETO payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7b5de60b-06a0-4138-bc71-2b4afa1e6020"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c7705bb1-21f5-4716-9873-4e6a6a2fd7f1"
                            }
                          }
                        ],
                        "id": "0510ab69-e468-4d7e-a21e-9c518520156b",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\",\n        \"shipping_address\": {\n            \"zip\": \"12345678\"\n        }\n    },\n    \"payment_method\": \"BOLETO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-0510ab69-e468-4d7e-a21e-9c518520156b"
                      }
                    ],
                    "id": "311bafc6-9f7b-4a16-9c93-a68507f0ce50",
                    "uid": "10462328-311bafc6-9f7b-4a16-9c93-a68507f0ce50"
                  }
                ],
                "id": "84f1caf3-299c-4655-92b0-4cc6e6aa11d1",
                "uid": "10462328-84f1caf3-299c-4655-92b0-4cc6e6aa11d1"
              },
              {
                "name": "Efecty",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create EFECTY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1d621ffa-3b49-4c32-8a67-264537977523"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "38b5de3f-9ba5-42ed-896d-9072af2c528b"
                            }
                          }
                        ],
                        "id": "c349cf1f-0120-4578-9cd4-f6fe9c4c20d7",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",    \n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"EFECTY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c349cf1f-0120-4578-9cd4-f6fe9c4c20d7"
                      }
                    ],
                    "id": "5ae530a3-8120-4152-9a6a-e05232e80e22",
                    "uid": "10462328-5ae530a3-8120-4152-9a6a-e05232e80e22"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create EFECTY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "253504f0-0ae2-4d6e-99ba-4d82e25b8975"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3498fd11-2afd-4912-bcf9-6484dafb2efc"
                            }
                          }
                        ],
                        "id": "cc532c80-d5a8-4aac-90e8-f10f5fdfe45c",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",    \n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"EFECTY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-cc532c80-d5a8-4aac-90e8-f10f5fdfe45c"
                      }
                    ],
                    "id": "72ccb5be-5bdf-4e1f-b83c-e2ba2d3afbf7",
                    "uid": "10462328-72ccb5be-5bdf-4e1f-b83c-e2ba2d3afbf7"
                  }
                ],
                "id": "e1023afe-d015-4741-a1a5-f57d7bf610b1",
                "uid": "10462328-e1023afe-d015-4741-a1a5-f57d7bf610b1"
              },
              {
                "name": "OXXO",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create OXXO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "bc41feb9-a2e7-4a14-a709-405f2bd423d9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "     pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "335bad36-1980-4def-9cb8-ef2bde664d7d"
                            }
                          }
                        ],
                        "id": "eedafef5-ef09-48ed-9ece-a5ba7acd2ca9",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OXXO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-eedafef5-ef09-48ed-9ece-a5ba7acd2ca9"
                      }
                    ],
                    "id": "0fbf5cf4-967c-4c0a-9065-45a75b45b4fc",
                    "uid": "10462328-0fbf5cf4-967c-4c0a-9065-45a75b45b4fc"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create OXXO payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c1e7e845-707f-4231-9b1a-93a2476b08ed"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "cd1a92c0-d2ad-42b0-b364-2e058a9678c7"
                            }
                          }
                        ],
                        "id": "3765f93d-2dc6-4e0c-a000-c9f374ff4a19",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OXXO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-3765f93d-2dc6-4e0c-a000-c9f374ff4a19"
                      }
                    ],
                    "id": "0824ab16-6461-4020-816e-9e07a6333091",
                    "uid": "10462328-0824ab16-6461-4020-816e-9e07a6333091"
                  }
                ],
                "id": "d10b7dda-ef13-4f43-9ec1-23672063dff8",
                "uid": "10462328-d10b7dda-ef13-4f43-9ec1-23672063dff8"
              },
              {
                "name": "SPEI",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create SPEI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "dad50c4b-c4d8-431b-a285-f1f4239f9a91"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fcbb5f0c-a77e-4395-a0b7-0986cd3f2a92"
                            }
                          }
                        ],
                        "id": "dec4dddf-9cac-4586-8142-3f877acb6d76",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-dec4dddf-9cac-4586-8142-3f877acb6d76"
                      }
                    ],
                    "id": "ac5a5c5b-0cbe-4986-bfe2-342dad7b5b27",
                    "uid": "10462328-ac5a5c5b-0cbe-4986-bfe2-342dad7b5b27"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create SPEI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "cf195041-07fa-4f74-8e09-5cbecd7049ed"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "42f3ce1b-9b9f-4041-be5b-67f75b919f4f"
                            }
                          }
                        ],
                        "id": "ef471775-0ec1-45b6-8e20-9d218cca4be4",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-ef471775-0ec1-45b6-8e20-9d218cca4be4"
                      }
                    ],
                    "id": "f07822f8-89cd-4b25-8485-ada0feeefcb0",
                    "uid": "10462328-f07822f8-89cd-4b25-8485-ada0feeefcb0"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create SPEI payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f1b1affc-d75e-4cd1-bda1-7683b7fd18ed"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "65d5dd64-a799-448d-a707-ccea58c30817"
                            }
                          }
                        ],
                        "id": "b08eec6c-9bdf-4965-8793-126acbd70a12",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b08eec6c-9bdf-4965-8793-126acbd70a12"
                      }
                    ],
                    "id": "f812f71e-91ff-48e0-a272-76fafdf111e5",
                    "uid": "10462328-f812f71e-91ff-48e0-a272-76fafdf111e5"
                  }
                ],
                "id": "fcdfb85d-a2ab-408e-bbbc-6c7bbb8f64f3",
                "uid": "10462328-fcdfb85d-a2ab-408e-bbbc-6c7bbb8f64f3"
              },
              {
                "name": "Davivienda",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create davivienda payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "99837bea-519d-4f94-912f-0e54a24edab1"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7285e8a9-bffb-44c4-b22d-b9353cb99e3c"
                            }
                          }
                        ],
                        "id": "198b7071-12f7-40c7-b6c5-0c9d530f69c6",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"davivienda\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"123456789\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-198b7071-12f7-40c7-b6c5-0c9d530f69c6"
                      }
                    ],
                    "id": "1bbac5bc-2946-4437-acc6-4093a3f8e4ae",
                    "uid": "10462328-1bbac5bc-2946-4437-acc6-4093a3f8e4ae"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create davivienda payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "71236d98-1333-4883-8a85-824655126607"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5957e96e-1ec9-4f65-aaad-111315f03d55"
                            }
                          }
                        ],
                        "id": "e99c36c2-11d1-4b41-be2f-a6f7f6b2af2d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"davivienda\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"123456789\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-e99c36c2-11d1-4b41-be2f-a6f7f6b2af2d"
                      }
                    ],
                    "id": "6b1e5e6d-2717-4ea8-aee3-b8aa6d422dcd",
                    "uid": "10462328-6b1e5e6d-2717-4ea8-aee3-b8aa6d422dcd"
                  }
                ],
                "id": "396476b1-2a17-4675-9cb2-5d49fc0bb89f",
                "uid": "10462328-396476b1-2a17-4675-9cb2-5d49fc0bb89f"
              },
              {
                "name": "DiMo",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Dimo payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "0d782d89-0661-457a-b7bd-8338d9cfcaa7"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e7008431-37f0-4d93-8cff-2db8ec7363aa"
                            }
                          }
                        ],
                        "id": "e7aa22c7-b446-454d-a773-8472b65e2291",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-e7aa22c7-b446-454d-a773-8472b65e2291"
                      }
                    ],
                    "id": "aa902183-1cfb-4480-8c66-4dee0d5f6c4f",
                    "uid": "10462328-aa902183-1cfb-4480-8c66-4dee0d5f6c4f"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Dimo payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "70246839-0c82-46c0-8168-da2d476202c7"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "e0cfb9c4-46d2-4e26-8cdf-bc27bde897f0"
                            }
                          }
                        ],
                        "id": "2801fa47-d9b5-4be2-a5a2-f383aaccd45e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2801fa47-d9b5-4be2-a5a2-f383aaccd45e"
                      }
                    ],
                    "id": "81ea75e5-4871-46f0-8f67-5aa8c225c3fb",
                    "uid": "10462328-81ea75e5-4871-46f0-8f67-5aa8c225c3fb"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Dimo payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d9e96803-863d-4c33-bbbe-fb71ded24f90"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fff8584c-551f-46be-86b5-aace10b094fa"
                            }
                          }
                        ],
                        "id": "8b2f323c-6c08-4589-9b7d-f43ee1813ff6",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8b2f323c-6c08-4589-9b7d-f43ee1813ff6"
                      }
                    ],
                    "id": "aebd702d-1c96-4864-b8ea-73b4dd3da6e3",
                    "uid": "10462328-aebd702d-1c96-4864-b8ea-73b4dd3da6e3"
                  }
                ],
                "id": "077d7cc4-02eb-45a3-9857-f8f84f7ed2f8",
                "uid": "10462328-077d7cc4-02eb-45a3-9857-f8f84f7ed2f8"
              },
              {
                "name": "PIX",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PIX payment(gateway)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "19a01c46-068f-4f0e-b87a-4be1cc7ca8d8"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7002545a-673a-4ac3-bf27-4cb7bb8fb19d"
                            }
                          }
                        ],
                        "id": "04178f44-ad69-4f42-972d-f4254e7c32ee",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"PIX\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-04178f44-ad69-4f42-972d-f4254e7c32ee"
                      }
                    ],
                    "id": "b8b28aa6-b75e-41a3-b191-74153bfb5b90",
                    "uid": "10462328-b8b28aa6-b75e-41a3-b191-74153bfb5b90"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PIX payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "cd991cae-c26a-4a44-a86c-5bfb516c90c2"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "28db2e35-fa43-4965-af99-895ffa9b0c8f"
                            }
                          }
                        ],
                        "id": "89bfcd15-1dd6-4c14-b4d3-7bf9ea88f8c9",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"PIX\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-89bfcd15-1dd6-4c14-b4d3-7bf9ea88f8c9"
                      }
                    ],
                    "id": "5bb28834-ed00-4ec1-9ebf-4575a65248b5",
                    "uid": "10462328-5bb28834-ed00-4ec1-9ebf-4575a65248b5"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create PIX payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "7c920212-d212-4a22-9868-dc91fee88a90"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "84e9e885-12e4-4a9d-8244-b7239585724a"
                            }
                          }
                        ],
                        "id": "a6a649a8-a5af-4467-9938-ef6bdba78ba1",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"PIX\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a6a649a8-a5af-4467-9938-ef6bdba78ba1"
                      }
                    ],
                    "id": "946ea06e-cbda-45f5-ba94-d80c8be096ff",
                    "uid": "10462328-946ea06e-cbda-45f5-ba94-d80c8be096ff"
                  }
                ],
                "id": "471873d3-5e4d-4dc8-bf85-3ebad830c555",
                "uid": "10462328-471873d3-5e4d-4dc8-bf85-3ebad830c555"
              },
              {
                "name": "QR code PicPay",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PICPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "da5233c9-e846-4351-920f-afbd5493ada9"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5b5d6133-06d9-4242-ad16-f3a0572c88d1"
                            }
                          }
                        ],
                        "id": "71da44db-2a40-4863-b5fb-967fdb406b3d",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PICPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n       \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-71da44db-2a40-4863-b5fb-967fdb406b3d"
                      }
                    ],
                    "id": "0ace92c6-dc19-4036-a33c-8393cc5e3cef",
                    "uid": "10462328-0ace92c6-dc19-4036-a33c-8393cc5e3cef"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PICPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "09f0516f-7310-4715-96fe-9dd1d1ee9370"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c0d6d4e6-d2ce-40f7-acce-de0415ab0cb7"
                            }
                          }
                        ],
                        "id": "56088a91-99a5-478f-b95c-aa24742f5365",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PICPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n       \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-56088a91-99a5-478f-b95c-aa24742f5365"
                      }
                    ],
                    "id": "3dab622b-6827-449d-892c-252d4d671bb0",
                    "uid": "10462328-3dab622b-6827-449d-892c-252d4d671bb0"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create PICPAY payment(ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "86a7868d-32e9-42e1-9856-343c0f3146fe"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "caa3f94a-237e-45f4-a491-cd6895f31f6c"
                            }
                          }
                        ],
                        "id": "cc1377e9-e114-41d1-8ccf-5bfc49d48076",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PICPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n       \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"401.162.304-01\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-cc1377e9-e114-41d1-8ccf-5bfc49d48076"
                      }
                    ],
                    "id": "d7ab174d-162a-4e70-8dc4-9973bfee0e3d",
                    "uid": "10462328-d7ab174d-162a-4e70-8dc4-9973bfee0e3d"
                  }
                ],
                "id": "31d71637-359b-4e3b-a1ab-1c474411f9a7",
                "uid": "10462328-31d71637-359b-4e3b-a1ab-1c474411f9a7"
              },
              {
                "name": "Codi",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create CODI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "36d0b837-5a63-4925-8974-256d3f6a0f09"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b0a61790-c676-4be3-8a70-175b28940e84"
                            }
                          }
                        ],
                        "id": "8b94eef8-b60a-43f4-9b73-c29573a7508a",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CODI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8b94eef8-b60a-43f4-9b73-c29573a7508a"
                      }
                    ],
                    "id": "e967aff4-0fd2-44c8-9009-9ce7d9200874",
                    "uid": "10462328-e967aff4-0fd2-44c8-9009-9ce7d9200874"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create CODI payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "50fe8d3e-6c9c-452a-83b3-1c12da44d5ed"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "aa6a685c-a850-4305-9be1-290074bcd5b8"
                            }
                          }
                        ],
                        "id": "40651fe3-c956-48e1-84d1-9e0695ac9c6e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CODI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-40651fe3-c956-48e1-84d1-9e0695ac9c6e"
                      }
                    ],
                    "id": "ee04f6e5-1c1f-46b1-b7ae-69de618aad3f",
                    "uid": "10462328-ee04f6e5-1c1f-46b1-b7ae-69de618aad3f"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create CODI payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b0b4d1b8-6122-436e-b38a-b495d7fe591f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f3ac539c-2688-46fc-9000-dc1809e452a6"
                            }
                          }
                        ],
                        "id": "24013fe5-74ea-4e78-ac25-4b5371c05052",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"CODI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-24013fe5-74ea-4e78-ac25-4b5371c05052"
                      }
                    ],
                    "id": "19e7a7ee-8e8a-46fa-8d1d-473bbff8f926",
                    "uid": "10462328-19e7a7ee-8e8a-46fa-8d1d-473bbff8f926"
                  }
                ],
                "id": "b6b6c233-cebd-4fc1-9cf3-e7a39752ee0f",
                "uid": "10462328-b6b6c233-cebd-4fc1-9cf3-e7a39752ee0f"
              },
              {
                "name": "PSE",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PSE payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2d811fea-9d9c-48c2-ba92-2089cbf489b2"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5c082b36-e839-49c7-9002-b51cd27210af"
                            }
                          }
                        ],
                        "id": "8513ceb6-11bf-402e-8e6a-f77d02da55d3",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PSE\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"bank_code\": \"1032\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"3051234567\",\n        \"document_type\": \"TID\",\n        \"identity\": \"401.162.304-01\",\n        \"living_address\": {\n            \"address\": \"1600 Pennsylvania Ave NW\"\n        }\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8513ceb6-11bf-402e-8e6a-f77d02da55d3"
                      }
                    ],
                    "id": "80d79652-7550-4dbb-b96a-9ae354127b63",
                    "uid": "10462328-80d79652-7550-4dbb-b96a-9ae354127b63"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PSE payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "9fcc0f90-1d06-4ff4-bd1e-547d0d52ae35"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ad90820c-246d-4176-99d1-21b4b9f733f3"
                            }
                          }
                        ],
                        "id": "c2565d73-a86e-4416-bc47-6a73db13aec1",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PSE\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"bank_code\": \"1032\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"phone\": \"3051234567\",\n        \"document_type\": \"TID\",\n        \"identity\": \"401.162.304-01\",\n        \"living_address\": {\n            \"address\": \"1600 Pennsylvania Ave NW\"\n        }\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-c2565d73-a86e-4416-bc47-6a73db13aec1"
                      }
                    ],
                    "id": "a10a7051-9c1f-434b-a49c-7a08f7fe8dc3",
                    "uid": "10462328-a10a7051-9c1f-434b-a49c-7a08f7fe8dc3"
                  }
                ],
                "id": "bdb066b1-0b37-403d-8c2b-00fbefed37b2",
                "uid": "10462328-bdb066b1-0b37-403d-8c2b-00fbefed37b2"
              },
              {
                "name": "NuPay",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create NUPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ebd547e1-17b6-4a72-a3fe-6fd71898fb28"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "fb8460bb-61f7-4eeb-bc22-d8aff794a8f8"
                            }
                          }
                        ],
                        "id": "093618e4-d1e9-4acb-8fce-b6cb935a45e0",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"count\": 1,\n                \"description\": \"test\",\n                \"name\": \"apple\",\n                \"price\": 1\n            }\n        ]\n    },\n    \"payment_method\": \"NUPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"67753423657\",\n        \"phone\": \"5501234567890\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-093618e4-d1e9-4acb-8fce-b6cb935a45e0"
                      }
                    ],
                    "id": "3b69aaf8-5df0-4f75-a5ce-2a353eac8aee",
                    "uid": "10462328-3b69aaf8-5df0-4f75-a5ce-2a353eac8aee"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create NUPAY payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "30e3a037-387e-4480-8744-b0ae55c966f2"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b8cdf81b-f63d-4c5b-819c-99e48710b27c"
                            }
                          }
                        ],
                        "id": "f3d741d7-50d0-42e4-83a7-e3a93bcb94ff",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"count\": 1,\n                \"description\": \"test\",\n                \"name\": \"apple\",\n                \"price\": 1\n            }\n        ]\n    },\n    \"payment_method\": \"NUPAY\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"identity\": \"67753423657\",\n        \"phone\": \"5501234567890\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-f3d741d7-50d0-42e4-83a7-e3a93bcb94ff"
                      }
                    ],
                    "id": "0cbefddb-1ff9-4f49-9a83-447f52750046",
                    "uid": "10462328-0cbefddb-1ff9-4f49-9a83-447f52750046"
                  }
                ],
                "id": "4db5365a-2d15-4c4e-87bc-536749c575ef",
                "uid": "10462328-4db5365a-2d15-4c4e-87bc-536749c575ef"
              },
              {
                "name": "Pago Efectivo",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create PAGOEFECTIVO payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5bb6d50e-6f3d-449c-bcc8-100dd92d08fc"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8f8c169f-1547-4e1f-8ff8-79bd3e6a7f5a"
                            }
                          }
                        ],
                        "id": "3fc80dba-9353-44c6-969c-f9c09a467d95",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAGOEFECTIVO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"document_type\": \"DNI\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"phone\":\"123456789\",\n        \"identity\": \"12345678\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-3fc80dba-9353-44c6-969c-f9c09a467d95"
                      }
                    ],
                    "id": "f92f87d8-dcf6-4dcd-9492-b196105e11b9",
                    "uid": "10462328-f92f87d8-dcf6-4dcd-9492-b196105e11b9"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create PAGOEFECTIVO payment (Payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "8b34b59d-c1b1-46fa-ae47-d0dd500d494a"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "54d850a5-c0e3-4a58-8063-ae5333a30347"
                            }
                          }
                        ],
                        "id": "063724bf-8cc4-40f0-8a5d-22dfd77bc845",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAGOEFECTIVO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-063724bf-8cc4-40f0-8a5d-22dfd77bc845"
                      }
                    ],
                    "id": "039a5614-cf65-48a4-a3de-48093c0e22df",
                    "uid": "10462328-039a5614-cf65-48a4-a3de-48093c0e22df"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create PAGOEFECTIVO payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b89b2293-febe-4d82-a819-58cd2a09c304"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "41c43319-2a66-4ebd-8c70-8a438d55487c"
                            }
                          }
                        ],
                        "id": "14a706d9-0817-4014-b71e-488d074fcd25",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"PAGOEFECTIVO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"COP\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"document_type\": \"DNI\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"phone\":\"123456789\",\n        \"identity\": \"12345678\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-14a706d9-0817-4014-b71e-488d074fcd25"
                      }
                    ],
                    "id": "d2e6959c-821e-4682-9915-7a79b7af050a",
                    "uid": "10462328-d2e6959c-821e-4682-9915-7a79b7af050a"
                  }
                ],
                "id": "cc092f64-e9f0-4574-bf13-26c2322265b1",
                "uid": "10462328-cc092f64-e9f0-4574-bf13-26c2322265b1"
              },
              {
                "name": "Mercado Pago",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create Mercado Pago payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "0620fcbf-0ba5-406b-8e52-b17cf326d0b6"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "40ec5e0f-2453-469d-ae5c-840a151c3e1a"
                            }
                          }
                        ],
                        "id": "712c2dde-6a60-47d8-b33b-9133099a1c46",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"id\": \"123456789\",\n                \"name\": \"Apple\",\n                \"description\": \"Testing apple\"\n            }\n        ]\n    },\n    \"payment_method\": \"MERCADOPAGO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-712c2dde-6a60-47d8-b33b-9133099a1c46"
                      }
                    ],
                    "id": "2d6988a1-3f5f-4ca3-b66a-b949f1dfe436",
                    "uid": "10462328-2d6988a1-3f5f-4ca3-b66a-b949f1dfe436"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create Mercado Pago payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5391fa50-eda9-4c1d-8437-67911b9be601"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2380cf0b-fd24-4548-9c00-91f01acd6749"
                            }
                          }
                        ],
                        "id": "e378adb8-2ee7-49e1-adb3-d2d680af884a",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"id\": \"123456789\",\n                \"name\": \"Apple\",\n                \"description\": \"Testing apple\"\n            }\n        ]\n    },\n    \"payment_method\": \"MERCADOPAGO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-e378adb8-2ee7-49e1-adb3-d2d680af884a"
                      }
                    ],
                    "id": "64fedbb9-e1fa-4b0c-89c3-c1a04ef026a5",
                    "uid": "10462328-64fedbb9-e1fa-4b0c-89c3-c1a04ef026a5"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create Mercado Pago payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP');\r",
                                "\r",
                                "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                                "tokens.obtain(terminal_code, password);"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c045b90f-7d9d-4579-8be7-4c847aa8221d"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3fa5b5e1-79e5-4f48-9038-843afcabaec6"
                            }
                          }
                        ],
                        "id": "f3e547fd-5759-49cf-9187-494e55f6968f",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\",\n        \"items\": [\n            {\n                \"id\": \"123456789\",\n                \"name\": \"Apple\",\n                \"description\": \"Testing apple\"\n            }\n        ]\n    },\n    \"payment_method\": \"MERCADOPAGO\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"BRL\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-f3e547fd-5759-49cf-9187-494e55f6968f"
                      }
                    ],
                    "id": "ec6948e3-165a-491a-98a9-3c902102c00e",
                    "uid": "10462328-ec6948e3-165a-491a-98a9-3c902102c00e"
                  }
                ],
                "id": "15fe7226-60a1-4cf6-8c0f-1879c99fce6f",
                "uid": "10462328-15fe7226-60a1-4cf6-8c0f-1879c99fce6f"
              }
            ],
            "id": "593438b5-a09d-4ac6-8e62-4feda723b7eb",
            "uid": "10462328-593438b5-a09d-4ac6-8e62-4feda723b7eb"
          },
          {
            "name": "India",
            "item": [
              {
                "name": "Netbanking  (Internet Banking India)",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create netbankinginr payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD_IND');\r",
                                "\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "a74428d6-6159-454f-a430-d6a3b8f13f76"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2ecd09f1-6e12-4666-82e2-747e9262b15d"
                            }
                          }
                        ],
                        "id": "6cbeaf81-5aee-4180-a393-42a8962a563b",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"netbankinginr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n \"ewallet_account\":\n    {\n        \"bank_code\": \"INB1111\"\n}\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-6cbeaf81-5aee-4180-a393-42a8962a563b"
                      }
                    ],
                    "id": "52032c9e-f108-487c-882d-d1a6ecc264a7",
                    "uid": "10462328-52032c9e-f108-487c-882d-d1a6ecc264a7"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create netbankinginr payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "c5eceeb1-db72-4685-ba4f-3c0d27141904"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b8d08e59-e090-47e3-991d-537bd482dcbb"
                            }
                          }
                        ],
                        "id": "beb8429b-5de5-4722-b867-3b3ae764a644",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"netbankinginr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-beb8429b-5de5-4722-b867-3b3ae764a644"
                      }
                    ],
                    "id": "be8572bc-de18-42a9-a127-912ef52a227e",
                    "uid": "10462328-be8572bc-de18-42a9-a127-912ef52a227e"
                  }
                ],
                "id": "9d9b8420-d8eb-47ff-8ecd-ab0654253859",
                "uid": "10462328-9d9b8420-d8eb-47ff-8ecd-ab0654253859"
              },
              {
                "name": "UPI (Unified Payments Interface)",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create upi payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "2df7220f-28a1-42c6-aa72-d8079298649c"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "1b2630a4-7257-4093-8f94-25fb54c4a3bf"
                            }
                          }
                        ],
                        "id": "9987e7b6-447c-4784-9eac-e686391a21ed",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"UPI\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-9987e7b6-447c-4784-9eac-e686391a21ed"
                      }
                    ],
                    "id": "850d8459-a1d4-47de-8d06-13ced215d5bb",
                    "uid": "10462328-850d8459-a1d4-47de-8d06-13ced215d5bb"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create upi payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "bca6c2a6-09ec-4739-9168-24b4013120ab"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "be4a8485-ac32-4868-9d83-a171ba803a15"
                            }
                          }
                        ],
                        "id": "fd31977b-6c33-4f98-b03d-de207b72db9e",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"upi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-fd31977b-6c33-4f98-b03d-de207b72db9e"
                      }
                    ],
                    "id": "5ff0b385-b677-48b2-bafd-033c9f99e374",
                    "uid": "10462328-5ff0b385-b677-48b2-bafd-033c9f99e374"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create upi payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP_IND');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP_IND');\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "40b39b49-e252-4283-84a3-fe7501f53b73"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "d2e47a9b-7473-4894-a267-d3684611f778"
                            }
                          }
                        ],
                        "id": "7eabef17-4bda-4d88-ae7c-7318a499baca",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"upi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-7eabef17-4bda-4d88-ae7c-7318a499baca"
                      }
                    ],
                    "id": "87b612f8-5684-49e0-81da-e8cfdbc7fdef",
                    "uid": "10462328-87b612f8-5684-49e0-81da-e8cfdbc7fdef"
                  }
                ],
                "id": "8c7995ae-9dc4-491c-9521-3115978151d4",
                "uid": "10462328-8c7995ae-9dc4-491c-9521-3115978151d4"
              },
              {
                "name": "VpaUPI",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create vpaupi payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "6a07b7a4-2471-4462-ab9d-4b884337db57"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "99ae6f6a-5763-407f-9310-c1ef4bfbd102"
                            }
                          }
                        ],
                        "id": "2e6c547b-3b56-4ef0-b285-834326369273",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"vpaupi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"user123@bank\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-2e6c547b-3b56-4ef0-b285-834326369273"
                      }
                    ],
                    "id": "a02f33ed-e72c-4c93-a38b-51391a587dfe",
                    "uid": "10462328-a02f33ed-e72c-4c93-a38b-51391a587dfe"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create vpaupi payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "036955b8-b44c-4b93-a68f-e52845b37403"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "f92141b7-084c-404c-bafa-a3719ef1ad38"
                            }
                          }
                        ],
                        "id": "a0e18113-a39e-4c3c-bffe-1f57f34a519f",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"vpaupi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    }\n\n\n    \n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a0e18113-a39e-4c3c-bffe-1f57f34a519f"
                      }
                    ],
                    "id": "f109be71-00c0-42f7-a9ad-a1be0ca80d21",
                    "uid": "10462328-f109be71-00c0-42f7-a9ad-a1be0ca80d21"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create vpaupi payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP_IND');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP_IND');\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "aaf7e288-8a0b-471f-adc4-bea1a772ed80"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "3dcf9958-fb77-4001-914d-f9b4812fdc77"
                            }
                          }
                        ],
                        "id": "b44f2add-08f0-4a7b-9f74-44cb90bab9ad",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"vpaupi\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"user123@bank\"\n    }\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b44f2add-08f0-4a7b-9f74-44cb90bab9ad"
                      }
                    ],
                    "id": "401f17a8-2b93-49f1-8a49-d2c46f7d7406",
                    "uid": "10462328-401f17a8-2b93-49f1-8a49-d2c46f7d7406"
                  }
                ],
                "id": "32226c2e-e8dd-4def-b8ab-32df553963e6",
                "uid": "10462328-32226c2e-e8dd-4def-b8ab-32df553963e6"
              },
              {
                "name": "Indian wallets",
                "item": [
                  {
                    "name": "Gateway mode",
                    "item": [
                      {
                        "name": "Create walletsinr payment (Gateway mode)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('GATEWAY_PASSWORD_IND');\r",
                                "\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "4b799975-2090-4bf4-98a1-c9301747c3c5"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    ",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "b42b06c1-bc72-4a32-bdc6-babd56855a30"
                            }
                          }
                        ],
                        "id": "a3e81f14-5665-4691-ab66-703eff229cd2",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"walletsinr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"ewallet_account\":\n    {\n        \"bank_code\": \"PHONEPE\",\n        \"id\":\"+911234567890\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-a3e81f14-5665-4691-ab66-703eff229cd2"
                      }
                    ],
                    "id": "b0acc191-0477-4781-a9f0-7f732a4849b8",
                    "uid": "10462328-b0acc191-0477-4781-a9f0-7f732a4849b8"
                  },
                  {
                    "name": "Payment page mode",
                    "item": [
                      {
                        "name": "Create walletsinr payment (payment page)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "\r",
                                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE_IND');\r",
                                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD_IND');\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "63a5e667-8117-4728-a2ec-6a0cd2b23c27"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "81f02d60-1059-40b1-96ea-4f6aad8194d7"
                            }
                          }
                        ],
                        "id": "5de83df4-3c30-45ef-a5c1-6de9870931f4",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"walletsinr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-5de83df4-3c30-45ef-a5c1-6de9870931f4"
                      }
                    ],
                    "id": "302b4855-1aad-4f9b-b93a-180f86258de9",
                    "uid": "10462328-302b4855-1aad-4f9b-b93a-180f86258de9"
                  },
                  {
                    "name": "Extended response",
                    "item": [
                      {
                        "name": "Create walletsinr payment (ext resp)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "exec": [
                                "var uuid = require('uuid');\r",
                                "\r",
                                "var terminal_code = pm.environment.get('TERMINAL_CODE_EXT_RESP_IND');\r",
                                "var password = pm.environment.get('TERMINAL_PASSWORD_EXT_RESP_IND');\r",
                                "\r",
                                "pm.environment.unset(\"access_token\");\r",
                                "pm.environment.unset(\"refresh_token\");\r",
                                "\r",
                                "pm.sendRequest({\r",
                                "    url: `https://sandbox.in.unlimit.com/api/auth/token`,\r",
                                "    method: 'POST',\r",
                                "    header: 'Content-Type:application/x-www-form-urlencoded',\r",
                                "    body: {\r",
                                "        mode: 'raw',\r",
                                "        raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`\r",
                                "    }\r",
                                "}, function (err, res) {\r",
                                "    \r",
                                "    if(err){ \r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    if(res.code !== 200){\r",
                                "        throw new Error(\"Authentication Error\");\r",
                                "    }\r",
                                "    \r",
                                "    var response = res.json();\r",
                                "    pm.environment.set(\"access_token_ind\", response.access_token);\r",
                                "    pm.environment.set(\"refresh_token_ind\", response.refresh_token);\r",
                                "});\r",
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "5816811c-7c39-47ca-8c16-350d698b830f"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "    ",
                                "    var response = pm.response.json();",
                                "    ",
                                "    pm.expect(response).to.have.property('payment_data');",
                                "    pm.expect(response.payment_data).to.have.property('extended_data');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {},
                              "id": "ce99c4c2-5325-43ad-8aed-084307359c0a"
                            }
                          }
                        ],
                        "id": "6fbd55d8-cbbd-4de7-89f1-74951c1f64e8",
                        "protocolProfileBehavior": {
                          "strictSSL": false,
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "value": "{{access_token}}",
                                  "type": "string"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token_ind}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"walletsinr\",\n    \"payment_data\": {\n        \"amount\": \"1\",\n        \"currency\": \"INR\"\n    },\n    \"ewallet_account\":\n    {\n        \"bank_code\": \"PHONEPE\",\n        \"id\":\"+911234567890\"\n    }\n\n}",
                            "options": {
                              "raw": {
                                "language": "json"
                              }
                            }
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL_IND}}/api/payments",
                            "host": [
                              "{{UNLIMIT_API_URL_IND}}"
                            ],
                            "path": [
                              "api",
                              "payments"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-6fbd55d8-cbbd-4de7-89f1-74951c1f64e8"
                      }
                    ],
                    "id": "54260262-16bb-439b-a421-6b1264c6edd1",
                    "uid": "10462328-54260262-16bb-439b-a421-6b1264c6edd1"
                  }
                ],
                "id": "41c57341-754b-4adf-af0c-b809e04c677a",
                "uid": "10462328-41c57341-754b-4adf-af0c-b809e04c677a"
              }
            ],
            "id": "a052110f-fae1-4caa-8e56-8e1c9759814b",
            "uid": "10462328-a052110f-fae1-4caa-8e56-8e1c9759814b"
          }
        ],
        "id": "c6143109-b538-4019-b678-ab6a893adda5",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c81974c-8e92-4d42-b1f0-c51ff06a3a79",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ae36bc0-c83e-45c2-b719-844e66ebc715",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ]
            }
          }
        ],
        "uid": "10462328-c6143109-b538-4019-b678-ab6a893adda5"
      },
      {
        "name": "Refunds",
        "item": [
          {
            "name": "Create refund",
            "item": [
              {
                "name": "Create payment for refund",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "439967a2-eb53-4a22-96d3-803ba1188414",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    pm.collectionVariables.set('payment_id_for_refund', response.payment_data.id);",
                        "    ",
                        "    postman.setNextRequest('Create refund');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "047d6fbf-5f79-418e-87cc-9f7add8223ad",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "efa231dd-b96e-4684-a81e-cd352814bef2",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-efa231dd-b96e-4684-a81e-cd352814bef2"
              },
              {
                "name": "Create refund",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "652b3dda-68c6-4e69-9f04-69720fdf7507",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "pm.expect(pm.collectionVariables.get('payment_id_for_refund')).to.not.be.undefined;",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22fa845c-7db7-4750-ac63-2779b355ef18",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('last_refund_id', response.refund_data.id);",
                        "    ",
                        "    postman.setNextRequest('Get refund by merchant order id');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "305d38e9-bb7f-45b7-8061-d5bf6f289f87",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_refund}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-305d38e9-bb7f-45b7-8061-d5bf6f289f87"
              }
            ],
            "id": "89c6c15e-16e7-4962-83d5-a9cefd77462d",
            "description": "- Merchant makes POST request in JSON format to create new refund to endpoint **/api/refunds**, [see more](https://integration.unlimit.com/#createRefund)\n- Merchant can create new refund only after successfully creation of payment or recurring payment\n- Merchant must have payment id (or recurring id) and send it in refund request\n- Merchant receives response with created transaction result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "736d32a9-ae1d-4a9a-bb64-178c72c67657"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "1b06ecd6-4613-489d-918d-f64ed7d3848c"
                }
              }
            ],
            "uid": "10462328-89c6c15e-16e7-4962-83d5-a9cefd77462d"
          },
          {
            "name": "Get refunds list",
            "item": [
              {
                "name": "Get refund by merchant order id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94036c54-21a9-43c1-9152-5b0b15c3946e",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3038d06-8b79-4299-8bbc-62b102a69088",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('data');",
                        "    ",
                        "    pm.collectionVariables.set('last_refund_id', response.data[0].refund_data.id);",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "b72b7820-d8de-497e-a112-0559105ee0a1",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "merchant_order_id",
                        "value": "{{last_merchant_order_id}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-b72b7820-d8de-497e-a112-0559105ee0a1"
              },
              {
                "name": "Get refunds information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e13d68ad-2fbb-4de8-be72-b8707ec8fcf3",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9751bd07-007e-47aa-960c-23c68340caca",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('data');",
                        "    pm.expect(response).to.have.property('has_more');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "81d19863-e77b-49ee-926d-e47c584db63e",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "value": "{{access_token}}",
                          "type": "string"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "max_count",
                        "value": "5"
                      },
                      {
                        "key": "currency",
                        "value": "{{TERMINAL_CURRENCY}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-81d19863-e77b-49ee-926d-e47c584db63e"
              }
            ],
            "id": "20572cd4-53c7-4ead-8291-d4bfd3ba00ff",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/refunds) to get information about refunds list, [see more](https://integration.unlimit.com/#getRefunds)\n- Merchant receives GET response about transactions (refunds list)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "f2b6c88b-ed63-4b2c-9347-1b345217a49c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "6ffa5fc5-ca83-4836-b353-d37a2303ec72"
                }
              }
            ],
            "uid": "10462328-20572cd4-53c7-4ead-8291-d4bfd3ba00ff"
          },
          {
            "name": "Get refund by refund id",
            "item": [
              {
                "name": "Get refund by refund id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fc155dc-6c6e-4c9e-a2d0-b722030e2faa",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_refund_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f6ac27b-2b6b-43a7-b674-f17eebae63c2",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('refund_data');",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    pm.expect(response.refund_data.id).to.equal(pm.collectionVariables.get('last_refund_id'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "340b526a-29c9-4514-9e07-3f01acd04188",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/{{last_refund_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      "{{last_refund_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-340b526a-29c9-4514-9e07-3f01acd04188"
              }
            ],
            "id": "dbb5f766-4f23-42c0-8481-37e968a3330f",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/refunds/{refund_id}) to get information about refund by refund id, [see more](https://integration.unlimit.com/#getRefund)\n- Merchant receives GET response about transaction result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "904fa291-9995-4633-8d24-95ba3385328d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "a26ce88e-5b00-4a2f-a1da-a6d4e1e07e15"
                }
              }
            ],
            "uid": "10462328-dbb5f766-4f23-42c0-8481-37e968a3330f"
          },
          {
            "name": "Reverse refund (void)",
            "item": [
              {
                "name": "Create payment for reversed refund",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37d86847-67be-485e-bc1f-dc12888fecb6",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "595e0f50-890e-4a8a-b470-c68b8961c2ff",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "    ",
                        "    pm.sendRequest(response.redirect_url, (err, response_after_redirect) => {",
                        "        pm.expect(response_after_redirect.code).to.equal(200);",
                        "    });",
                        "    ",
                        "    pm.collectionVariables.set('payment_id_for_reversed_refund', response.payment_data.id);",
                        "    ",
                        "    postman.setNextRequest('Create refund to reverse');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "822046ba-e15a-4fc1-a9b9-4016b3dc54e2",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payment_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payments",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payments"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-822046ba-e15a-4fc1-a9b9-4016b3dc54e2"
              },
              {
                "name": "Create refund to reverse",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f670d238-7d95-4898-89bf-35185dfbddfe",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payment_id_for_reversed_refund')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ca25b2a-a671-4c9f-8edf-7d1281be2f7e",
                      "exec": [
                        "pm.test(\"Request success\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('refund_id_to_reverse', response.refund_data.id);",
                        "    ",
                        "    postman.setNextRequest('Reverse refund');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "dfa62066-f3c3-410d-8003-f7cd2fd2ce54",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_data\": {\n        \"id\": \"{{payment_id_for_reversed_refund}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-dfa62066-f3c3-410d-8003-f7cd2fd2ce54"
              },
              {
                "name": "Reverse refund",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd1e9e20-fb01-4105-80e0-af68670cd473",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('refund_id_to_reverse')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "afed9bdc-0205-4563-8291-a88cd2c35017",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.refund_data).to.have.property('id');",
                        "    pm.expect(response.refund_data).to.have.property('status');",
                        "    pm.expect(response.refund_data.status).to.equal('VOIDED');",
                        "})",
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "f4bdbcdf-f88d-4cb0-94c2-6704de1848f0",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"refund_data\": {\n        \"status_to\": \"REVERSE\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/refunds/{{refund_id_to_reverse}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "refunds",
                      "{{refund_id_to_reverse}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-f4bdbcdf-f88d-4cb0-94c2-6704de1848f0"
              }
            ],
            "id": "ef56d748-1195-4ecc-97b9-9df899bce19c",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/refunds** to create new refund, [see more](https://integration.unlimit.com/#createRefund)\n- Merchant makes PATCH request in JSON format with refund id and refund_data.status_to='REVERSE' to **/api/refunds/{refund_id}** for reverse (void) refund - refund void possibility must be enabled by Unlimit manager, [see more](https://integration.unlimit.com/#updateRefund)\n- Merchant receives response with update result information (status='VOIDED')",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "id": "d29f0a45-3795-47e4-8077-c5bf44e8fd8c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "c96a911e-2d4e-4f28-926c-6ed0c7c425fc"
                }
              }
            ],
            "uid": "10462328-ef56d748-1195-4ecc-97b9-9df899bce19c"
          }
        ],
        "id": "91329739-a060-432e-9aff-0e4dc692bacf",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "d4fdecfe-8dfb-4211-8191-7edc00289a2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "4d1473a3-7182-4fc5-97c3-86461df087dd"
            }
          }
        ],
        "uid": "10462328-91329739-a060-432e-9aff-0e4dc692bacf"
      },
      {
        "name": "Payouts (cards)",
        "item": [
          {
            "name": "Create payout",
            "item": [
              {
                "name": "Create payout",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e121e80-1189-44b3-b403-a64500548ab7",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                        "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1565a53-2dd4-4176-b464-fa049952b4e7",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                        "    ",
                        "    postman.setNextRequest('Get payout by merchant order id');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "aa03d6eb-acd4-478e-8157-f3b6a49d2c92",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payout_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"expiration\": \"{{expiration}}\"\n        },\n        \"recipient_info\": \"{{$randomUUID}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-aa03d6eb-acd4-478e-8157-f3b6a49d2c92"
              }
            ],
            "id": "0dbf3207-26cb-4c04-a514-f19b74bda6b1",
            "description": "- Merchant makes POST request in JSON format to create new payout to endpoint (/api/payouts), [see more](https://integration.unlimit.com/#createPayout)\n- Merchant receives response with transaction (payout) result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "96517514-af6c-4baf-bd9e-a3249eccee41"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "3202831b-8381-4d9f-9a66-68cd35fffdf1"
                }
              }
            ],
            "uid": "10462328-0dbf3207-26cb-4c04-a514-f19b74bda6b1"
          },
          {
            "name": "Get payouts list",
            "item": [
              {
                "name": "Get payout by merchant order id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e01b29a0-b1b4-4ae8-88c5-1a7702d7a7f8",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2139f70c-e245-4f20-a9fd-cc85934f8c81",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('data');",
                        "    pm.collectionVariables.set('last_payout_id', response.data[0].payout_data.id);",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "6ee4313b-0965-4922-8237-9d0d88223264",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "merchant_order_id",
                        "value": "{{last_merchant_order_id}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-6ee4313b-0965-4922-8237-9d0d88223264"
              },
              {
                "name": "Get payouts information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41ce5e0b-ffc7-4251-9330-805b22ed7522",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fdc8259-c14c-4b64-b942-676e6f31831d",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('data');",
                        "    pm.expect(response).to.have.property('has_more');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "30ef93f3-ed16-4776-b6fc-b57f78a9877d",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      },
                      {
                        "key": "max_count",
                        "value": "5"
                      },
                      {
                        "key": "currency",
                        "value": "{{TERMINAL_CURRENCY}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-30ef93f3-ed16-4776-b6fc-b57f78a9877d"
              }
            ],
            "id": "e1952186-3c02-45f7-8421-278af1ec9af1",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payouts) to get information about payouts, [see more](https://integration.unlimit.com/#getPayout)\n- Merchant receives GET response about transactions (payouts list)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "2fcd86ab-0616-4024-856c-ef7aaabffd5f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "8cbb76a9-5110-43d4-8c6f-3a6deb349ce6"
                }
              }
            ],
            "uid": "10462328-e1952186-3c02-45f7-8421-278af1ec9af1"
          },
          {
            "name": "Get payout by payout id",
            "item": [
              {
                "name": "Get payout by payout id",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd6a5a50-a090-41f7-b565-6e9b97c3af27",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('last_payout_id')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd314900-9f2a-47a1-afa8-d62c31219fc3",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "",
                        "    pm.expect(response).to.have.property('payout_data');",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    pm.expect(response.payout_data.id).to.equal(pm.collectionVariables.get('last_payout_id'));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "11f5ad09-50dd-4f11-9b40-7cc073f15960",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/{{last_payout_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      "{{last_payout_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-11f5ad09-50dd-4f11-9b40-7cc073f15960"
              }
            ],
            "id": "fcb1fba4-ea04-43d6-a29f-3b1f74aaf529",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/payouts/{payout_id}) to get information about payout by payout id, [see more](https://integration.unlimit.com/#getPayout)\n- Merchant receives GET response about transaction result information",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "9a072f30-4b7b-49dc-b631-456596c15b9b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "37ffc903-c146-4629-82e7-143101f77756"
                }
              }
            ],
            "uid": "10462328-fcb1fba4-ea04-43d6-a29f-3b1f74aaf529"
          },
          {
            "name": "Reverse payout (void)",
            "item": [
              {
                "name": "Create payout to reverse",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc46f486-eea2-4722-a36d-b8123b6b45c2",
                      "exec": [
                        "var uuid = require('uuid');",
                        "",
                        "var merchant_order_id = uuid.v4();",
                        "pm.collectionVariables.set('merchant_order_id', merchant_order_id);"
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d86d3f7c-3c99-48bd-9957-c14d898743c1",
                      "exec": [
                        "pm.test(\"Request success\", function () {",
                        "    pm.response.to.have.status(201);",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    ",
                        "    pm.collectionVariables.set('payout_id_to_reverse', response.payout_data.id);",
                        "    ",
                        "    postman.setNextRequest('Reverse payout');",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "6ceb2767-dbd1-4678-b202-ed8c9d3191e0",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "type": "text",
                      "value": "application/json"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"payout_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        },\n        \"recipient_info\": \"{{$randomUUID}}\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-6ceb2767-dbd1-4678-b202-ed8c9d3191e0"
              },
              {
                "name": "Reverse payout",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1949a29-9cfd-474c-b631-1a53bd7a03f8",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('payout_id_to_reverse')).to.not.be.undefined;"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d6bf636-307c-44e8-ba44-9b120263da00",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "    pm.expect(response.payout_data).to.have.property('id');",
                        "    pm.expect(response.payout_data).to.have.property('status');",
                        "    pm.expect(response.payout_data.status).to.equal('VOIDED');",
                        "       ",
                        "    postman.setNextRequest('Create one-click payment');",
                        "})",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "28595bae-7741-45e7-9aee-e0de3d15f4f4",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payout_data\": {\n        \"status_to\": \"REVERSE\"\n    }\n}"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/payouts/{{payout_id_to_reverse}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "payouts",
                      "{{payout_id_to_reverse}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-28595bae-7741-45e7-9aee-e0de3d15f4f4"
              }
            ],
            "id": "d4d3f6d4-373c-43a6-9696-27319c808e78",
            "description": "- Merchant makes POST request in JSON format to endpoint **/api/payouts** to create new payout, [see more](https://integration.unlimit.com/#createPayout)\n- Merchant receives callback with transaction result information (with payout id)\n- Merchant makes PATCH request in JSON format with payout id and payout_data.status_to='REVERSE' to **/api/payouts/{payout_id}** for reverse (void) payout - payout void possibility must be enabled by Unlimit manager, [see more](https://integration.unlimit.com/#updatePayout)\n- Merchant receives response with update result information (status='VOIDED')",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "id": "d441654d-7ae0-40da-a4c0-48caa8f63ba5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "57310607-cfd1-438f-b6c2-c5e9a9e585dd"
                }
              }
            ],
            "uid": "10462328-d4d3f6d4-373c-43a6-9696-27319c808e78"
          }
        ],
        "id": "cd280bea-591d-411a-8b93-253f8cb0d581",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "4cffb8ba-eaa8-4749-bcfd-521f9b5ad406"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "f79468ca-59f8-4e92-9863-5d319ffd1795"
            }
          }
        ],
        "uid": "10462328-cd280bea-591d-411a-8b93-253f8cb0d581"
      },
      {
        "name": "Payouts (APMs)",
        "item": [
          {
            "name": "Asia",
            "item": [
              {
                "name": "South Korea",
                "item": [
                  {
                    "name": "Bank transfer South Korea",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "BANKTRANSFERKRW payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "0e1c7e21-7455-4cff-86fc-ea16a3ede87b"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "04a82ebd-3275-4bc2-8fae-7c84945dcdf4"
                                }
                              }
                            ],
                            "id": "c61f9a7c-1c6c-4d33-9513-b6f931a4dccb",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"BANKTRANSFERKRW\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"KRW\"\n    },\n     \"ewallet_account\": {\n        \"bank_code\": \"67\",\n        \"id\": \"1234567890\"\n    },\n    \"customer\": {\n        \"phone\":\"827123456789\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-c61f9a7c-1c6c-4d33-9513-b6f931a4dccb"
                          }
                        ],
                        "id": "7da8eb9d-a9b2-4a9d-a57e-bbdd95228c01",
                        "uid": "10462328-7da8eb9d-a9b2-4a9d-a57e-bbdd95228c01"
                      }
                    ],
                    "id": "6d168585-92e8-45e1-ad8e-736a5cdf250d",
                    "uid": "10462328-6d168585-92e8-45e1-ad8e-736a5cdf250d"
                  }
                ],
                "id": "47bb01f7-efcd-4823-b6e4-90cc5ddff86e",
                "uid": "10462328-47bb01f7-efcd-4823-b6e4-90cc5ddff86e"
              },
              {
                "name": "Indonesia",
                "item": [
                  {
                    "name": "BANKTRANSFERSIDR",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create Indonesia Bank Transfer payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "6917f668-8560-4bcd-8a5e-6c6c80a8d635"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "d99c02e2-407b-40c4-bc40-b51ea52502f0"
                                }
                              }
                            ],
                            "id": "2927fecc-24e0-45ac-9c49-7be5d37be3f1",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKTRANSFERSIDR\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-2927fecc-24e0-45ac-9c49-7be5d37be3f1"
                          }
                        ],
                        "id": "0f3ce541-ad9f-4486-9084-c9c455e7b15f",
                        "uid": "10462328-0f3ce541-ad9f-4486-9084-c9c455e7b15f"
                      }
                    ],
                    "id": "373326be-2054-4ef0-b2f8-b3697128e856",
                    "uid": "10462328-373326be-2054-4ef0-b2f8-b3697128e856"
                  },
                  {
                    "name": "OVO",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create OVO payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "29185c96-0d35-4b48-89f6-f45d3b6d66c7"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "efdf4947-a459-446d-9062-149fa3d6b360"
                                }
                              }
                            ],
                            "id": "ee46fd05-f1d3-4e1b-83f5-41a5c307f997",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"OVO\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-ee46fd05-f1d3-4e1b-83f5-41a5c307f997"
                          }
                        ],
                        "id": "8589f225-df13-4a6d-9b9c-3dbbe2c768aa",
                        "uid": "10462328-8589f225-df13-4a6d-9b9c-3dbbe2c768aa"
                      }
                    ],
                    "id": "446c3429-9446-4487-a9b9-1ba728acb713",
                    "uid": "10462328-446c3429-9446-4487-a9b9-1ba728acb713"
                  },
                  {
                    "name": "ShopeePay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create ShopeePay Mobile payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "963a5baf-6d1f-4a00-bfa2-df15350b7237"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "06eddc3d-625e-4e90-bbff-6f2b0aadf7f5"
                                }
                              }
                            ],
                            "id": "1f1cf243-c066-4c6d-91c4-fb7581b16b03",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"SHOPEEPAY\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-1f1cf243-c066-4c6d-91c4-fb7581b16b03"
                          }
                        ],
                        "id": "c19785af-51cd-4c55-b5a0-87cff8f189d1",
                        "uid": "10462328-c19785af-51cd-4c55-b5a0-87cff8f189d1"
                      }
                    ],
                    "id": "0d7e0def-4b5b-43ab-95b9-fab26680a68d",
                    "uid": "10462328-0d7e0def-4b5b-43ab-95b9-fab26680a68d"
                  },
                  {
                    "name": "LINKAJA",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create LINKAJA payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "088af119-1b8f-486f-8a5c-872aa8e87d56"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "56093600-3ee1-4b64-bc37-1b1eb274b40f"
                                }
                              }
                            ],
                            "id": "39e3b5d6-f979-4936-a5f5-3e65d6205eaa",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"LINKAJA\",\n    \"payout_data\": {\n        \"amount\": \"10000\",\n        \"currency\": \"IDR\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\",\n        \"email\": \"test@unlimit.com\",\n        \"living_address\": {\n\n            \"city\": \"Washington\",\n            \"country\": \"US\"\n \n        },\n        \"phone\": \"628996647676\"\n    },\n        \"ewallet_account\": {\n            \"id\": \"628996647676\",\n            \"bank_code\": \"002\",\n            \"name\": \"Test\"\n        }\n    }\n"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-39e3b5d6-f979-4936-a5f5-3e65d6205eaa"
                          }
                        ],
                        "id": "91f883e1-f394-4245-8953-5e6ee0ba6030",
                        "uid": "10462328-91f883e1-f394-4245-8953-5e6ee0ba6030"
                      }
                    ],
                    "id": "22ea5d3b-414a-4b1b-a0eb-742285480f1e",
                    "uid": "10462328-22ea5d3b-414a-4b1b-a0eb-742285480f1e"
                  },
                  {
                    "name": "DANAWALLET",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Create DANA Indonesia Digital payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "ce249a44-3cf9-49d4-a258-51ed37a2b858"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    "    var response = pm.response.json();",
                                    "    pm.expect(response.payout_data).to.have.property('id');",
                                    "    ",
                                    "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "dd3d1109-a510-40f7-803c-3667aad606f9"
                                }
                              }
                            ],
                            "id": "1131fe66-c415-4803-b7a6-f918b02567d1",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"DANAWALLET\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 10000,\n        \"currency\": \"IDR\"\n    },\n     \"ewallet_account\": {\n        \"bank_code\": \"67\",\n        \"id\": \"1234567890\"\n    },\n    \"customer\": {\n        \"phone\":\"827123456789\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-1131fe66-c415-4803-b7a6-f918b02567d1"
                          }
                        ],
                        "id": "ab95a757-b9fb-48b2-84c8-72a9331d6ee7",
                        "uid": "10462328-ab95a757-b9fb-48b2-84c8-72a9331d6ee7"
                      }
                    ],
                    "id": "3e6f4f39-57ca-4c38-bb54-184cbab5d51a",
                    "uid": "10462328-3e6f4f39-57ca-4c38-bb54-184cbab5d51a"
                  }
                ],
                "id": "da05c0c7-cdaa-4c09-b424-721d56ab75d9",
                "uid": "10462328-da05c0c7-cdaa-4c09-b424-721d56ab75d9"
              },
              {
                "name": "Republic of the Philippines",
                "item": [
                  {
                    "name": "InstaPay",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "InstaPay payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "b2406d5c-3a9e-458e-8828-09e9a026cf5f"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "   ",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "1f031704-6cdb-462e-870f-e2ccb23c26f3"
                                }
                              }
                            ],
                            "id": "44cfcca4-801d-4533-b0a9-bf114c11736d",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"instaph\",\n    \"payout_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\"\n    },\n        \"ewallet_account\": {\n            \"bank_code\":\"aub\",\n            \"id\": \"0123456789\"\n        }\n    }"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-44cfcca4-801d-4533-b0a9-bf114c11736d"
                          }
                        ],
                        "id": "9c756b61-bfc4-474c-ad2a-e6c89b48ab25",
                        "uid": "10462328-9c756b61-bfc4-474c-ad2a-e6c89b48ab25"
                      }
                    ],
                    "id": "3e2ed372-bb79-43b0-8125-12cbb1cb576f",
                    "uid": "10462328-3e2ed372-bb79-43b0-8125-12cbb1cb576f"
                  },
                  {
                    "name": "Bank Transfer Philippines",
                    "item": [
                      {
                        "name": "Gateway mode",
                        "item": [
                          {
                            "name": "Bank Transfer Philippines  payout",
                            "event": [
                              {
                                "listen": "prerequest",
                                "script": {
                                  "exec": [
                                    "var uuid = require('uuid');",
                                    "",
                                    "var merchant_order_id = uuid.v4();",
                                    "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                    "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "10f2466c-e5ef-49fb-ba67-5ad3200bfb71"
                                }
                              },
                              {
                                "listen": "test",
                                "script": {
                                  "exec": [
                                    "pm.test(\"Successful request\", function () {",
                                    "   ",
                                    "    pm.response.to.have.jsonBody();",
                                    "    ",
                                    " ",
                                    "});"
                                  ],
                                  "type": "text/javascript",
                                  "packages": {},
                                  "id": "565efb84-aaca-45cd-a46b-7287289038d2"
                                }
                              }
                            ],
                            "id": "869b1a3f-df58-410a-a4ab-ae204423c95b",
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "request": {
                              "auth": {
                                "type": "bearer",
                                "bearer": [
                                  {
                                    "key": "0",
                                    "value": {
                                      "key": "token",
                                      "type": "string",
                                      "value": "{{access_token}}"
                                    },
                                    "type": "any"
                                  },
                                  {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "type": "string"
                                  }
                                ]
                              },
                              "method": "POST",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json",
                                  "type": "text"
                                }
                              ],
                              "body": {
                                "mode": "raw",
                                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Test ('{{request_name}}')\"\n    },\n    \"payment_method\": \"banktransfersphp\",\n    \"payout_data\": {\n        \"amount\": \"200\",\n        \"currency\": \"PHP\"\n    },\n    \"customer\": {\n        \"full_name\": \"Test Test\"\n    },\n        \"ewallet_account\": {\n            \"bank_code\":\"guinobatan\",\n            \"id\": \"0123456789\"\n        }\n    }"
                              },
                              "url": {
                                "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                                "host": [
                                  "{{UNLIMIT_API_URL}}"
                                ],
                                "path": [
                                  "api",
                                  "payouts"
                                ]
                              }
                            },
                            "response": [],
                            "uid": "10462328-869b1a3f-df58-410a-a4ab-ae204423c95b"
                          }
                        ],
                        "id": "d09dd704-2929-4386-b042-00d4ba28f2b1",
                        "uid": "10462328-d09dd704-2929-4386-b042-00d4ba28f2b1"
                      }
                    ],
                    "id": "e7271e19-fd7f-4d2e-ae1a-6f79c364f38b",
                    "uid": "10462328-e7271e19-fd7f-4d2e-ae1a-6f79c364f38b"
                  }
                ],
                "id": "677845fd-81ed-4646-a0b7-0d5fe326dd58",
                "uid": "10462328-677845fd-81ed-4646-a0b7-0d5fe326dd58"
              }
            ],
            "id": "5ed5ef09-77c2-4531-9c39-5d10b5a71a91",
            "uid": "10462328-5ed5ef09-77c2-4531-9c39-5d10b5a71a91"
          },
          {
            "name": "Africa",
            "item": [
              {
                "name": "OPAY",
                "item": [
                  {
                    "name": "Create OPAY payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "8b235756-7c3d-49ac-8285-6908da620d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "a6d1b123-2fe2-4d32-ae09-d41d7da2259d"
                        }
                      }
                    ],
                    "id": "1e65b923-7b2f-4047-83e4-526b7aa11c48",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"OPAY\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\":\n    {\n        \"id\": \"2341111111111\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-1e65b923-7b2f-4047-83e4-526b7aa11c48"
                  }
                ],
                "id": "361c19db-49ad-4782-8caa-3f6920228ef5",
                "uid": "10462328-361c19db-49ad-4782-8caa-3f6920228ef5"
              },
              {
                "name": "Direct Banking Nigeria",
                "item": [
                  {
                    "name": "Create Direct Banking Nigeria payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "dc846336-6d51-4a39-bd42-84cc2ffe1276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "c7686f51-0d74-474d-b93a-9701f6c52293"
                        }
                      }
                    ],
                    "id": "1747d3fa-d733-439f-b2f2-19a0ee22bb76",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"DIRECTBANKINGNGA\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"NGN\"\n    },\n     \"ewallet_account\": {\n        \"bank_code\": \"1003\",\n        \"id\": \"1111111111\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-1747d3fa-d733-439f-b2f2-19a0ee22bb76"
                  }
                ],
                "id": "447987d6-d06a-4bcc-bf50-1b77563e638b",
                "uid": "10462328-447987d6-d06a-4bcc-bf50-1b77563e638b"
              },
              {
                "name": "FCMB",
                "item": [
                  {
                    "name": "Create banktransfersngn payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "b1e711a7-8009-4afe-be90-92cc9105feb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "8d1a0e67-03da-4edf-843a-bdeec841c424"
                        }
                      }
                    ],
                    "id": "001979e3-2d85-4fc0-ae7e-2fe9d98d8bfe",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"banktransfersngn\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Post ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"NGN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-001979e3-2d85-4fc0-ae7e-2fe9d98d8bfe"
                  }
                ],
                "id": "6359d30f-24c8-41e0-93ec-a3ef3d5f9ee0",
                "uid": "10462328-6359d30f-24c8-41e0-93ec-a3ef3d5f9ee0"
              },
              {
                "name": "M-Pesa",
                "item": [
                  {
                    "name": "Create M-Pesa payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "f42fd1cf-4abd-4cc5-bb5b-cdff8cf1230f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "7fe401bb-16ac-4cc4-b9e0-dbeb6b7b65be"
                        }
                      }
                    ],
                    "id": "7a7fa387-307c-4060-9b51-eebdd0e9e1c8",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"MPESA\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254123456789\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-7a7fa387-307c-4060-9b51-eebdd0e9e1c8"
                  }
                ],
                "id": "22714e58-c98d-4843-ac49-99c5bdc18c9d",
                "uid": "10462328-22714e58-c98d-4843-ac49-99c5bdc18c9d"
              },
              {
                "name": "Pesalink transfer to account",
                "item": [
                  {
                    "name": "Create Pesalink account payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "d2384a4f-35f6-4e3b-ad31-3bd48d263bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "e59d0354-d3b9-4476-8671-2369632eacc8"
                        }
                      }
                    ],
                    "id": "26e8ec65-aa8b-419b-976f-90ddd75b42da",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"pesalinkaccount\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-26e8ec65-aa8b-419b-976f-90ddd75b42da"
                  }
                ],
                "id": "87c9d2ef-66a9-4c05-97c9-456056a9a0b4",
                "uid": "10462328-87c9d2ef-66a9-4c05-97c9-456056a9a0b4"
              },
              {
                "name": "Pesalink transfer to wallet",
                "item": [
                  {
                    "name": "Create Pesalink wallet payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "d1dbe1d5-4e4e-4d81-8531-8cc0ad807e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "b74bbe59-4d47-479d-bb80-74788c46920e"
                        }
                      }
                    ],
                    "id": "2b30bcd8-1138-48bd-927d-d97f7bb58454",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PESALINKWALLET\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-2b30bcd8-1138-48bd-927d-d97f7bb58454"
                  }
                ],
                "id": "35ed429c-0855-4b51-b15b-ca6c73f45a57",
                "uid": "10462328-35ed429c-0855-4b51-b15b-ca6c73f45a57"
              },
              {
                "name": "Pesalink transfer to phone",
                "item": [
                  {
                    "name": "Create Pesalink phone payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "5f69daed-ab63-4f24-b3c9-5b38c1429d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "16dc70c8-661f-4ab9-a9f1-d12130dc1f20"
                        }
                      }
                    ],
                    "id": "e9f7df0c-9bb5-4163-8085-01bfa7a4ec90",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"pesalinkphone\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\",\n        \"bank_code\": \"000007\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-e9f7df0c-9bb5-4163-8085-01bfa7a4ec90"
                  }
                ],
                "id": "bcd21a66-6b02-4538-8463-1e8158daf00d",
                "uid": "10462328-bcd21a66-6b02-4538-8463-1e8158daf00d"
              },
              {
                "name": "Tigopesa Tanzania",
                "item": [
                  {
                    "name": "Create Tigopesa Tanzania payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "a6eef54e-d326-4809-b75a-f43d00648e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "d01450f2-4c0e-4d8a-8335-b990a8ea350b"
                        }
                      }
                    ],
                    "id": "963cabde-93d3-45e7-a8d3-638df3b76b8a",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"TIGOPESA\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255123456789\"\n\n    }\n\n    \n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-963cabde-93d3-45e7-a8d3-638df3b76b8a"
                  }
                ],
                "id": "cce679db-181e-4f27-bc15-25eb350641dc",
                "uid": "10462328-cce679db-181e-4f27-bc15-25eb350641dc"
              },
              {
                "name": "M-Pesa Tanzania",
                "item": [
                  {
                    "name": "Create M-Pesa Tanzania payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "8cac1803-778a-489d-934b-faf2fdb2f2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "18849bfa-e564-4a61-b703-59129772579d"
                        }
                      }
                    ],
                    "id": "92452d54-cd38-494f-858b-b21015ed76e0",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"MPESATZS\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order\"\n    },\n    \"payout_data\": {\n        \"amount\": 200,\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"+255123456789\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-92452d54-cd38-494f-858b-b21015ed76e0"
                  }
                ],
                "id": "4fc6dc0d-acf8-48f5-bb25-f469ebac935f",
                "uid": "10462328-4fc6dc0d-acf8-48f5-bb25-f469ebac935f"
              },
              {
                "name": "Airtel Tanzania",
                "item": [
                  {
                    "name": "Create Airtel Tanzania payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "2b8fde2e-2286-4439-a0da-1ba86f482643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "e66fd854-7063-448e-bede-39d09ada92e9"
                        }
                      }
                    ],
                    "id": "de8b5d84-1b05-4f56-bff6-88870de2db10",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"AIRTELTZS\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"TZS\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"255740123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-de8b5d84-1b05-4f56-bff6-88870de2db10"
                  }
                ],
                "id": "43975d6c-7126-4dd5-9256-ffcc4ddcd7bc",
                "uid": "10462328-43975d6c-7126-4dd5-9256-ffcc4ddcd7bc"
              },
              {
                "name": "Airtel",
                "item": [
                  {
                    "name": "Create Airtel payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "85fb2290-051a-4574-af97-8ca966791a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "56c73265-d441-49bd-8006-38ed0c1d8c09"
                        }
                      }
                    ],
                    "id": "f922d3f3-ed7d-4c76-b9d4-4f94e8e0b154",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"AIRTEL\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"KES\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"254100123456\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-f922d3f3-ed7d-4c76-b9d4-4f94e8e0b154"
                  }
                ],
                "id": "6caae3c6-6713-41eb-a782-d192a62b8c97",
                "uid": "10462328-6caae3c6-6713-41eb-a782-d192a62b8c97"
              }
            ],
            "id": "6d6d12be-3a89-4e5b-b695-7b4b1471b3be",
            "uid": "10462328-6d6d12be-3a89-4e5b-b695-7b4b1471b3be"
          },
          {
            "name": "Europe",
            "item": [
              {
                "name": "SEPA Instant",
                "item": [
                  {
                    "name": "Create SEPATRANSFER  payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "6f30be05-23fe-4564-8f74-d617b34e738b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "1655f591-99da-4615-8243-249f15dfcbf1"
                        }
                      }
                    ],
                    "id": "7d27f017-0522-444e-8ca2-4b1ac517e182",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"SEPATRANSFER\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"EUR\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"PL12123456789\"\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"living_address\": {\n            \"country\": \"PL\",\n            \"address\": \"test address\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-7d27f017-0522-444e-8ca2-4b1ac517e182"
                  }
                ],
                "id": "0b5e5e2d-d033-4f40-8615-a4a25db14102",
                "uid": "10462328-0b5e5e2d-d033-4f40-8615-a4a25db14102"
              }
            ],
            "id": "bde275af-69c5-4131-a8e6-81f8b0816740",
            "uid": "10462328-bde275af-69c5-4131-a8e6-81f8b0816740"
          },
          {
            "name": "Latin America",
            "item": [
              {
                "name": "Pix",
                "item": [
                  {
                    "name": "Create PIX payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "d99c044c-15b2-48a5-afc4-ee62e36fccc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "14ad0dc4-a0c5-4bf8-bf76-e03a43a652d3"
                        }
                      }
                    ],
                    "id": "5200c8b6-f3d3-460c-9c0e-cbb875ae01be",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"PIX\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"BRL\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1859642039681735\",\n        \"bank_code\": \"001\",\n        \"bank_branch\": \"1234\",\n        \"type\": \"SVGS\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\",\n        \"full_name\": \"{{$randomFullName}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-5200c8b6-f3d3-460c-9c0e-cbb875ae01be"
                  }
                ],
                "id": "17df607e-59ff-4b98-b31d-673bea3f0097",
                "uid": "10462328-17df607e-59ff-4b98-b31d-673bea3f0097"
              },
              {
                "name": "Davivienda",
                "item": [
                  {
                    "name": "Create Davivienda bank payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "02bc608d-2559-4498-897a-3ac921601d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "ff0b7bbb-8a1d-4830-ab7f-df588232e47a"
                        }
                      }
                    ],
                    "id": "f7099df7-327e-47dd-ac8c-b1da6da062d6",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"daviviendabank\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"016704402001\",\n        \"bank_code\": \"000007\",\n        \"type\": \"CС\"\n    },\n    \"customer\": {\n        \"identity\": \"79845632\",\n        \"document_type\": \"02\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-f7099df7-327e-47dd-ac8c-b1da6da062d6"
                  }
                ],
                "id": "2581ac40-9f72-4c01-b832-a69cc7afad97",
                "uid": "10462328-2581ac40-9f72-4c01-b832-a69cc7afad97"
              },
              {
                "name": "transfiya",
                "item": [
                  {
                    "name": "Create transfiya payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "b1597458-d167-4fd4-9b7c-b8bd2fc6c1e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "502e94df-110d-4174-8774-53f62ed0d152"
                        }
                      }
                    ],
                    "id": "a45bcdae-b1f3-4949-bc64-a6c77a001ade",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"transfiya\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1234567890\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-a45bcdae-b1f3-4949-bc64-a6c77a001ade"
                  }
                ],
                "id": "33c2eed6-aec9-44e7-a15e-e0cfdbcecb44",
                "uid": "10462328-33c2eed6-aec9-44e7-a15e-e0cfdbcecb44"
              },
              {
                "name": "SPEI",
                "item": [
                  {
                    "name": "Create SPEI payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "5e524808-7e52-4a58-9c42-e4d8b324be1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "8957ee28-af12-4256-a6f4-df9f8cd08dce"
                        }
                      }
                    ],
                    "id": "70097fd7-e5ab-41ba-8043-1bdfba9da67b",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"SPEI\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 15,\n        \"currency\": \"MXN\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"123456789012345689\"\n    },\n    \"customer\":{\n        \"full_name\":\"{{$randomFullName}}\"\n\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-70097fd7-e5ab-41ba-8043-1bdfba9da67b"
                  }
                ],
                "id": "751dc584-d1f1-48a0-a7f0-6691eb41ad1d",
                "uid": "10462328-751dc584-d1f1-48a0-a7f0-6691eb41ad1d"
              },
              {
                "name": "DiMo",
                "item": [
                  {
                    "name": "Create Dimo payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "fdfa771e-d18b-4221-b0ac-a7d144c476f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "61855165-7cf5-43bc-ae4d-79643993a5d3"
                        }
                      }
                    ],
                    "id": "14b3b4f2-de1c-436d-be79-b3a3c13b6b9e",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payment_method\": \"dimo\",\n    \"payout_data\": {\n        \"amount\": \"1000\",\n        \"currency\": \"MXN\"\n    },\n    \"customer\": {\n        \"full_name\": \"{{$randomFullName}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n \n    },\n        \"ewallet_account\": {\n            \"id\": \"123456789012345678\",\n            \"bank_code\": \"40002\"\n\n        }\n    }\n"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-14b3b4f2-de1c-436d-be79-b3a3c13b6b9e"
                  }
                ],
                "id": "32463d69-9b4a-4d96-b5fc-38488d9f359d",
                "uid": "10462328-32463d69-9b4a-4d96-b5fc-38488d9f359d"
              },
              {
                "name": "Bank transfer Colombia",
                "item": [
                  {
                    "name": "Create Bank transfer Colombia payout",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "86535c15-7f08-456e-b33e-04181fa7757d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.have.status(201);",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response.payout_data).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_payout_id', response.payout_data.id);",
                            " ",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {},
                          "id": "c9e41e96-ee38-42af-8bbe-0e899c07673b"
                        }
                      }
                    ],
                    "id": "9c25581a-e33f-4c72-a7fd-bf20567af92d",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n       \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"payment_method\": \"BANKTRANSFERSCOP\",\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order('{{request_name}}')\"\n    },\n    \"payout_data\": {\n        \"amount\": 1,\n        \"currency\": \"COP\"\n    },\n    \"ewallet_account\": {\n        \"id\": \"1859642039681735\",\n        \"bank_code\": \"1001\",\n        \"type\": \"cc\"\n    },\n    \"customer\": {\n        \"identity\": \"401.162.304-01\",\n        \"full_name\": \"{{$randomFullName}}\",\n        \"document_type\": \"cc\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/payouts",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "payouts"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-9c25581a-e33f-4c72-a7fd-bf20567af92d"
                  }
                ],
                "id": "78324e31-5b6a-4d23-826e-e9fe18ac617c",
                "uid": "10462328-78324e31-5b6a-4d23-826e-e9fe18ac617c"
              }
            ],
            "id": "cb2d0563-d877-43e9-b1a9-7ed2cd16213c",
            "uid": "10462328-cb2d0563-d877-43e9-b1a9-7ed2cd16213c"
          }
        ],
        "id": "d49a455a-49dd-4387-886e-f005ed52d661",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "a745622f-04be-490b-8c18-44b701f7adc8"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ],
              "id": "a9165180-32a4-40e1-b23a-05235d885791"
            }
          }
        ],
        "uid": "10462328-d49a455a-49dd-4387-886e-f005ed52d661"
      },
      {
        "name": "Recurrings",
        "item": [
          {
            "name": "One-click payments",
            "item": [
              {
                "name": "Create one-click payment",
                "item": [
                  {
                    "name": "Create one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('last_recurring_one_click_id', response.recurring_data.id);",
                            "    postman.setNextRequest('Get recurring by first recurring id');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "a9a1fba0-a0bf-450a-a214-ac1d65ebbf8b",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-a9a1fba0-a0bf-450a-a214-ac1d65ebbf8b"
                  }
                ],
                "id": "749896d6-8f06-4e4d-a217-31c2d3af8a0d",
                "description": "- Merchant makes POST request in JSON format to endpoint **/api/recurrings** ([see more](https://integration.unlimit.com/#createRecurring)) to create new one-click payment (with 'initiator'='cit' in request) with card tokenization for recurrent payments\n- One-click payment is created in the system and redirect URL is returned to Merchant in JSON format (payment page URL)\n- Merchant redirects Customer to the payment page (Unlimit or Merchant site) with provided URL\n- Merchant can use filing.id (from the callback or get response) in the next one-click transactions using saved (tokenized) card",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "5e842ef4-9511-487e-8523-37aa845e71f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "baa4541c-7ac3-4c90-936b-9937ad31c86f"
                    }
                  }
                ],
                "uid": "10462328-749896d6-8f06-4e4d-a217-31c2d3af8a0d"
              },
              {
                "name": "Create next one-click payment",
                "item": [
                  {
                    "name": "Get recurring by first recurring id",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f786fc-381d-4e66-be6f-4d8fb64d5e81",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_recurring_one_click_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a70ddd4-3d57-4d77-a63a-a7504a4a17b2",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_recurring_one_click_id'));",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_filing_id', response.recurring_data.filing.id);",
                            "    ",
                            "    postman.setNextRequest('Create next one-click payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "48efc365-1f0f-4e22-b250-e611d82bd66f",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_recurring_one_click_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{last_recurring_one_click_id}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-48efc365-1f0f-4e22-b250-e611d82bd66f"
                  },
                  {
                    "name": "Create next one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac460958-2ceb-48b1-98d3-624c5c17c876",
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "pm.expect(pm.collectionVariables.get('last_filing_id')).to.not.be.undefined;",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11346c71-8220-4a06-8f44-4f2af3722ddc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data.filing.id).to.equal(pm.collectionVariables.get('last_filing_id'));",
                            "",
                            "    // emulate customer behaviour, performing GET request to redirect url",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    postman.setNextRequest('Get recurring by merchant order id');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "63332ffa-16bc-4e1f-bf56-e990daf5a738",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"filing\": {\n            \"id\": \"{{last_filing_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-63332ffa-16bc-4e1f-bf56-e990daf5a738"
                  }
                ],
                "id": "8baff04a-bb1e-4e28-8e6f-74508f28fe53",
                "description": "* Merchant makes POST request in JSON format to endpoint **/api/recurrings**, to create new one-click payment (with 'initiator'='cit', filing.id from previous one-click in request) \n* Upon authentication completion, one-click payment is processed. Customer gets payment result page (redirect URL)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "a83c135c-01f6-4522-88ff-0a0409e91d95"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "c41c2bc5-63db-4aa1-a3af-25c27fc2e16d"
                    }
                  }
                ],
                "uid": "10462328-8baff04a-bb1e-4e28-8e6f-74508f28fe53"
              },
              {
                "name": "Create pre-authorized one-click payment",
                "item": [
                  {
                    "name": "Create pre-authorized one-click payment to complete",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f302e4-f929-4c41-a1b3-d9f2edf029dd",
                          "exec": [
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64b086f-127a-420b-b5ed-8887db6c9381",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('recurring_one_click_id_to_complete', response.recurring_data.id);",
                            "    postman.setNextRequest('Complete pre-authorized one-click payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "ea8478dc-82cf-4a2b-af69-2c0215f141a1",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-ea8478dc-82cf-4a2b-af69-2c0215f141a1"
                  },
                  {
                    "name": "Complete pre-authorized one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b04ebd3-99e9-461c-af4c-3414972802c9",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('recurring_one_click_id_to_complete')).to.not.be.undefined;",
                            "",
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbcfe2c-56d8-479e-89b6-cdb8d86a6da0",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok",
                            "    pm.response.to.have.jsonBody()",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('status');",
                            "    pm.expect(response.recurring_data.status).to.equal('COMPLETED');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "6076b896-d511-408c-a303-62d9d78a6631",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"recurring_data\": {\n    \"status_to\": \"COMPLETE\"\n  }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{recurring_one_click_id_to_complete}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{recurring_one_click_id_to_complete}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-6076b896-d511-408c-a303-62d9d78a6631"
                  }
                ],
                "id": "b0395574-4ec2-4f9a-898c-ca914fb99e1f",
                "description": "- Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create new one-click payment with parameter preauth='true', [see more](https://integration.unlimit.com/#createRecurring)\n- Pre-authorized one-click payment is created in the system and redirect URL is returned to Merchant in JSON format\n- Merchant redirects Customer to the payment page with provided URL\n- Merchant can complete or reverse (void) pre-authorized one-click payment using PATCH request in JSON format with payment id and recurring_data.status_to='REVERSE' or \"COMPLETE\" to **/api/recurrings/{recurring_id}**\n- Merchant receives response with update one-click payment result information (status=\"VOIDED\" or \"COMPLETED\")\n- If merchant doesn't send complete or reverse request ([see more](https://integration.unlimit.com/#updateRecurring)), one-click payment will be completed automatically in 7 calendar days\n- Amount in completion update request can be less, equal or more than preauthorized amount in first request",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "8106993f-acbb-46a9-a889-955f53c65674"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "08c3f1d1-90ba-42cd-9a06-abaaa49d8237"
                    }
                  }
                ],
                "uid": "10462328-b0395574-4ec2-4f9a-898c-ca914fb99e1f"
              },
              {
                "name": "Reverse one-click payment (void)",
                "item": [
                  {
                    "name": "Create pre-authorized one-click payment to reverse",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc9ebef-d3eb-4bc3-bdaf-37ef83512243",
                          "exec": [
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ca1014-67ac-4f6d-b3e1-1a6102709207",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('recurring_one_click_id_to_reverse', response.recurring_data.id);",
                            "    postman.setNextRequest('Reverse pre-authorized one-click payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "7ba19668-081a-4764-bf6d-612827b9eccc",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"preauth\": true\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_NON3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-7ba19668-081a-4764-bf6d-612827b9eccc"
                  },
                  {
                    "name": "Reverse pre-authorized one-click payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39562bc-1e5f-42ed-bd62-e1e9fd9185b6",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('recurring_one_click_id_to_reverse')).to.not.be.undefined;",
                            "",
                            "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                            "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                            "",
                            "var tokens = eval(pm.collectionVariables.get('tokens'));",
                            "tokens.obtain(terminal_code, password);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e373b2-ca70-49ea-98ab-2d470649f089",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok",
                            "    pm.response.to.have.jsonBody()",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('status');",
                            "    pm.expect(response.recurring_data.status).to.equal('VOIDED');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "abd75e83-38c5-47d0-a00b-dd93b69e390a",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n  \"request\": {\n    \"id\": \"{{$guid}}\",\n    \"time\": \"{{request_time}}\"\n  },\n  \"operation\": \"CHANGE_STATUS\",\n  \"recurring_data\": {\n    \"status_to\": \"REVERSE\"\n  }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{recurring_one_click_id_to_reverse}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{recurring_one_click_id_to_reverse}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-abd75e83-38c5-47d0-a00b-dd93b69e390a"
                  }
                ],
                "id": "9fdb0e69-97e7-40a7-a979-f3daba6999e4",
                "description": "- Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create new one-click payment, [see more](https://integration.unlimit.com/#createRecurring)\n- Merchant receives callback with transaction result information (with recurring id)\n- Merchant makes PATCH request in JSON format with recurring id and recurring_data.status_to='REVERSE' to **/api/recurrings{recurring_id}** to reverse (void) one-click payment, [see more](https://integration.unlimit.com/#updateRecurring)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "23fbebf3-bb1d-4c92-8ff1-c749f14d3e9a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "fbd66f89-0adb-436a-a4e4-f0b64981a20c"
                    }
                  }
                ],
                "uid": "10462328-9fdb0e69-97e7-40a7-a979-f3daba6999e4"
              },
              {
                "name": "Get recurring payments list",
                "item": [
                  {
                    "name": "Get recurring by merchant order id",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1e1ae4-33a9-47ca-862a-e05d05e35378",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_merchant_order_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caed047b-7076-44fb-b12a-2fe5d7e7de1a",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('data');",
                            "    pm.collectionVariables.set('last_recurring_id', response.data[0].recurring_data.id);",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "75d2acbf-6837-4f7d-8cf1-807917653f2f",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/?request_id={{$guid}}&merchant_order_id={{last_merchant_order_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          ""
                        ],
                        "query": [
                          {
                            "key": "request_id",
                            "value": "{{$guid}}"
                          },
                          {
                            "key": "merchant_order_id",
                            "value": "{{last_merchant_order_id}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-75d2acbf-6837-4f7d-8cf1-807917653f2f"
                  },
                  {
                    "name": "Get recurrings information",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4031b1-03a4-40d0-8143-20e9de17dbdc",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5409455c-d6be-4ec3-b254-00e26aa46ceb",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "        ",
                            "    pm.expect(response).to.have.property('data');",
                            "    pm.expect(response).to.have.property('has_more');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "42ee25ee-6a75-4191-b8a5-42f4db1fae0c",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/?request_id={{$guid}}&max_count=5&currency={{TERMINAL_CURRENCY}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          ""
                        ],
                        "query": [
                          {
                            "key": "request_id",
                            "value": "{{$guid}}"
                          },
                          {
                            "key": "max_count",
                            "value": "5"
                          },
                          {
                            "key": "currency",
                            "value": "{{TERMINAL_CURRENCY}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-42ee25ee-6a75-4191-b8a5-42f4db1fae0c"
                  }
                ],
                "id": "9a8eace6-3abf-4b64-9ba9-e0476852fe94",
                "description": "- Merchant makes GET request in JSON format to endpoint **/api/recurrings** to get information about payments list, [see more](https://integration.unlimit.com/#getRecurrings)\n- Merchant receives GET response about transactions (recurrings list)",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "a9df04f0-2004-4f61-b13d-38898eaef220"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "a52d809f-a866-43ef-a9af-698311aef109"
                    }
                  }
                ],
                "uid": "10462328-9a8eace6-3abf-4b64-9ba9-e0476852fe94"
              },
              {
                "name": "Get recurring payment by recurring id",
                "item": [
                  {
                    "name": "Get recurring by recurring id",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cc9f85-9028-4f3c-8380-289e6445d78c",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_recurring_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672f9e5c-5fcf-4144-8a22-55874b43170b",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_recurring_one_click_id'));",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "00c1a390-447a-4557-8663-11ef242b8d56",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_recurring_one_click_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{last_recurring_one_click_id}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-00c1a390-447a-4557-8663-11ef242b8d56"
                  }
                ],
                "id": "9a007542-bd86-4a87-80e2-83acb871c441",
                "description": "- Merchant makes GET request in JSON format to endpoint **/api/recurrings/{recurring_id}** to get information about one-click payment by recurring id, [see more](https://integration.unlimit.com/#getRecurring)\n- Merchant receives GET response about transaction result information",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "942865da-244c-4b24-b162-6f4de62dc828"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "id": "21e8f799-7ceb-4387-80d6-e4d92e7c9592"
                    }
                  }
                ],
                "uid": "10462328-9a007542-bd86-4a87-80e2-83acb871c441"
              }
            ],
            "id": "da754610-8dda-471f-8e72-516d74565e21",
            "uid": "10462328-da754610-8dda-471f-8e72-516d74565e21"
          },
          {
            "name": "Scheduled payments",
            "item": [
              {
                "name": "Sсheduled by Acquirer (SA)",
                "item": [
                  {
                    "name": "Main flow for SA recurring payments",
                    "item": [
                      {
                        "name": "Create plan for SA payments",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan_data');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('plan_id', response.plan_data.id);",
                                "    postman.setNextRequest('Create first SA payment');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "d65bb587-55dd-4143-9415-053a88998ed0",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"plan_data\": {\n        \"amount\": \"100\",\n        \"interval\":1,\n        \"name\":\"{{$randomWord}}\",\n        \"period\": \"month\",\n        \"retries\": 3,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-d65bb587-55dd-4143-9415-053a88998ed0"
                      },
                      {
                        "name": "Create first SA payment",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('last_sa_recurring_id', response.recurring_data.id);",
                                "    pm.collectionVariables.set('last_subscription_id', response.subscription.id);",
                                "    postman.setNextRequest('Get subscription info');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "8b9e6964-f08e-4ea8-aa70-d2a72c99dbca",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"scheduled_type\": \"SA\",\n        \"plan\": {\n            \"id\": \"{{plan_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-8b9e6964-f08e-4ea8-aa70-d2a72c99dbca"
                      }
                    ],
                    "id": "b21f5c7a-2b93-4ca3-b3f1-92784af073bf",
                    "description": "A new scheduled subscription can be created in order to initiate a chain of payments that are automatically repeated based on a schedule set by the plan. A first payment in a subscription is always CIT while all following are MIT only. The value 'SA' in parameter scheduled_type must be sent. The next payment is created automatically based on the schedule set in the first request.\n\n*   Merchant makes POST request in JSON format to endpoint **/api/recurring_plans** to create plan\n*   Merchant receives response with plan.id\n*   Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create first payment.",
                    "uid": "10462328-b21f5c7a-2b93-4ca3-b3f1-92784af073bf"
                  },
                  {
                    "name": "Subscription management",
                    "item": [
                      {
                        "name": "Get subscription info",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan');",
                                "    pm.expect(response.plan).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "",
                                "    postman.setNextRequest('Update subscription');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "974a1c3a-fac4-44be-a7a3-1ed938c55048",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "GET",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": ""
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_subscriptions/{{last_subscription_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_subscriptions",
                              "{{last_subscription_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-974a1c3a-fac4-44be-a7a3-1ed938c55048"
                      },
                      {
                        "name": "Update subscription",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('subscription_data');",
                                "    pm.expect(response.subscription_data).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "",
                                "    postman.setNextRequest('Create plan');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "dd43fb24-d525-4d39-904c-0aae949270a2",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "PATCH",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"CHANGE_STATUS\",\n    \"subscription_data\": {\n        \"status_to\": \"INACTIVE\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_subscriptions/{{last_subscription_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_subscriptions",
                              "{{last_subscription_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-dd43fb24-d525-4d39-904c-0aae949270a2"
                      }
                    ],
                    "id": "fe62a775-0d24-4d3a-a8d3-b3481aac7838",
                    "description": "Cancelling a subscription cancels all future scheduled payments of that subscription. A subscription can be cancelled up until the day before the next scheduled payment, in order **Customer** not to be charged.\n\n*   Merchant makes GET request to endpoint **/api/recurring_subscriptions/{subscription_id}** to get information about subscription payments by subscription id\n*   Merchant makes PATCH request in JSON format to endpoint **/api/recurring_subscriptions/{subscription_id}** to cancel subscription",
                    "uid": "10462328-fe62a775-0d24-4d3a-a8d3-b3481aac7838"
                  },
                  {
                    "name": "Plan management",
                    "item": [
                      {
                        "name": "Create plan",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan_data');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('plan_change_id', response.plan_data.id);",
                                "    postman.setNextRequest('Update plan');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "28cf9044-6322-4823-8a11-88b50eddab38",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json",
                              "type": "text"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"plan_data\": {\n        \"amount\": \"100\",\n        \"interval\": 1,\n        \"name\":\"{{$randomAlphaNumeric}}\",\n        \"period\": \"month\",\n        \"retries\": 3,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-28cf9044-6322-4823-8a11-88b50eddab38"
                      },
                      {
                        "name": "Update plan",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('plan_data');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('plan_id', response.plan_data.id);",
                                "    postman.setNextRequest('Delete plan');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "aec28264-5972-4209-84dc-722bcb067c3f",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "PATCH",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"RENAME\",\n    \"plan_data\": {\n        \"name_to\":\"{{$randomWord}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans/{{plan_change_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans",
                              "{{plan_change_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-aec28264-5972-4209-84dc-722bcb067c3f"
                      },
                      {
                        "name": "Delete plan",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    postman.setNextRequest('Create first SM payment (Mexico)');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "b9a66aa3-69e5-43c8-aea2-43f91adbe35f",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "DELETE",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": ""
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurring_plans/{{plan_change_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurring_plans",
                              "{{plan_change_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b9a66aa3-69e5-43c8-aea2-43f91adbe35f"
                      }
                    ],
                    "id": "173cba06-1ef4-4686-83bd-a377dff85c1c",
                    "description": "A **Scheduled by Unlimit** subscription cannot be created without a subscription plan. A subscription plan is a set of parameters and recurrence schedule that become a basis for each new subscription. In other words - a subscription plan is a draft used for new subscription creation. Each plan has its own id and can be used multiple times to create various subscriptions. Plans can exist without subscriptions, but subscriptions cannot exist without plans.\n\n*   Merchant makes POST request in JSON format to endpoint **/api/recurring_plans** to create plan\n*   Merchant makes PATCH request in JSON format to endpoint **/api/recurring_plans/{plan_id}** to update plan\n*   Merchant makes DELETE request in JSON format to endpoint **/api/recurring_plans/{plan_id}** to delete plan",
                    "uid": "10462328-173cba06-1ef4-4686-83bd-a377dff85c1c"
                  }
                ],
                "id": "5c566f8d-cc08-49e6-af84-07601ec8b1aa",
                "uid": "10462328-5c566f8d-cc08-49e6-af84-07601ec8b1aa"
              },
              {
                "name": "Sсheduled by Merchant (SM)",
                "item": [
                  {
                    "name": "Mexico SM payments",
                    "item": [
                      {
                        "name": "Create first SM payment (Mexico)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                              "exec": [
                                ""
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('redirect_url');",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    pm.collectionVariables.set('last_sm_recurring_id', response.recurring_data.id);",
                                "    postman.setNextRequest('Get first SM payment (Mexico)');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "b8dc0dcb-dd13-4bf9-a16d-e5b0d80a7066",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"contract_number\": \"{{$randomInt}\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-b8dc0dcb-dd13-4bf9-a16d-e5b0d80a7066"
                      },
                      {
                        "name": "Get first SM payment (Mexico)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "11f786fc-381d-4e66-be6f-4d8fb64d5e81",
                              "exec": [
                                "pm.expect(pm.collectionVariables.get('last_sm_recurring_id')).to.not.be.undefined;"
                              ],
                              "type": "text/javascript"
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "1a70ddd4-3d57-4d77-a63a-a7504a4a17b2",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_sm_recurring_id'));",
                                "    ",
                                "    pm.expect(response.recurring_data).to.have.property('filing');",
                                "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                                "    ",
                                "    pm.collectionVariables.set('last_sm_filing_id', response.recurring_data.filing.id);",
                                "    ",
                                "    postman.setNextRequest('Create next SM payment (Mexico)');",
                                "});"
                              ],
                              "type": "text/javascript"
                            }
                          }
                        ],
                        "id": "e276f6af-16a8-40c1-9944-f043ef7ee1ad",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "GET",
                          "header": [],
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_sm_recurring_id}}",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings",
                              "{{last_sm_recurring_id}}"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-e276f6af-16a8-40c1-9944-f043ef7ee1ad"
                      },
                      {
                        "name": "Create next SM payment (Mexico)",
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "ac460958-2ceb-48b1-98d3-624c5c17c876",
                              "exec": [
                                "var uuid = require('uuid');",
                                "",
                                "pm.expect(pm.collectionVariables.get('last_sm_filing_id')).to.not.be.undefined;",
                                "",
                                "var merchant_order_id = uuid.v4();",
                                "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                                "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "11346c71-8220-4a06-8f44-4f2af3722ddc",
                              "exec": [
                                "pm.test(\"Successful request\", function () {",
                                "    pm.response.to.be.ok;",
                                "    pm.response.to.have.jsonBody();",
                                "",
                                "    var response = pm.response.json();",
                                "    pm.expect(response).to.have.property('recurring_data');",
                                "    pm.expect(response.recurring_data).to.have.property('id');",
                                "    ",
                                "    pm.expect(response.recurring_data).to.have.property('filing');",
                                "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                                "    ",
                                "    pm.expect(response.recurring_data.filing.id).to.equal(pm.collectionVariables.get('last_sm_filing_id'));",
                                "",
                                "    // emulate customer behaviour, performing GET request to redirect url",
                                "    pm.sendRequest(response.redirect_url, (err, res) => {",
                                "        pm.response.to.have.status(200);",
                                "    });",
                                "    ",
                                "    postman.setNextRequest('Create first SM payment');",
                                "});"
                              ],
                              "type": "text/javascript",
                              "packages": {}
                            }
                          }
                        ],
                        "id": "77455cd7-c953-47c5-9529-68ed5ab0ecaa",
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "request": {
                          "auth": {
                            "type": "bearer",
                            "bearer": [
                              {
                                "key": "0",
                                "value": {
                                  "key": "token",
                                  "type": "string",
                                  "value": "{{access_token}}"
                                },
                                "type": "any"
                              },
                              {
                                "key": "token",
                                "value": "{{access_token}}",
                                "type": "string"
                              }
                            ]
                          },
                          "method": "POST",
                          "header": [
                            {
                              "key": "Content-Type",
                              "name": "Content-Type",
                              "type": "text",
                              "value": "application/json"
                            }
                          ],
                          "body": {
                            "mode": "raw",
                            "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"mit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"contract_number\": \"{{$randomInt}}\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"filing\": {\n            \"id\": \"{{last_sm_filing_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    }\n}"
                          },
                          "url": {
                            "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                            "host": [
                              "{{UNLIMIT_API_URL}}"
                            ],
                            "path": [
                              "api",
                              "recurrings"
                            ]
                          }
                        },
                        "response": [],
                        "uid": "10462328-77455cd7-c953-47c5-9529-68ed5ab0ecaa"
                      }
                    ],
                    "id": "539deca4-0b2f-4460-b294-fb0ded4b71ef",
                    "description": "Mexican recurring payments must include parameter recurring_data.contract_number. It is contract number between customer and merchant about proceeding recurring payments.\n\nSA and SM recurring payments are available for Mexican merchants.",
                    "uid": "10462328-539deca4-0b2f-4460-b294-fb0ded4b71ef"
                  },
                  {
                    "name": "Create first SM payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf99213-c7b1-421e-81d7-eb64a793bd32",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c88243-d355-4272-bca7-8e0886750f95",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    pm.collectionVariables.set('last_sm_recurring_id', response.recurring_data.id);",
                            "    postman.setNextRequest('Get first SM payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "df5be6f4-f9e3-4ad0-9093-c19da050c783",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"cit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\"\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"pan\": \"{{CARD_3DS_CONFIRMED}}\",\n            \"holder\": \"{{$randomFullName}}\",\n            \"expiration\": \"{{expiration}}\",\n            \"security_code\": \"100\"\n        }\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-df5be6f4-f9e3-4ad0-9093-c19da050c783"
                  },
                  {
                    "name": "Get first SM payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f786fc-381d-4e66-be6f-4d8fb64d5e81",
                          "exec": [
                            "pm.expect(pm.collectionVariables.get('last_sm_recurring_id')).to.not.be.undefined;"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a70ddd4-3d57-4d77-a63a-a7504a4a17b2",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    pm.expect(response.recurring_data.id).to.equal(pm.collectionVariables.get('last_sm_recurring_id'));",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.collectionVariables.set('last_sm_filing_id', response.recurring_data.filing.id);",
                            "    ",
                            "    postman.setNextRequest('Create next SM payment');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "5f8bd733-9609-482a-9062-6a7641431a00",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "GET",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings/{{last_sm_recurring_id}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings",
                          "{{last_sm_recurring_id}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-5f8bd733-9609-482a-9062-6a7641431a00"
                  },
                  {
                    "name": "Create next SM payment",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac460958-2ceb-48b1-98d3-624c5c17c876",
                          "exec": [
                            "var uuid = require('uuid');",
                            "",
                            "pm.expect(pm.collectionVariables.get('last_sm_filing_id')).to.not.be.undefined;",
                            "",
                            "var merchant_order_id = uuid.v4();",
                            "pm.collectionVariables.set('merchant_order_id', merchant_order_id);",
                            "pm.collectionVariables.set('last_merchant_order_id', merchant_order_id);"
                          ],
                          "type": "text/javascript"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11346c71-8220-4a06-8f44-4f2af3722ddc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('recurring_data');",
                            "    pm.expect(response.recurring_data).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data).to.have.property('filing');",
                            "    pm.expect(response.recurring_data.filing).to.have.property('id');",
                            "    ",
                            "    pm.expect(response.recurring_data.filing.id).to.equal(pm.collectionVariables.get('last_sm_filing_id'));",
                            "",
                            "    // emulate customer behaviour, performing GET request to redirect url",
                            "    pm.sendRequest(response.redirect_url, (err, res) => {",
                            "        pm.response.to.have.status(200);",
                            "    });",
                            "    ",
                            "    postman.setNextRequest('Get limits for refunds and payouts');",
                            "});"
                          ],
                          "type": "text/javascript"
                        }
                      }
                    ],
                    "id": "bdbc73e9-b3ce-44e9-a226-82a9070d3fa3",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "name": "Content-Type",
                          "type": "text",
                          "value": "application/json"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{merchant_order_id}}\",\n        \"description\": \"Postman Collection Order ('{{request_name}}')\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"recurring_data\": {\n        \"initiator\": \"mit\",\n        \"scheduled_type\":\"SM\",\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"{{$randomCatchPhrase}}\",\n        \"filing\": {\n            \"id\": \"{{last_sm_filing_id}}\"\n        }\n    },\n    \"customer\": {\n        \"id\": \"{{customer_id}}\",\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/recurrings",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "recurrings"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-bdbc73e9-b3ce-44e9-a226-82a9070d3fa3"
                  }
                ],
                "id": "bc35de95-fc10-4c36-b5d3-8f7d682c16ab",
                "description": "Scheduled by **Merchant** payment have a subscription management (subscription data, **Customer** notifications, subscription schedule) on **Merchant** side. All scheduled payments by **Merchant** (first - CIT, all continue payments - MIT) must be initiated by **Merchant** API request. First and continue scheduled by **Merchant** payments must be separated in request by recurring_data. initiator parameter (CIT or MIT) in request.\n\n*   Merchant makes POST request in JSON format to endpoint **/api/recurrings** to create the first recurring payment (with 'initiator'='cit' in request)\n*   Merchant makes GET request to endpoint **/api/recurrings/{recurring_id}** to get filing id for next payments\n*   Merchant makes POST request in JSON format to endpoint **/api/recurrings**, to create the next recurring payment (with 'initiator'='mit', filing.id from previous request)\n    \n\nPCI DSS compliant **Merchants** can store the card data on their own side and make payments with card data (without filing.id). Merchants must provide recurring_data.network_trans_id for recurring payments in this case. Merchant can ask his Unlimit manager to enable this option.",
                "uid": "10462328-bc35de95-fc10-4c36-b5d3-8f7d682c16ab"
              }
            ],
            "id": "cf45aca2-17fb-49ee-8a90-7701880d857b",
            "description": "Scheduled payments are a type of **credentials-on-file (COF)** payments designed for **Merchant**s that sell goods and services to **Customers** on an ongoing basis and bill them periodically. These can be payments for online content or for access to services. **Merchant** sets up a payment schedule specifying an amount, currency and recurrence.\n\nScheduled payments are divided into two types:\n\n*   **SA** (scheduled by Unlimit). Unlimit is responsible for managing schedule (deducts funds, retry logic etc.)\n*   **SM** (scheduled by Merchant). Merchant stores the schedule of the recurring payments and sends API requests in accordance with it.",
            "uid": "10462328-cf45aca2-17fb-49ee-8a90-7701880d857b"
          }
        ],
        "id": "6d73faf0-92b3-4de4-8895-904de8408861",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('GATEWAY_POSTPONED_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_POSTPONED_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "380806e6-cf61-4810-ac28-1137fa8a370b"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "b62fc149-ae9a-4b06-b37f-e6c8f6d3c873"
            }
          }
        ],
        "uid": "10462328-6d73faf0-92b3-4de4-8895-904de8408861"
      },
      {
        "name": "Limits",
        "item": [
          {
            "name": "Get limits for refunds and payouts",
            "item": [
              {
                "name": "Get limits for refunds and payouts",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aedabcce-11d1-45a4-85cc-194d25a649de",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37d3b638-1341-4e10-9cea-ed197433e851",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "    ",
                        "    var response = pm.response.json();",
                        "        ",
                        "    pm.expect(response).to.have.property('remaining_limits');",
                        "    pm.expect(response.remaining_limits).to.have.property(pm.environment.get(\"TERMINAL_CURRENCY\"));",
                        "});"
                      ],
                      "type": "text/javascript"
                    }
                  }
                ],
                "id": "1179b036-116c-4708-9597-49539806d687",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/limits/?request_id={{$guid}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "limits",
                      ""
                    ],
                    "query": [
                      {
                        "key": "request_id",
                        "value": "{{$guid}}"
                      }
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-1179b036-116c-4708-9597-49539806d687"
              }
            ],
            "id": "a61204f1-ee95-421d-92eb-d96fd43d1c21",
            "description": "- Merchant makes GET request in JSON format to endpoint (/api/limits) to get available refunds and payouts limits, [see more](https://integration.unlimit.com/#limits)\n- Available withdrawal balance for refunds and payouts by all the currencies linked to the terminal_code from merchant authorization context.\n- When NULL for specific currency is returned - withdrawal balance for this currency is disabled\n- When 0 for specific currency is returned - remaining withdrawal balance for this currency is 0\n- Service returns previous limits value (cache value with life time - 1 second) in case when from one merchant was received more than 1 GET request per 1 second. Only successfully authorized merchant can make this kind of request.",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "c12ab5eb-9add-40c2-a62c-f9237c3a4602"
                }
              },
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "id": "0bd9e9fa-798b-4bf8-b4fe-316bb90adcd6"
                }
              }
            ],
            "uid": "10462328-a61204f1-ee95-421d-92eb-d96fd43d1c21"
          }
        ],
        "id": "af6cbcaf-cdcb-47cc-8247-9988a5745ce3",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                "var password = pm.environment.get('GATEWAY_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "6041cac0-9086-40b2-8da5-da1b092b6f36"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "d9c98208-8c8e-4232-a1a5-b4b278b560ce"
            }
          }
        ],
        "uid": "10462328-af6cbcaf-cdcb-47cc-8247-9988a5745ce3"
      },
      {
        "name": "Reports",
        "item": [
          {
            "name": "Get reports",
            "item": [
              {
                "name": "Initiate the reports’ preparation",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7025d28-923a-4a63-84f1-a97bae6797b2",
                      "exec": [
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "pm.variables.set(\"request_time\", new Date());",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fcd1b6d-2700-44a0-ad90-9ade88da6fc2",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "        try {",
                        "        pm.response.to.have.jsonBody();",
                        "        var response = pm.response.json();",
                        "        pm.expect(response).to.have.property('sample_id');",
                        "        pm.collectionVariables.set('reports_sample_id', response.sample_id);",
                        "        pm.execution.setNextRequest('Get a list of reports');",
                        "    } catch (a) {",
                        "        pm.collectionVariables.set('reports_sample_id', \"{{$guid}}\");",
                        "        pm.execution.setNextRequest('Get a list of reports');",
                        "    }",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "12c0dcac-0451-457c-ba04-719fe70de271",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"reports_data\": {\n        \"start_date\": \"2022-03-01\",\n        \"end_date\": \"2022-03-07\",\n        \"report_type\": [\"regular_settlement\",\"icpp_settlement\"]\n    }\n}\n\n"
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/reports",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "reports"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-12c0dcac-0451-457c-ba04-719fe70de271"
              },
              {
                "name": "Get a list of reports",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8471460e-9ea5-4c38-9c18-56474556ac33",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('reports_sample_id')).to.not.be.undefined;",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bb3c294-0d95-43d5-ae8a-b429ab034b9b",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    try {",
                        "        pm.response.to.be.ok;",
                        "        pm.response.to.have.jsonBody();",
                        "        var response = pm.response.json();",
                        "        pm.response.to.be.ok;",
                        "        pm.expect(response).to.have.property('sample_id');",
                        "        pm.collectionVariables.set('reports_sample_id', response.sample_id);",
                        "        postman.setNextRequest('Download report file');",
                        "    } catch(err) {",
                        "        postman.setNextRequest('Download report file');",
                        "    }",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "5682360c-5799-42a1-8f88-d51294881692",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    }
                  ],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/reports/{{reports_sample_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "reports",
                      "{{reports_sample_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-5682360c-5799-42a1-8f88-d51294881692"
              },
              {
                "name": "Download report file",
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "849eb8c8-8715-47dd-afdc-0d2395f392dd",
                      "exec": [
                        "pm.expect(pm.collectionVariables.get('reports_sample_id')).to.not.be.undefined;",
                        "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                        "var password = pm.environment.get('GATEWAY_PASSWORD');",
                        "var tokens = eval(pm.collectionVariables.get('tokens'));",
                        "tokens.obtain(terminal_code, password);",
                        "",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f956c45d-fb7b-4150-8806-f72bd68beddb",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    try {",
                        "        pm.response.to.be.ok;",
                        "    } catch(err) {",
                        "",
                        "    }",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "42679f8a-d156-43c8-88fa-366e204e2147",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "0",
                        "value": {
                          "key": "token",
                          "type": "string",
                          "value": "{{access_token}}"
                        },
                        "type": "any"
                      },
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json",
                      "type": "text"
                    },
                    {
                      "key": "Accept",
                      "value": "application/octet-stream",
                      "type": "text"
                    }
                  ],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/reports/download/{{reports_sample_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "reports",
                      "download",
                      "{{reports_sample_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-42679f8a-d156-43c8-88fa-366e204e2147"
              }
            ],
            "id": "d409c8ad-81f3-404a-b020-bafda61553d0",
            "description": "*   Merchant makes POST request in JSON format to endpoint (/api/reports) to initiate preparation of reports files\n*   Only successfully authorized merchant can make this kind of request\n*   If files of reports according to POST request's parameters are not found, then the empty array is returned in response to POST request\n*   Merchant makes GET request in JSON format to endpoint (/api/reports/{sample_id}) to get a list of reports with links to files' downloading\n*   Merchant makes GET request in JSON format to endpoint (/api/reports/download/{id}) to download files of report’s\n*   All report files (in archive) or single report file can be downloaded\n*   To download report file the request header 'Accept' must be set to 'application/octet-stream'",
            "uid": "10462328-d409c8ad-81f3-404a-b020-bafda61553d0"
          }
        ],
        "id": "fd09d877-69f4-48e5-8014-21c78281a62a",
        "uid": "10462328-fd09d877-69f4-48e5-8014-21c78281a62a"
      },
      {
        "name": "Invoices",
        "item": [
          {
            "name": "Create invoice (single-use)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c07165e8-1fc5-4149-a9cc-1c56675d3cb6",
                  "exec": [
                    "",
                    "var today = new Date();",
                    "var tomorrow = new Date(today);",
                    "tomorrow.setDate(tomorrow.getDate() + 2);",
                    "pm.collectionVariables.set('invoice_end_date', tomorrow.toISOString().split('.')[0]+ 'Z');"
                  ],
                  "type": "text/javascript"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad38ca0d-8c08-4798-b2d5-5d6e28d72e48",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    pm.expect(response).to.have.property('invoice_url');",
                    "});",
                    "pm.collectionVariables.set('invoice_id', pm.response.json().invoice_data.id);"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "id": "6c48878e-5af7-453d-8a05-898a2256afae",
            "protocolProfileBehavior": {
              "followAuthorizationHeader": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json",
                  "type": "text"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"invoice_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"expire_at\": \"{{invoice_end_date}}\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"items\": [\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"10\",\n                \"count\": 1\n            },\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"2.34\",\n                \"count\": 1\n            }\n        ]\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"payment_methods\": [\n        \"BANKCARD\"\n    ]\n}\n"
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices"
                ]
              },
              "description": "*   Merchant makes POST request in JSON format to endpoint **/api/invoice** to create a new invoice\n*   Merchant receives a response with invoice URL, merchant can provide URL via email, any messenger, sms or other way to a cardholder for payment.\n*   Merchant makes GET request in JSON format to endpoint (/api/invoices/{invoice_id}) for getting information about invoice by invoice id\n*   Merchant receives GET response about invoice result information"
            },
            "response": [],
            "uid": "10462328-6c48878e-5af7-453d-8a05-898a2256afae"
          },
          {
            "name": "Get invoice by invoice id (single-use)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f30e1ea-8670-4817-b4da-8e4aa9c7d54a",
                  "exec": [
                    "pm.expect(pm.collectionVariables.get('invoice_id')).to.not.be.undefined;",
                    "",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04b2a808-aa5b-46a0-bba9-b632938bdfd8",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "",
                    "    var response = pm.response.json();",
                    "",
                    "    pm.expect(response).to.have.property('invoice_data');",
                    "    pm.expect(response.invoice_data).to.have.property('id');",
                    "    pm.expect(response.invoice_data.id).to.equal(pm.collectionVariables.get('invoice_id'));",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "id": "0573e7b6-2479-42ca-8ade-354ea1851083",
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "type": "string",
                      "value": "{{access_token}}"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices/{{invoice_id}}",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices",
                  "{{invoice_id}}"
                ]
              }
            },
            "response": [],
            "uid": "10462328-0573e7b6-2479-42ca-8ade-354ea1851083"
          },
          {
            "name": "Create invoice (re-usable)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c07165e8-1fc5-4149-a9cc-1c56675d3cb6",
                  "exec": [
                    "",
                    "var today = new Date();",
                    "var tomorrow = new Date(today);",
                    "tomorrow.setDate(tomorrow.getDate() + 2);",
                    "pm.collectionVariables.set('invoice_end_date', tomorrow.toISOString().split('.')[0]+ 'Z');"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad38ca0d-8c08-4798-b2d5-5d6e28d72e48",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    pm.expect(response).to.have.property('invoice_url');",
                    "});",
                    "pm.collectionVariables.set('invoice_id_reuse', pm.response.json().invoice_data.id);"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              }
            ],
            "id": "6f585c16-9349-4ec9-beff-e993a2c9fe5a",
            "protocolProfileBehavior": {
              "followAuthorizationHeader": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "type": "text"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"invoice_data\": {\n        \"amount\": \"12.34\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"expire_at\": \"{{invoice_end_date}}\",\n        \"reusable\": true,\n        \"reuse_count\": \"5\"\n    },\n    \"merchant_order\": {\n        \"id\": \"{{$randomUUID}}\",\n        \"items\": [\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"10\",\n                \"count\": 1\n            },\n            {\n                \"name\": \"{{$randomNoun}}\",\n                \"price\": \"2.34\",\n                \"count\": 1\n            }\n        ]\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\"\n    },\n    \"payment_methods\": [\n        \"BANKCARD\"\n    ]\n}"
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices"
                ]
              },
              "description": "*   Merchant makes POST request in JSON format to endpoint **/api/invoice** to create a new invoice\n*   Merchant receives a response with invoice URL, merchant can provide URL via email, any messenger, sms or other way to a cardholder for payment.\n*   Merchant makes GET request in JSON format to endpoint (/api/invoices/{invoice_id}) for getting information about invoice by invoice id\n*   Merchant receives GET response about invoice result information"
            },
            "response": [],
            "uid": "10462328-6f585c16-9349-4ec9-beff-e993a2c9fe5a"
          },
          {
            "name": "Get invoice by invoice id (re-usable)",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f30e1ea-8670-4817-b4da-8e4aa9c7d54a",
                  "exec": [
                    "pm.expect(pm.collectionVariables.get('invoice_id')).to.not.be.undefined;",
                    "",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04b2a808-aa5b-46a0-bba9-b632938bdfd8",
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "",
                    "    var response = pm.response.json();",
                    "",
                    "    pm.expect(response).to.have.property('invoice_data');",
                    "    pm.expect(response.invoice_data).to.have.property('id');",
                    "    pm.expect(response.invoice_data.id).to.equal(pm.collectionVariables.get('invoice_id_reuse'));",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {}
                }
              }
            ],
            "id": "c3f9f151-d6b9-4388-8741-763788a66d4e",
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "type": "string",
                      "value": "{{access_token}}"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/invoices/{{invoice_id_reuse}}",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "invoices",
                  "{{invoice_id_reuse}}"
                ]
              }
            },
            "response": [],
            "uid": "10462328-c3f9f151-d6b9-4388-8741-763788a66d4e"
          }
        ],
        "id": "1f54d238-1bee-437a-b9c6-6e1462b63d04",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "type": "text/javascript",
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());",
                "",
                "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');",
                "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');",
                "",
                "var tokens = eval(pm.collectionVariables.get('tokens'));",
                "tokens.obtain(terminal_code, password);"
              ],
              "id": "0a62195c-1c47-4ee1-b650-7488f6022a40"
            }
          },
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "id": "b5b40044-c877-490e-853e-edc541ab13b6"
            }
          }
        ],
        "uid": "10462328-1f54d238-1bee-437a-b9c6-6e1462b63d04"
      },
      {
        "name": "Payment authentication",
        "item": [
          {
            "name": "Server-to-server mode",
            "item": [
              {
                "name": "Frictionless flow",
                "item": [
                  {
                    "name": "Create authentication with 3-D secure (frictionless flow)",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb41ef1-729c-4586-93c0-f3f8b4c8a015",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6634c58c-32e0-4e13-8b74-626f310499de",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('authentication_data');",
                            "    pm.expect(response.authentication_data).to.have.property('id');",
                            "  ",
                            "    postman.setNextRequest('Create authentication with 3-D secure (challenge flow)');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "8e4a818e-a284-4b90-ba38-a434e94015d6",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_FRICTIONLESS_CONFIRMED}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_PA\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "authentication"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-8e4a818e-a284-4b90-ba38-a434e94015d6"
                  }
                ],
                "id": "9625bec4-3b26-448e-8d15-73c062606e1c",
                "uid": "10462328-9625bec4-3b26-448e-8d15-73c062606e1c"
              },
              {
                "name": "Challenge flow",
                "item": [
                  {
                    "name": "Create authentication with 3-D secure (challenge flow)",
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2603fce5-9daa-4ec0-9422-fa16538abe1b",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    pm.response.to.have.jsonBody();",
                            "    ",
                            "    var response = pm.response.json();",
                            "    pm.expect(response).to.have.property('redirect_url');",
                            "    pm.expect(response).to.have.property('CReq');",
                            "    pm.expect(response).to.have.property('id');",
                            "",
                            "    pm.collectionVariables.set('creq', response.CReq);",
                            "    pm.collectionVariables.set('auth_id_to_complete_3ds', response.id);",
                            "",
                            "    pm.execution.setNextRequest('Send CReq to ACS for authentication');",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3bfd00-9ccb-4c22-88aa-353d2f8a65c3",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "488fc7b9-7366-4411-92d6-74b28a9c75d6",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "POST",
                      "header": [],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{CUSTOMER_EMAIL}}\",\n        \"ip\": \"{{$randomIP}}\",\n        \"locale\": \"en\",\n        \"user_agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 17_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1.2 Mobile/15E148 Safari/604.\",\n        \"browser_info\": {\n            \"color_depth\": 48,\n            \"screen_height\": \"800\",\n            \"screen_width\": \"1440\",\n            \"java_enabled\": false,\n            \"java_script_enabled\": true,\n            \"language\": \"en-US\",\n            \"time_zone\": \"300\",\n            \"accept_header\": \"*/\"\n        }\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_PA\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\",\n    \"return_urls\": {\n        \"return_url\": \"https://yourwebhook.site\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "authentication"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-488fc7b9-7366-4411-92d6-74b28a9c75d6"
                  },
                  {
                    "name": "Send CReq to ACS for authentication",
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f3d9c6-11dc-41da-9e36-9e8afcdacd34",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    pm.response.to.be.ok;",
                            "    ",
                            "    pm.execution.setNextRequest('Complete authentication with CRes');",
                            "})"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "0bc73ae9-21f2-4a64-aade-e7fd342219c6",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "method": "POST",
                      "header": [],
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/sandbox-emulator/3ds2/browserCReqS2S?creq={{creq}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "sandbox-emulator",
                          "3ds2",
                          "browserCReqS2S"
                        ],
                        "query": [
                          {
                            "key": "creq",
                            "value": "{{creq}}"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-0bc73ae9-21f2-4a64-aade-e7fd342219c6"
                  },
                  {
                    "name": "Complete authentication with CRes",
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c319631-48ce-42d5-a6cf-eb1cee2f0ed1",
                          "exec": [
                            ""
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cd3c7c-2cef-446e-877d-65af8ceebdfc",
                          "exec": [
                            "pm.test(\"Successful request\", function () {",
                            "    try {",
                            "        pm.response.to.be.ok;",
                            "        pm.response.to.have.jsonBody();",
                            "        ",
                            "        var response = pm.response.json();",
                            "        console.log(response);",
                            "        pm.expect(response).to.have.property('authentication_data');",
                            "        pm.expect(response.authentication_data).to.have.property('id'); ",
                            "    } catch(err) {",
                            "",
                            "    }",
                            "});"
                          ],
                          "type": "text/javascript",
                          "packages": {}
                        }
                      }
                    ],
                    "id": "8fd7795d-3053-4d4f-87aa-7165d96f4e57",
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "request": {
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "key": "0",
                            "value": {
                              "key": "token",
                              "type": "string",
                              "value": "{{access_token}}"
                            },
                            "type": "any"
                          },
                          {
                            "key": "token",
                            "value": "{{access_token}}",
                            "type": "string"
                          }
                        ]
                      },
                      "method": "PATCH",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json",
                          "type": "text"
                        }
                      ],
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"operation\": \"CONFIRM_3DS\",\n    \"CRes\": \"{{creq}}\"\n}"
                      },
                      "url": {
                        "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{auth_id_to_complete_3ds}}",
                        "host": [
                          "{{UNLIMIT_API_URL}}"
                        ],
                        "path": [
                          "api",
                          "authentication",
                          "{{auth_id_to_complete_3ds}}"
                        ]
                      }
                    },
                    "response": [],
                    "uid": "10462328-8fd7795d-3053-4d4f-87aa-7165d96f4e57"
                  }
                ],
                "id": "a7956c1c-3d48-4422-910b-6b4aedce8bac",
                "uid": "10462328-a7956c1c-3d48-4422-910b-6b4aedce8bac"
              }
            ],
            "id": "211d29d9-56aa-4abd-bbaf-0311372f7392",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca107f4e-de01-4390-a0d4-1a2f8ab019cc",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var terminal_code = pm.environment.get('S2S_TERMINAL_CODE');",
                    "var password = pm.environment.get('S2S_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8215f496-47ca-4a36-96c5-b06f09099fd5",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "uid": "10462328-211d29d9-56aa-4abd-bbaf-0311372f7392"
          },
          {
            "name": "Gateway mode",
            "item": [
              {
                "name": "Create 3-D Secure payment authentication (gateway mode)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2603fce5-9daa-4ec0-9422-fa16538abe1b",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('payment_authentication_id', response.authentication_data.id);",
                        "",
                        "",
                        "",
                        "    postman.setNextRequest('Create AVS authentication (gateway mode)');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "2305c58c-5db7-493b-b9b2-1a35f47b1649",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{$randomEmail}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_PA\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-2305c58c-5db7-493b-b9b2-1a35f47b1649"
              },
              {
                "name": "Create AVS authentication (gateway mode)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2603fce5-9daa-4ec0-9422-fa16538abe1b",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('avs_authentication_id', response.authentication_data.id);",
                        "",
                        "    postman.setNextRequest('Create 3-D Secure non-payment authentication (gateway mode)');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "41f3a0d1-d5a7-4e6e-8605-7232ac0ce620",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        },\n        \"billing_address\": {\n            \"addr_line_1\": \"221b, Baker Street\",\n            \"addr_line_2\": \"\",\n            \"city\": \"London\",\n            \"country\": \"GB\",\n            \"state\": \"\",\n            \"zip\": \"NW1 6XE1\"\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{$randomEmail}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"AVS\",\n        \"amount\": 20.00,\n        \"currency\": \"{{TERMINAL_CURRENCY}}\",\n        \"note\": \"Order note\"\n    },\n    \"payment_method\": \"BANKCARD\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-41f3a0d1-d5a7-4e6e-8605-7232ac0ce620"
              },
              {
                "name": "Create 3-D Secure non-payment authentication (gateway mode)",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95ee2f98-087e-410f-ae0e-4683a9255f76",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('redirect_url');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "    pm.collectionVariables.set('non_payment_authentication_id', response.authentication_data.id);",
                        "",
                        "   ",
                        "",
                        "    postman.setNextRequest('Get 3-D Secure payment authentication');",
                        "});"
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "cd9cd710-434f-4503-b5c0-3fadde650ed8",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "POST",
                  "header": [],
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"request\": {\n        \"id\": \"{{$guid}}\",\n        \"time\": \"{{request_time}}\"\n    },\n    \"card_account\": {\n        \"card\": {\n            \"expiration\": \"{{expiration}}\",\n            \"holder\": \"{{$randomBankAccountName}}\",\n            \"pan\": \"{{CARD_3DS_CHALLENGE_CONFIRMED_VISA}}\",\n            \"security_code\": 123\n        }\n    },\n    \"customer\": {\n        \"email\": \"{{$randomEmail}}\",\n        \"phone\": \"{{$randomPhoneNumber}}\"\n    },\n    \"merchant_order\": {\n        \"description\": \"{{$randomLoremWord}}\",\n        \"id\": \"{{$randomUUID}}\"\n    },\n    \"authentication_data\": {\n        \"type\": \"3DS_NPA\",\n        \"currency\": \"{{TERMINAL_CURRENCY}}\"\n    },\n    \"payment_method\": \"BANKCARD\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  },
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-cd9cd710-434f-4503-b5c0-3fadde650ed8"
              },
              {
                "name": "Get 3-D Secure payment authentication",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07ec6fc7-becb-4070-8797-96e72aefc202",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('authentication_data');",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "",
                        "",
                        "    postman.setNextRequest('Get AVS authentication');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "b5882fb3-fc2d-4091-b946-e67424622f62",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{payment_authentication_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication",
                      "{{payment_authentication_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-b5882fb3-fc2d-4091-b946-e67424622f62"
              },
              {
                "name": "Get AVS authentication",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07ec6fc7-becb-4070-8797-96e72aefc202",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('authentication_data');",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "  ",
                        "    postman.setNextRequest('Get 3-D Secure non-payment authentication');",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "0f4e93a6-6cc4-4490-9ff6-f130ee52c490",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{avs_authentication_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication",
                      "{{avs_authentication_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-0f4e93a6-6cc4-4490-9ff6-f130ee52c490"
              },
              {
                "name": "Get 3-D Secure non-payment authentication",
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b37e8a10-c92c-4e8c-a0d5-61289f39a843",
                      "exec": [
                        "pm.test(\"Successful request\", function () {",
                        "    pm.response.to.be.ok;",
                        "    pm.response.to.have.jsonBody();",
                        "",
                        "    var response = pm.response.json();",
                        "    pm.expect(response).to.have.property('authentication_data');",
                        "",
                        "    pm.expect(response.authentication_data.id).to.not.be.undefined;",
                        "});",
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebd8a791-f2c1-4e4a-a5fd-4241f611c91a",
                      "exec": [
                        ""
                      ],
                      "type": "text/javascript",
                      "packages": {}
                    }
                  }
                ],
                "id": "27b57137-8c01-4443-9855-99d7544ad7ba",
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "request": {
                  "auth": {
                    "type": "bearer",
                    "bearer": [
                      {
                        "key": "token",
                        "value": "{{access_token}}",
                        "type": "string"
                      }
                    ]
                  },
                  "method": "GET",
                  "header": [],
                  "url": {
                    "raw": "{{UNLIMIT_API_URL}}/api/authentication/{{non_payment_authentication_id}}",
                    "host": [
                      "{{UNLIMIT_API_URL}}"
                    ],
                    "path": [
                      "api",
                      "authentication",
                      "{{non_payment_authentication_id}}"
                    ]
                  }
                },
                "response": [],
                "uid": "10462328-27b57137-8c01-4443-9855-99d7544ad7ba"
              }
            ],
            "id": "92307e3b-3248-4a54-a2b8-a0fe80bd4e83",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c72d533-42fb-4997-a482-e885e87c11f6",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var terminal_code = pm.environment.get('GATEWAY_TERMINAL_CODE');",
                    "var password = pm.environment.get('GATEWAY_PASSWORD');",
                    "",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));",
                    "tokens.obtain(terminal_code, password);"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c24d077-f26b-4ddb-a2fd-4f1548048b8a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "uid": "10462328-92307e3b-3248-4a54-a2b8-a0fe80bd4e83"
          }
        ],
        "id": "6075afd6-c8d1-4578-8433-568fc87868c5",
        "description": "The authentication service implements three types of authentication to cater to different security needs:\n\n- **3-D Secure Payment Authentication (3DS PA)** - This adds an extra layer of security for online card transactions.\n    \n- **3-D Secure Non-Payment Authentication (3DS NPA)** - This is used for securing non-payment activities that require customer authentication. This method ensures that any sensitive action, such as updating account information, accessing secure areas of a website, or changing customer settings, is performed by the authorized user.\n    \n- **Address Verification System (AVS)** - This system verifies the address provided by the customer during the payment process. It matches the billing address submitted with the address on file at the issuing bank. This helps in detecting and preventing fraudulent transactions.\n    \n\n3DS PA and 3DS NPA are available in Payment page, Gateway, Server-to-server modes. AVS is available in Payment page, Gateway modes",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e76e8db-a4fc-43d0-8fc9-2b5d3a3661f7",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "var moment = require('moment');",
                "pm.variables.set(\"request_time\", moment().toISOString());"
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bf45b25-f79f-4a80-9639-a987d5aceb16",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ]
            }
          }
        ],
        "uid": "10462328-6075afd6-c8d1-4578-8433-568fc87868c5"
      },
      {
        "name": "Account details (APMs)",
        "item": [
          {
            "name": "Get Account details Pix",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "e1e835bb-5d91-4b7e-8eef-f41642b95a91"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "82302b69-ea40-49d6-9ca5-23ff2cb71000"
                }
              }
            ],
            "id": "72704f1b-2291-441c-95fc-ab9bc5ade6a7",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"customer_identity\": \"03281811370\"\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/pix",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "pix"
                ]
              }
            },
            "response": [],
            "uid": "10462328-72704f1b-2291-441c-95fc-ab9bc5ade6a7"
          },
          {
            "name": "Get Account details Dimo",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "83f92d40-9686-4d05-a9f3-848c16d0d158"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('customer');",
                    "        pm.expect(response.customer).to.have.property('clabe');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "0c5344a5-0d78-44f3-819d-38390cc5e9e4"
                }
              }
            ],
            "id": "e6fef8b0-4ded-42fc-8ddf-7bd15a2fcd09",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"type\": \"phoneNumber\",\n            \"value\": \"998121214\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/dimo",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "dimo"
                ]
              }
            },
            "response": [],
            "uid": "10462328-e6fef8b0-4ded-42fc-8ddf-7bd15a2fcd09"
          },
          {
            "name": "Get Account details banktransfersidr",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "ab3b60b9-39b5-4cc8-b417-bfc03c2079b2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "5ea88cb3-e8e3-4b88-b9ab-37cc45a89254"
                }
              }
            ],
            "id": "dd207551-9812-494e-8ae7-7bd362bb38e4",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/banktransfersidr",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "banktransfersidr"
                ]
              }
            },
            "response": [],
            "uid": "10462328-dd207551-9812-494e-8ae7-7bd362bb38e4"
          },
          {
            "name": "Get Account details danawallet",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "918825b1-6782-4016-8005-17f215c4343d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "b64f2a4c-dfd4-44a4-a6a4-8cbc0f380f25"
                }
              }
            ],
            "id": "754397b0-057b-4a06-ba7a-cd5bf778eb96",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/danawallet",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "danawallet"
                ]
              }
            },
            "response": [],
            "uid": "10462328-754397b0-057b-4a06-ba7a-cd5bf778eb96"
          },
          {
            "name": "Get Account details ovo",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "a9fff9e6-ad8d-4498-b8dc-38390eb57faf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "b25ed5d9-fe0b-47bf-8777-ca76bb36d777"
                }
              }
            ],
            "id": "ad6b77e4-2a9a-4ccd-9e42-472b6bbb864c",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/ovo",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "ovo"
                ]
              }
            },
            "response": [],
            "uid": "10462328-ad6b77e4-2a9a-4ccd-9e42-472b6bbb864c"
          },
          {
            "name": "Get Account details linkaja",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "f300c7cd-86fa-4969-867d-104661f4321e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "c68bf5b1-04c6-4f18-a378-68af77369de9"
                }
              }
            ],
            "id": "362c1599-9fb2-4f7e-98df-09d657011903",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/linkaja",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "linkaja"
                ]
              }
            },
            "response": [],
            "uid": "10462328-362c1599-9fb2-4f7e-98df-09d657011903"
          },
          {
            "name": "Get Account details shopeepay",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "01bc5986-d980-4ad8-a298-4bb78a933847"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "babb65aa-7697-44eb-ae61-63c9c6de1bd6"
                }
              }
            ],
            "id": "74ea8bc5-04ae-4feb-8102-676f622a496c",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/shopeepay",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "shopeepay"
                ]
              }
            },
            "response": [],
            "uid": "10462328-74ea8bc5-04ae-4feb-8102-676f622a496c"
          },
          {
            "name": "Get Account details banktransfersidr",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "fa823707-cb88-42ce-bc11-cfc4f0520b1d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "6f8178cc-7120-4fb6-879f-fdf460b8c395"
                }
              }
            ],
            "id": "b2181c46-749e-42c2-a069-77a5ae8ddbb2",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/banktransfersidr",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "banktransfersidr"
                ]
              }
            },
            "response": [],
            "uid": "10462328-b2181c46-749e-42c2-a069-77a5ae8ddbb2"
          },
          {
            "name": "Get Account details danawallet",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "11592d27-22ed-43da-99f9-a530237f9283"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "44ae45d1-02cd-4454-860f-10b96134488d"
                }
              }
            ],
            "id": "3c271046-3f9b-4ffe-8442-eb12e7b78754",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/danawallet",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "danawallet"
                ]
              }
            },
            "response": [],
            "uid": "10462328-3c271046-3f9b-4ffe-8442-eb12e7b78754"
          },
          {
            "name": "Get Account details ovo",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "ecdce2f8-ac64-4da4-ab2f-e36bfead6a0c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "30ee804e-d4ae-4417-acaa-1949102c6fd1"
                }
              }
            ],
            "id": "1e4b365b-39e8-407c-a0e7-1af83e4d09dc",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/ovo",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "ovo"
                ]
              }
            },
            "response": [],
            "uid": "10462328-1e4b365b-39e8-407c-a0e7-1af83e4d09dc"
          },
          {
            "name": "Get Account details linkaja",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "cab60c1f-c986-4658-8292-b0cdb7926e33"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "c4e95e0e-4a16-4ce4-96e8-6ea0faa9b6a7"
                }
              }
            ],
            "id": "62d45dec-8325-4c7e-982b-0a1f01379bf0",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/linkaja",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "linkaja"
                ]
              }
            },
            "response": [],
            "uid": "10462328-62d45dec-8325-4c7e-982b-0a1f01379bf0"
          },
          {
            "name": "Get Account details shopeepay",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "4c18397a-ddcc-48ef-8e53-1e4ec1809d2f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('ewallet_account');",
                    "            pm.expect(response.ewallet_account).to.have.property('id');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "8e90bc52-2f51-4a99-aab0-4c372ae2f34f"
                }
              }
            ],
            "id": "ad308a37-bdd7-4c72-965d-7deeb654ce7d",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n    \"account_info\": [\n        {\n            \"id\": \"087783146495\",\n            \"bank_code\": \"008\"\n        }\n    ]\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/account_details/shopeepay",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "account_details",
                  "shopeepay"
                ]
              }
            },
            "response": [],
            "uid": "10462328-ad308a37-bdd7-4c72-965d-7deeb654ce7d"
          }
        ],
        "id": "4f8bb3ec-34d3-42ad-9217-856f5b053ef6",
        "uid": "10462328-4f8bb3ec-34d3-42ad-9217-856f5b053ef6"
      },
      {
        "name": "Get banks (APMs)",
        "item": [
          {
            "name": "Banks list. Bank transfer Indonesia. IDR",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "8aa4e92f-2d33-475d-b8fe-6dcecf885bc3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "324eacf0-ef6a-4bc4-bf63-1b13ee1534e0"
                }
              }
            ],
            "id": "53bd8910-cfd4-4f55-9167-ae49ad689e92",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/banktransfersidr/idr",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "banktransfersidr",
                  "idr"
                ]
              }
            },
            "response": [],
            "uid": "10462328-53bd8910-cfd4-4f55-9167-ae49ad689e92"
          },
          {
            "name": "Banks list. Bank transfer Colombia. COP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "e017c740-db12-4f26-901f-0f066ab89ee9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "4a928698-9d33-46ce-9f96-ea1d503b47cd"
                }
              }
            ],
            "id": "2ceee326-3e2f-4ccf-9c89-4df7282b1a14",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/banktransferscop/cop",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "banktransferscop",
                  "cop"
                ]
              }
            },
            "response": [],
            "uid": "10462328-2ceee326-3e2f-4ccf-9c89-4df7282b1a14"
          },
          {
            "name": "Banks list. Bank Transfer Philippines. PHP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "8ee8dd3d-ddae-4df4-8d6f-7d246bff51ed"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "9fc1c542-0fc7-4038-8415-1bb1c1a623b3"
                }
              }
            ],
            "id": "44c65f16-27a6-4145-9c38-207926ff30e1",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/banktransfersphp/php",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "banktransfersphp",
                  "php"
                ]
              }
            },
            "response": [],
            "uid": "10462328-44c65f16-27a6-4145-9c38-207926ff30e1"
          },
          {
            "name": "Banks list. Directbankingnga. NGN",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "95d6b0ff-3cf6-48e7-9d84-308fcf558048"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "6600853a-c469-41cf-90d2-d52a2e05ba75"
                }
              }
            ],
            "id": "7099a14f-0c0d-4983-8a00-5769a15d7a78",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/directbankingnga/ngn",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "directbankingnga",
                  "ngn"
                ]
              }
            },
            "response": [],
            "uid": "10462328-7099a14f-0c0d-4983-8a00-5769a15d7a78"
          },
          {
            "name": "Banks list. PSE. COP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "f2641028-4c2c-43b8-96a2-a6cfb77aa820"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "ad706cac-9562-47d2-8cfe-80c7951fcfbd"
                }
              }
            ],
            "id": "3780fb45-964e-4643-99f8-4dcd958de62d",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/pse/cop",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "pse",
                  "cop"
                ]
              }
            },
            "response": [],
            "uid": "10462328-3780fb45-964e-4643-99f8-4dcd958de62d"
          },
          {
            "name": "Banks list. InstaPay Philippines. PHP",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "af8f487d-13d6-4112-a4d4-6c9710381854"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "38709b35-989f-442c-b054-05255fe67f6f"
                }
              }
            ],
            "id": "105ae677-6c79-4ab6-9d74-48ac9d4c6bf7",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/instaph/php",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "instaph",
                  "php"
                ]
              }
            },
            "response": [],
            "uid": "10462328-105ae677-6c79-4ab6-9d74-48ac9d4c6bf7"
          },
          {
            "name": "Banks list. P24. EUR",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "272e5467-9fe6-4568-9640-c2a6672ed8f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "3d9a5d88-1e12-45be-a683-e863cd02444b"
                }
              }
            ],
            "id": "de7b3a00-1b81-47f8-9b99-20ddf2768388",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/p24/eur",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "p24",
                  "eur"
                ]
              }
            },
            "response": [],
            "uid": "10462328-de7b3a00-1b81-47f8-9b99-20ddf2768388"
          },
          {
            "name": "Banks list. Openbanking. EUR. Country",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "96b7318f-48c1-4199-9397-edb4be74a5c3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "61b3b455-931f-4503-becf-e106c38ccfc6"
                }
              }
            ],
            "id": "5fddde4f-ddc0-4875-bf52-2a797a684e33",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/openbanking/eur?country=de",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "openbanking",
                  "eur"
                ],
                "query": [
                  {
                    "key": "country",
                    "value": "de"
                  }
                ]
              }
            },
            "response": [],
            "uid": "10462328-5fddde4f-ddc0-4875-bf52-2a797a684e33"
          },
          {
            "name": "Banks list. Ideal. EUR",
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "exec": [
                    "var uuid = require('uuid');\r",
                    "\r",
                    "var terminal_code = pm.environment.get('PAYMENTPAGE_TERMINAL_CODE');\r",
                    "var password = pm.environment.get('PAYMENTPAGE_PASSWORD');\r",
                    "\r",
                    "var tokens = eval(pm.collectionVariables.get('tokens'));\r",
                    "tokens.obtain(terminal_code, password);"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "4230b29b-4abc-4b23-9feb-89080e2ffcce"
                }
              },
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Successful request\", function () {",
                    "    pm.response.to.be.ok;",
                    "    pm.response.to.have.jsonBody();",
                    "    ",
                    "    var response = pm.response.json();",
                    "    ",
                    "    pm.expect(response).to.have.property('bank_list');",
                    "});"
                  ],
                  "type": "text/javascript",
                  "packages": {},
                  "id": "942cb0dc-b19b-41e1-86a1-53e4841d6bc2"
                }
              }
            ],
            "id": "5b0d5f8e-d5d6-462f-988d-34fc568c62a3",
            "protocolProfileBehavior": {
              "strictSSL": false,
              "disableBodyPruning": true
            },
            "request": {
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "key": "0",
                    "value": {
                      "key": "token",
                      "value": "{{access_token}}",
                      "type": "string"
                    },
                    "type": "any"
                  },
                  {
                    "key": "token",
                    "value": "{{access_token}}",
                    "type": "string"
                  }
                ]
              },
              "method": "GET",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{UNLIMIT_API_URL}}/api/banks/ideal/eur",
                "host": [
                  "{{UNLIMIT_API_URL}}"
                ],
                "path": [
                  "api",
                  "banks",
                  "ideal",
                  "eur"
                ]
              }
            },
            "response": [],
            "uid": "10462328-5b0d5f8e-d5d6-462f-988d-34fc568c62a3"
          }
        ],
        "id": "d65f63e5-c643-4229-a4f7-05f7added957",
        "uid": "10462328-d65f63e5-c643-4229-a4f7-05f7added957"
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "d0debad4-8df5-4923-92a3-5e843a26f596",
          "type": "text/javascript",
          "exec": [
            "var moment = require('moment');",
            "",
            "pm.variables.set('request_name', pm.info.requestName);",
            "pm.variables.set('expiration', moment().add(1, 'year').format('MM/YYYY'));",
            "pm.variables.set('customer_id', \"{{$randomUserName}}\");",
            "",
            "pm.collectionVariables.set('tokens', '(' + function () {",
            "    return {",
            "        obtain: function (terminal_code, password) {",
            "            var unlimit_api_url = pm.environment.get('UNLIMIT_API_URL');",
            "",
            "            pm.sendRequest({",
            "                url: `${unlimit_api_url}/api/auth/token`,",
            "                method: 'POST',",
            "                header: 'Content-Type:application/x-www-form-urlencoded',",
            "                body: {",
            "                    mode: 'raw',",
            "                    raw: `grant_type=password&terminal_code=${terminal_code}&password=${password}`",
            "                }",
            "",
            "            }, (err, res) => {",
            "                if (err || res.code !== 200) {",
            "                    throw new Error('Authentication Error');",
            "                }",
            "",
            "                var response = res.json();",
            "                pm.variables.set('access_token', response.access_token);",
            "            });",
            "        }",
            "    }",
            "} + ')();');"
          ]
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "f789f9ab-fdf9-4bdb-9a5a-5734482b769c",
          "type": "text/javascript",
          "exec": [
            ""
          ]
        }
      }
    ]
  }
}
